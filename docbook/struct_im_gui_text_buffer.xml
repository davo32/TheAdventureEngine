<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_struct_im_gui_text_buffer" xml:lang="en-US">
<title>ImGuiTextBuffer Struct Reference</title>
<indexterm><primary>ImGuiTextBuffer</primary></indexterm>
<para>
<computeroutput>#include &lt;imgui.h&gt;</computeroutput>
</para>
Collaboration diagram for ImGuiTextBuffer:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_im_gui_text_buffer__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_struct_im_gui_text_buffer_1a4c4369c5e65f591554428b947c498d0d">ImGuiTextBuffer</link> ()</para>
</listitem>
            <listitem><para>char <link linkend="_struct_im_gui_text_buffer_1a13748a5db12eb77d716d0347a552b310">operator[]</link> (int i) const</para>
</listitem>
            <listitem><para>const char * <link linkend="_struct_im_gui_text_buffer_1ad971435d81bc0b957cdb59f5d58eaacd">begin</link> () const</para>
</listitem>
            <listitem><para>const char * <link linkend="_struct_im_gui_text_buffer_1a5c911f7c2374237b1befb2bf6ba74565">end</link> () const</para>
</listitem>
            <listitem><para>int <link linkend="_struct_im_gui_text_buffer_1a2811fcd43e0224eb3bd0f3464b634289">size</link> () const</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_im_gui_text_buffer_1affd606443a661cd0fcce0d381bc8cf98">empty</link> () const</para>
</listitem>
            <listitem><para><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_gui_text_buffer_1a9e4edc9f950bc9e35d5c3b3071dbc0df">clear</link> ()</para>
</listitem>
            <listitem><para><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_gui_text_buffer_1a3271f361e0f1997f4c3eb77665fdf161">reserve</link> (int capacity)</para>
</listitem>
            <listitem><para>const char * <link linkend="_struct_im_gui_text_buffer_1ac78a076eb21b9c4ec532eb5109c84a64">c_str</link> () const</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_gui_text_buffer_1a9101840866a9e5408ea1e25a779a40dc">append</link> (const char *str, const char *str_end=NULL)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_gui_text_buffer_1a1c5892db030c5364823793f472754c9e">appendf</link> (const char *fmt,...) <link linkend="_imgui_8h_1a1251c2f9ddac0873dbad8181bd82c9f1">IM_FMTARGS</link>(2)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_gui_text_buffer_1ac8a6b11834c4cee8113bf6950e66112e">appendfv</link> (const char *fmt, va_list args) <link linkend="_imgui_8h_1a047693beb7f899f5deab1e20202016b3">IM_FMTLIST</link>(2)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para><link linkend="_struct_im_vector">ImVector</link>&lt; char &gt; <link linkend="_struct_im_gui_text_buffer_1aa6de034b1920cdae5505cc58abf14240">Buf</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Attributes    </title>
        <itemizedlist>
            <listitem><para>static <link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> char <link linkend="_struct_im_gui_text_buffer_1a471f810a368ec5f4a8ee12c407330c35">EmptyString</link> [1] = { 0 }</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_struct_im_gui_text_buffer_1a4c4369c5e65f591554428b947c498d0d"/><section>
    <title>ImGuiTextBuffer()</title>
<indexterm><primary>ImGuiTextBuffer</primary><secondary>ImGuiTextBuffer</secondary></indexterm>
<indexterm><primary>ImGuiTextBuffer</primary><secondary>ImGuiTextBuffer</secondary></indexterm>
<para><computeroutput>ImGuiTextBuffer::ImGuiTextBuffer ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_struct_im_gui_text_buffer_1a9101840866a9e5408ea1e25a779a40dc"/><section>
    <title>append()</title>
<indexterm><primary>append</primary><secondary>ImGuiTextBuffer</secondary></indexterm>
<indexterm><primary>ImGuiTextBuffer</primary><secondary>append</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGuiTextBuffer::append (const char * str, const char * str_end = <computeroutput>NULL</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_struct_im_gui_text_buffer_1a1c5892db030c5364823793f472754c9e"/><section>
    <title>appendf()</title>
<indexterm><primary>appendf</primary><secondary>ImGuiTextBuffer</secondary></indexterm>
<indexterm><primary>ImGuiTextBuffer</primary><secondary>appendf</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGuiTextBuffer::appendf (const char * fmt,  ...)</computeroutput></para></section>
<anchor xml:id="_struct_im_gui_text_buffer_1ac8a6b11834c4cee8113bf6950e66112e"/><section>
    <title>appendfv()</title>
<indexterm><primary>appendfv</primary><secondary>ImGuiTextBuffer</secondary></indexterm>
<indexterm><primary>ImGuiTextBuffer</primary><secondary>appendfv</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGuiTextBuffer::appendfv (const char * fmt, va_list args)</computeroutput></para></section>
<anchor xml:id="_struct_im_gui_text_buffer_1ad971435d81bc0b957cdb59f5d58eaacd"/><section>
    <title>begin()</title>
<indexterm><primary>begin</primary><secondary>ImGuiTextBuffer</secondary></indexterm>
<indexterm><primary>ImGuiTextBuffer</primary><secondary>begin</secondary></indexterm>
<para><computeroutput>const char * ImGuiTextBuffer::begin ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_im_gui_text_buffer_1ac78a076eb21b9c4ec532eb5109c84a64"/><section>
    <title>c_str()</title>
<indexterm><primary>c_str</primary><secondary>ImGuiTextBuffer</secondary></indexterm>
<indexterm><primary>ImGuiTextBuffer</primary><secondary>c_str</secondary></indexterm>
<para><computeroutput>const char * ImGuiTextBuffer::c_str ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_im_gui_text_buffer_1a9e4edc9f950bc9e35d5c3b3071dbc0df"/><section>
    <title>clear()</title>
<indexterm><primary>clear</primary><secondary>ImGuiTextBuffer</secondary></indexterm>
<indexterm><primary>ImGuiTextBuffer</primary><secondary>clear</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGuiTextBuffer::clear ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_im_gui_text_buffer_1affd606443a661cd0fcce0d381bc8cf98"/><section>
    <title>empty()</title>
<indexterm><primary>empty</primary><secondary>ImGuiTextBuffer</secondary></indexterm>
<indexterm><primary>ImGuiTextBuffer</primary><secondary>empty</secondary></indexterm>
<para><computeroutput>bool ImGuiTextBuffer::empty ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_im_gui_text_buffer_1a5c911f7c2374237b1befb2bf6ba74565"/><section>
    <title>end()</title>
<indexterm><primary>end</primary><secondary>ImGuiTextBuffer</secondary></indexterm>
<indexterm><primary>ImGuiTextBuffer</primary><secondary>end</secondary></indexterm>
<para><computeroutput>const char * ImGuiTextBuffer::end ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_im_gui_text_buffer_1a13748a5db12eb77d716d0347a552b310"/><section>
    <title>operator[]()</title>
<indexterm><primary>operator[]</primary><secondary>ImGuiTextBuffer</secondary></indexterm>
<indexterm><primary>ImGuiTextBuffer</primary><secondary>operator[]</secondary></indexterm>
<para><computeroutput>char ImGuiTextBuffer::operator[] (int i) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_im_gui_text_buffer_1a3271f361e0f1997f4c3eb77665fdf161"/><section>
    <title>reserve()</title>
<indexterm><primary>reserve</primary><secondary>ImGuiTextBuffer</secondary></indexterm>
<indexterm><primary>ImGuiTextBuffer</primary><secondary>reserve</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGuiTextBuffer::reserve (int capacity)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_im_gui_text_buffer_1a2811fcd43e0224eb3bd0f3464b634289"/><section>
    <title>size()</title>
<indexterm><primary>size</primary><secondary>ImGuiTextBuffer</secondary></indexterm>
<indexterm><primary>ImGuiTextBuffer</primary><secondary>size</secondary></indexterm>
<para><computeroutput>int ImGuiTextBuffer::size ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_struct_im_gui_text_buffer_1aa6de034b1920cdae5505cc58abf14240"/><section>
    <title>Buf</title>
<indexterm><primary>Buf</primary><secondary>ImGuiTextBuffer</secondary></indexterm>
<indexterm><primary>ImGuiTextBuffer</primary><secondary>Buf</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_vector">ImVector</link>&lt;char&gt; ImGuiTextBuffer::Buf</computeroutput></para></section>
<anchor xml:id="_struct_im_gui_text_buffer_1a471f810a368ec5f4a8ee12c407330c35"/><section>
    <title>EmptyString</title>
<indexterm><primary>EmptyString</primary><secondary>ImGuiTextBuffer</secondary></indexterm>
<indexterm><primary>ImGuiTextBuffer</primary><secondary>EmptyString</secondary></indexterm>
<para><computeroutput>char ImGuiTextBuffer::EmptyString = { 0 }<computeroutput>[static]</computeroutput></computeroutput></para></section>
<para>
The documentation for this struct was generated from the following files:</para>
<link linkend="_imgui_8h">imgui.h</link><link linkend="_imgui_8cpp">imgui.cpp</link></section>
</section>

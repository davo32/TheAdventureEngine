<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__texture_8h_source" xml:lang="en-US">
<title>Texture.h</title>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="preprocessor">#pragma&#32;once</emphasis>
2 
3 <emphasis role="preprocessor">#include&#32;&lt;string&gt;</emphasis>
4 
5 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespaceaie">aie</link>&#32;{
6 
7 <emphasis role="comment">//&#32;a&#32;class&#32;for&#32;wrapping&#32;up&#32;an&#32;opengl&#32;texture&#32;image</emphasis>
8 <emphasis role="keyword">class&#32;</emphasis><link linkend="_classaie_1_1_texture">Texture</link>&#32;{
9 <emphasis role="keyword">public</emphasis>:
10 
11 &#32;&#32;&#32;&#32;<emphasis role="keyword">enum</emphasis>&#32;<link linkend="_classaie_1_1_texture_1a0081b37630001e86bcad710c7ab40ca4">Format</link>&#32;:&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;{
12 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classaie_1_1_texture_1a0081b37630001e86bcad710c7ab40ca4a916a8e739f575b3ddb14f4ea6a399d32">RED</link>&#32;=&#32;1,
13 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classaie_1_1_texture_1a0081b37630001e86bcad710c7ab40ca4a3e7a40db400b002f283d9689418ddfb2">RG</link>,
14 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classaie_1_1_texture_1a0081b37630001e86bcad710c7ab40ca4ad3caeb51f0131a201095c89c6a6cb86b">RGB</link>,
15 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classaie_1_1_texture_1a0081b37630001e86bcad710c7ab40ca4a549bac8c9e0575c7a9103fdd3c9eb7df">RGBA</link>
16 &#32;&#32;&#32;&#32;};
17 
18 &#32;&#32;&#32;&#32;<link linkend="_classaie_1_1_texture_1a2155c5f426b40760b714229b9c2e3f95">Texture</link>();
19 &#32;&#32;&#32;&#32;<link linkend="_classaie_1_1_texture_1a2155c5f426b40760b714229b9c2e3f95">Texture</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;filename);
20 &#32;&#32;&#32;&#32;<link linkend="_classaie_1_1_texture_1a2155c5f426b40760b714229b9c2e3f95">Texture</link>(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_imgui__impl__opengl3__loader_8h_1a6879d830f164725df67adeeabca3ea47">width</link>,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_imgui__impl__opengl3__loader_8h_1a60075de22f90a1223dc0bea98d2ee4d5">height</link>,&#32;<link linkend="_classaie_1_1_texture_1a0081b37630001e86bcad710c7ab40ca4">Format</link>&#32;<link linkend="_imgui__impl__opengl3__loader_8h_1a1e3b09934060e9d373139c3557730d37">format</link>,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="_imgui__impl__opengl3__loader_8h_1aa6f05cf9167efe04d7c20e5d34561086">pixels</link>&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>);
21 &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;<link linkend="_classaie_1_1_texture_1a371ff0eb8f583ca83b80446cbdce7bd3">~Texture</link>();
22 
23 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;load&#32;a&#32;jpg,&#32;bmp,&#32;png&#32;or&#32;tga</emphasis>
24 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classaie_1_1_texture_1a3044d4c91f9174ffe4bc247edad11d41">load</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;filename);
25 
26 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;creates&#32;a&#32;texture&#32;that&#32;can&#32;be&#32;filled&#32;in&#32;with&#32;pixels</emphasis>
27 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classaie_1_1_texture_1aafc8d30e78d201fba33c0abadc75713f">create</link>(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_imgui__impl__opengl3__loader_8h_1a6879d830f164725df67adeeabca3ea47">width</link>,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_imgui__impl__opengl3__loader_8h_1a60075de22f90a1223dc0bea98d2ee4d5">height</link>,&#32;<link linkend="_classaie_1_1_texture_1a0081b37630001e86bcad710c7ab40ca4">Format</link>&#32;<link linkend="_imgui__impl__opengl3__loader_8h_1a1e3b09934060e9d373139c3557730d37">format</link>,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="_imgui__impl__opengl3__loader_8h_1aa6f05cf9167efe04d7c20e5d34561086">pixels</link>&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>);
28 
29 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;returns&#32;the&#32;filename&#32;or&#32;&quot;none&quot;&#32;if&#32;not&#32;loaded&#32;from&#32;a&#32;file</emphasis>
30 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;<link linkend="_classaie_1_1_texture_1a8ca82a9167b5a14b2633c3698fcb91f2">getFilename</link>()<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classaie_1_1_texture_1ae3473f0569d0152ed640b333b3597121">m_filename</link>;&#32;}
31 
32 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;binds&#32;the&#32;texture&#32;to&#32;the&#32;specified&#32;slot</emphasis>
33 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classaie_1_1_texture_1ad5fdaa1ab6b969721a03b8af1e94c5f6">bind</link>(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;slot)&#32;<emphasis role="keyword">const</emphasis>;
34 
35 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;returns&#32;the&#32;opengl&#32;texture&#32;handle</emphasis>
36 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classaie_1_1_texture_1a9763a1f7fc4170ec39fb72ace2573838">getHandle</link>()<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classaie_1_1_texture_1a99e86e19329961ce735bedc9e9e9eda3">m_glHandle</link>;&#32;}
37 
38 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classaie_1_1_texture_1a08b8b09e30ceedf6b94268a84ef26514">getWidth</link>()<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classaie_1_1_texture_1ac3ab129060df74b2447453c061567fea">m_width</link>;&#32;}
39 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classaie_1_1_texture_1aa7ef15061c003435ace8244ca9c3a887">getHeight</link>()<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classaie_1_1_texture_1ad692f28db1689498ddc1f7d23e993c14">m_height</link>;&#32;}
40 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classaie_1_1_texture_1a70d7457dac864f95850dc864a36dbf2f">getFormat</link>()<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classaie_1_1_texture_1a846b97d2e7c1e93494165bcb58142ae1">m_format</link>;&#32;}
41 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="_classaie_1_1_texture_1a0b06bd49ec1acf102d9f66649618d701">getPixels</link>()<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classaie_1_1_texture_1a85ce0b9ece21e9910314e3bb72ac84b5">m_loadedPixels</link>;&#32;}
42 
43 <emphasis role="keyword">protected</emphasis>:
44 
45 &#32;&#32;&#32;&#32;std::string&#32;&#32;&#32;&#32;&#32;<link linkend="_classaie_1_1_texture_1ae3473f0569d0152ed640b333b3597121">m_filename</link>;
46 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;<link linkend="_classaie_1_1_texture_1ac3ab129060df74b2447453c061567fea">m_width</link>;
47 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;<link linkend="_classaie_1_1_texture_1ad692f28db1689498ddc1f7d23e993c14">m_height</link>;
48 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;<link linkend="_classaie_1_1_texture_1a99e86e19329961ce735bedc9e9e9eda3">m_glHandle</link>;
49 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;<link linkend="_classaie_1_1_texture_1a846b97d2e7c1e93494165bcb58142ae1">m_format</link>;
50 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;&#32;<link linkend="_classaie_1_1_texture_1a85ce0b9ece21e9910314e3bb72ac84b5">m_loadedPixels</link>;
51 };
52 
53 }&#32;<emphasis role="comment">//&#32;namespace&#32;aie</emphasis>
</programlisting></section>

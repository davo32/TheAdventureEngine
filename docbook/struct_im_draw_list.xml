<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_struct_im_draw_list" xml:lang="en-US">
<title>ImDrawList Struct Reference</title>
<indexterm><primary>ImDrawList</primary></indexterm>
<para>
<computeroutput>#include &lt;imgui.h&gt;</computeroutput>
</para>
Collaboration diagram for ImDrawList:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_im_draw_list__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_struct_im_draw_list_1a6360ccc7ce978f1497d6291a4a6f87eb">ImDrawList</link> (<link linkend="_struct_im_draw_list_shared_data">ImDrawListSharedData</link> *shared_data)</para>
</listitem>
            <listitem><para><link linkend="_struct_im_draw_list_1a19fd8d920c202cf8ba5f5c55c43d1d2a">~ImDrawList</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_draw_list_1a608a9d9a83715ba87dced8321ed64329">PushClipRect</link> (const <link linkend="_struct_im_vec2">ImVec2</link> &amp;clip_rect_min, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;clip_rect_max, bool intersect_with_current_clip_rect=false)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_draw_list_1a0ab1ab409f0e269755e50a77901bae39">PushClipRectFullScreen</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_draw_list_1a44f40c59ca755f559020f5a7fa81103a">PopClipRect</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_draw_list_1a7ac41e329a9df911b4823ef0150cee16">PushTextureID</link> (<link linkend="_imgui_8h_1a364f4447ecbc4ca176145ccff9db6286">ImTextureID</link> texture_id)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_draw_list_1ade9286c5ca58753f7bd571b30e2ff76c">PopTextureID</link> ()</para>
</listitem>
            <listitem><para><link linkend="_struct_im_vec2">ImVec2</link> <link linkend="_struct_im_draw_list_1a9d83896d3eb434a9e1072d56523a2754">GetClipRectMin</link> () const</para>
</listitem>
            <listitem><para><link linkend="_struct_im_vec2">ImVec2</link> <link linkend="_struct_im_draw_list_1a8e484a61eab501c1c1c416a8b45bb08e">GetClipRectMax</link> () const</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_draw_list_1aa21e5a1c6e00239581f97d344fc0db61">AddLine</link> (const <link linkend="_struct_im_vec2">ImVec2</link> &amp;p1, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;p2, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col, float thickness=1.0f)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_draw_list_1ad96f10a3e954fe0c5b7c96d4e205af7b">AddRect</link> (const <link linkend="_struct_im_vec2">ImVec2</link> &amp;p_min, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;p_max, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col, float rounding=0.0f, <link linkend="_imgui_8h_1af2ef7e1341558a1d39aa244c1257780a">ImDrawFlags</link> flags=0, float thickness=1.0f)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_draw_list_1a6b16ab764160b0251d2e7b3bd08c1ffc">AddRectFilled</link> (const <link linkend="_struct_im_vec2">ImVec2</link> &amp;p_min, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;p_max, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col, float rounding=0.0f, <link linkend="_imgui_8h_1af2ef7e1341558a1d39aa244c1257780a">ImDrawFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_draw_list_1a6282e85ad78b01ebb74832336e9a2a55">AddRectFilledMultiColor</link> (const <link linkend="_struct_im_vec2">ImVec2</link> &amp;p_min, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;p_max, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col_upr_left, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col_upr_right, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col_bot_right, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col_bot_left)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_draw_list_1a57b014138de51397db0570d88c770d9f">AddQuad</link> (const <link linkend="_struct_im_vec2">ImVec2</link> &amp;p1, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;p2, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;p3, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;p4, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col, float thickness=1.0f)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_draw_list_1a2b982fbad35f8736fdfc9d6e7db2ca94">AddQuadFilled</link> (const <link linkend="_struct_im_vec2">ImVec2</link> &amp;p1, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;p2, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;p3, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;p4, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_draw_list_1a04bde432891d0392e7d98d957c1fd9b3">AddTriangle</link> (const <link linkend="_struct_im_vec2">ImVec2</link> &amp;p1, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;p2, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;p3, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col, float thickness=1.0f)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_draw_list_1af1dd4a3888034c5f71b66a38e44edf31">AddTriangleFilled</link> (const <link linkend="_struct_im_vec2">ImVec2</link> &amp;p1, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;p2, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;p3, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_draw_list_1a9b73eea0ebf7a9f02bc8a104deb7de9d">AddCircle</link> (const <link linkend="_struct_im_vec2">ImVec2</link> &amp;center, float radius, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col, int num_segments=0, float thickness=1.0f)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_draw_list_1aef950cf8b0293b2c5e4708af72de045b">AddCircleFilled</link> (const <link linkend="_struct_im_vec2">ImVec2</link> &amp;center, float radius, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col, int num_segments=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_draw_list_1abd004dec93d106eb867c9c6554d85989">AddNgon</link> (const <link linkend="_struct_im_vec2">ImVec2</link> &amp;center, float radius, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col, int num_segments, float thickness=1.0f)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_draw_list_1a75bf382ddc70429f82a570c2782c4491">AddNgonFilled</link> (const <link linkend="_struct_im_vec2">ImVec2</link> &amp;center, float radius, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col, int num_segments)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_draw_list_1a16d98b58032500e4e7e1a555a4b6ffce">AddEllipse</link> (const <link linkend="_struct_im_vec2">ImVec2</link> &amp;center, float radius_x, float radius_y, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col, float rot=0.0f, int num_segments=0, float thickness=1.0f)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_draw_list_1ac6ca6eb18ab96e580e7e500a7b8025b2">AddEllipseFilled</link> (const <link linkend="_struct_im_vec2">ImVec2</link> &amp;center, float radius_x, float radius_y, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col, float rot=0.0f, int num_segments=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_draw_list_1ac5221bd86b3429f6d5b6e6ffe454942d">AddText</link> (const <link linkend="_struct_im_vec2">ImVec2</link> &amp;pos, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col, const char *text_begin, const char *text_end=NULL)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_draw_list_1a0a226cbe9bb1480428e145d8535cda26">AddText</link> (const <link linkend="_struct_im_font">ImFont</link> *font, float font_size, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;pos, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col, const char *text_begin, const char *text_end=NULL, float wrap_width=0.0f, const <link linkend="_struct_im_vec4">ImVec4</link> *cpu_fine_clip_rect=NULL)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_draw_list_1abc568847b1113e624456436bfab1b307">AddPolyline</link> (const <link linkend="_struct_im_vec2">ImVec2</link> *points, int num_points, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col, <link linkend="_imgui_8h_1af2ef7e1341558a1d39aa244c1257780a">ImDrawFlags</link> flags, float thickness)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_draw_list_1ad2accc0a74845b08bd0e6fae6183d6d0">AddConvexPolyFilled</link> (const <link linkend="_struct_im_vec2">ImVec2</link> *points, int num_points, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_draw_list_1a90ebb3c38b997ef3a3adb4d211a1b2a8">AddBezierCubic</link> (const <link linkend="_struct_im_vec2">ImVec2</link> &amp;p1, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;p2, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;p3, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;p4, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col, float thickness, int num_segments=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_draw_list_1a2ca1f97b873778fc53fa4c1f1ca8bb1f">AddBezierQuadratic</link> (const <link linkend="_struct_im_vec2">ImVec2</link> &amp;p1, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;p2, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;p3, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col, float thickness, int num_segments=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_draw_list_1ac1f529d53d7ba118484e47e49218c603">AddImage</link> (<link linkend="_imgui_8h_1a364f4447ecbc4ca176145ccff9db6286">ImTextureID</link> user_texture_id, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;p_min, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;p_max, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;uv_min=<link linkend="_struct_im_vec2">ImVec2</link>(0, 0), const <link linkend="_struct_im_vec2">ImVec2</link> &amp;uv_max=<link linkend="_struct_im_vec2">ImVec2</link>(1, 1), <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col=<link linkend="_imgui_8h_1a08fc9855cd3e3fcbb7fcd93b38bd7057">IM_COL32_WHITE</link>)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_draw_list_1abf9199e08d17fd33736fd67598485341">AddImageQuad</link> (<link linkend="_imgui_8h_1a364f4447ecbc4ca176145ccff9db6286">ImTextureID</link> user_texture_id, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;p1, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;p2, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;p3, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;p4, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;uv1=<link linkend="_struct_im_vec2">ImVec2</link>(0, 0), const <link linkend="_struct_im_vec2">ImVec2</link> &amp;uv2=<link linkend="_struct_im_vec2">ImVec2</link>(1, 0), const <link linkend="_struct_im_vec2">ImVec2</link> &amp;uv3=<link linkend="_struct_im_vec2">ImVec2</link>(1, 1), const <link linkend="_struct_im_vec2">ImVec2</link> &amp;uv4=<link linkend="_struct_im_vec2">ImVec2</link>(0, 1), <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col=<link linkend="_imgui_8h_1a08fc9855cd3e3fcbb7fcd93b38bd7057">IM_COL32_WHITE</link>)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_draw_list_1a864ccce7a012e9c1ffb4d5693311d847">AddImageRounded</link> (<link linkend="_imgui_8h_1a364f4447ecbc4ca176145ccff9db6286">ImTextureID</link> user_texture_id, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;p_min, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;p_max, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;uv_min, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;uv_max, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col, float rounding, <link linkend="_imgui_8h_1af2ef7e1341558a1d39aa244c1257780a">ImDrawFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_draw_list_1ae9ad5f4d638b1bfd9383618dc60e3f18">PathClear</link> ()</para>
</listitem>
            <listitem><para><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_draw_list_1a828d944325ed58d8b57abd3647bffaaf">PathLineTo</link> (const <link linkend="_struct_im_vec2">ImVec2</link> &amp;pos)</para>
</listitem>
            <listitem><para><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_draw_list_1aa3dd11945fb62495f8b9e1392ed724e3">PathLineToMergeDuplicate</link> (const <link linkend="_struct_im_vec2">ImVec2</link> &amp;pos)</para>
</listitem>
            <listitem><para><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_draw_list_1aea9301cb99ebf4b27f5d3959017567c9">PathFillConvex</link> (<link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col)</para>
</listitem>
            <listitem><para><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_draw_list_1a60bf9040ef3d09b39c4ba8f5a2a68ae9">PathStroke</link> (<link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col, <link linkend="_imgui_8h_1af2ef7e1341558a1d39aa244c1257780a">ImDrawFlags</link> flags=0, float thickness=1.0f)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_draw_list_1af86073403f1557cccb4ff45dfad0a74a">PathArcTo</link> (const <link linkend="_struct_im_vec2">ImVec2</link> &amp;center, float radius, float a_min, float a_max, int num_segments=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_draw_list_1a6d307c6de1a6522e76fa410e8fe96fcc">PathArcToFast</link> (const <link linkend="_struct_im_vec2">ImVec2</link> &amp;center, float radius, int a_min_of_12, int a_max_of_12)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_draw_list_1aa117dcc4f06b62f6988127ba27ff2e80">PathEllipticalArcTo</link> (const <link linkend="_struct_im_vec2">ImVec2</link> &amp;center, float radius_x, float radius_y, float rot, float a_min, float a_max, int num_segments=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_draw_list_1a48358bf6904dfd09906c6bfa3ef88777">PathBezierCubicCurveTo</link> (const <link linkend="_struct_im_vec2">ImVec2</link> &amp;p2, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;p3, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;p4, int num_segments=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_draw_list_1af48c5212d06ca5967f70da33ffadbc86">PathBezierQuadraticCurveTo</link> (const <link linkend="_struct_im_vec2">ImVec2</link> &amp;p2, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;p3, int num_segments=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_draw_list_1a2251eb264ed8b17a253c409787375053">PathRect</link> (const <link linkend="_struct_im_vec2">ImVec2</link> &amp;rect_min, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;rect_max, float rounding=0.0f, <link linkend="_imgui_8h_1af2ef7e1341558a1d39aa244c1257780a">ImDrawFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_draw_list_1a14073d60ef9db9dc663dc7717a4893a5">AddCallback</link> (<link linkend="_imgui_8h_1a232a477233f9e3ab7640720bf94674de">ImDrawCallback</link> callback, <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *callback_data)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_draw_list_1a846714bb0321c6f1f908767abc8559e6">AddDrawCmd</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_struct_im_draw_list">ImDrawList</link> * <link linkend="_struct_im_draw_list_1a24c853c3976c77e7b361fab39adde686">CloneOutput</link> () const</para>
</listitem>
            <listitem><para><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_draw_list_1acd7bcb6c4c5043876cfc169a98abc24a">ChannelsSplit</link> (int <link linkend="_imgui__impl__opengl3__loader_8h_1a619bc20e8198de3bd3f3d7fc34de66b2">count</link>)</para>
</listitem>
            <listitem><para><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_draw_list_1a2ed82c3f663cda520c90c55b94196274">ChannelsMerge</link> ()</para>
</listitem>
            <listitem><para><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_draw_list_1aba9e93d0bf1c3884beb726e96360d2e2">ChannelsSetCurrent</link> (int n)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_draw_list_1a879aa38dbfb0344e3e023d65c002c7d7">PrimReserve</link> (int idx_count, int vtx_count)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_draw_list_1a618a5e0efdefce08daa888b45bf8a1d1">PrimUnreserve</link> (int idx_count, int vtx_count)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_draw_list_1ae2be093563f1d20b8190b7c423113925">PrimRect</link> (const <link linkend="_struct_im_vec2">ImVec2</link> &amp;a, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;b, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_draw_list_1a77d48ed5b33ccdd908824c0a3bebfff8">PrimRectUV</link> (const <link linkend="_struct_im_vec2">ImVec2</link> &amp;a, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;b, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;uv_a, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;uv_b, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_draw_list_1a9df27414aaca5f34ac3664a8b82582b5">PrimQuadUV</link> (const <link linkend="_struct_im_vec2">ImVec2</link> &amp;a, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;b, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;c, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;d, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;uv_a, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;uv_b, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;uv_c, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;uv_d, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col)</para>
</listitem>
            <listitem><para><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_draw_list_1af86de4faf6c8e978fb712ea14c5d0c5f">PrimWriteVtx</link> (const <link linkend="_struct_im_vec2">ImVec2</link> &amp;pos, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;uv, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col)</para>
</listitem>
            <listitem><para><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_draw_list_1a42b72f87a0084c02f11dcd1560c8bbc7">PrimWriteIdx</link> (<link linkend="_imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1">ImDrawIdx</link> idx)</para>
</listitem>
            <listitem><para><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_draw_list_1a405377158f0028ad8b4fb6509eef4532">PrimVtx</link> (const <link linkend="_struct_im_vec2">ImVec2</link> &amp;pos, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;uv, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_draw_list_1a5f78fe195b2507e5926560f591141ff3">_ResetForNewFrame</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_draw_list_1a61a886a16655c810e04c0ccebb228f9a">_ClearFreeMemory</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_draw_list_1a2cb0295fcd3062bfedbebbad55865455">_PopUnusedDrawCmd</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_draw_list_1abdba85bbdc26a98eac56ed04683d5fc7">_TryMergeDrawCmds</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_draw_list_1a8e51ddbe1f9732bc271ce807bec23f54">_OnChangedClipRect</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_draw_list_1a7c14ae666a0df75214ecb97cdb9bd8f4">_OnChangedTextureID</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_draw_list_1a7f2e315f147acd8b555d86d1557659cc">_OnChangedVtxOffset</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> int <link linkend="_struct_im_draw_list_1a52afa32aaab6d581cda90dc5d8726ed6">_CalcCircleAutoSegmentCount</link> (float radius) const</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_draw_list_1ac25f3a7693ed13ba2dac455675be8654">_PathArcToFastEx</link> (const <link linkend="_struct_im_vec2">ImVec2</link> &amp;center, float radius, int a_min_sample, int a_max_sample, int a_step)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_draw_list_1a855fcd28cd12b81975e8a61ea2e80e96">_PathArcToN</link> (const <link linkend="_struct_im_vec2">ImVec2</link> &amp;center, float radius, float a_min, float a_max, int num_segments)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para><link linkend="_struct_im_vector">ImVector</link>&lt; <link linkend="_struct_im_draw_cmd">ImDrawCmd</link> &gt; <link linkend="_struct_im_draw_list_1a67a4b5cc4c83bc3b81d96c46cbd38a07">CmdBuffer</link></para>
</listitem>
            <listitem><para><link linkend="_struct_im_vector">ImVector</link>&lt; <link linkend="_imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1">ImDrawIdx</link> &gt; <link linkend="_struct_im_draw_list_1adf292ff70a954d82daf061c609e75dfc">IdxBuffer</link></para>
</listitem>
            <listitem><para><link linkend="_struct_im_vector">ImVector</link>&lt; <link linkend="_struct_im_draw_vert">ImDrawVert</link> &gt; <link linkend="_struct_im_draw_list_1aa8ff4aee39cf3c3791b7e29a7b4264be">VtxBuffer</link></para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a1adb61806505bf501bb0fbcdf4414360">ImDrawListFlags</link> <link linkend="_struct_im_draw_list_1ada2c004661663ef875f4d4c7ec0b4557">Flags</link></para>
</listitem>
            <listitem><para>unsigned int <link linkend="_struct_im_draw_list_1a2228793183665bc3d8612795555fe505">_VtxCurrentIdx</link></para>
</listitem>
            <listitem><para><link linkend="_struct_im_draw_list_shared_data">ImDrawListSharedData</link> * <link linkend="_struct_im_draw_list_1ad5a67c6f1487a812410e9979d1cf4a02">_Data</link></para>
</listitem>
            <listitem><para>const char * <link linkend="_struct_im_draw_list_1a643f385fb9d5fc35a431e72a10a212f5">_OwnerName</link></para>
</listitem>
            <listitem><para><link linkend="_struct_im_draw_vert">ImDrawVert</link> * <link linkend="_struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073">_VtxWritePtr</link></para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1">ImDrawIdx</link> * <link linkend="_struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843">_IdxWritePtr</link></para>
</listitem>
            <listitem><para><link linkend="_struct_im_vector">ImVector</link>&lt; <link linkend="_struct_im_vec4">ImVec4</link> &gt; <link linkend="_struct_im_draw_list_1ae950024f053f3c94dc2c763d20be609d">_ClipRectStack</link></para>
</listitem>
            <listitem><para><link linkend="_struct_im_vector">ImVector</link>&lt; <link linkend="_imgui_8h_1a364f4447ecbc4ca176145ccff9db6286">ImTextureID</link> &gt; <link linkend="_struct_im_draw_list_1a848faddd121da050214b8d8159e5e704">_TextureIdStack</link></para>
</listitem>
            <listitem><para><link linkend="_struct_im_vector">ImVector</link>&lt; <link linkend="_struct_im_vec2">ImVec2</link> &gt; <link linkend="_struct_im_draw_list_1a5bdc39abf351360500048628b8dc1b07">_Path</link></para>
</listitem>
            <listitem><para><link linkend="_struct_im_draw_cmd_header">ImDrawCmdHeader</link> <link linkend="_struct_im_draw_list_1a87d1ec89ec6a742fd4d097d2b924e92b">_CmdHeader</link></para>
</listitem>
            <listitem><para><link linkend="_struct_im_draw_list_splitter">ImDrawListSplitter</link> <link linkend="_struct_im_draw_list_1a2893207705100e8a5da8122da56bd162">_Splitter</link></para>
</listitem>
            <listitem><para>float <link linkend="_struct_im_draw_list_1aa667eca45099e5679b161c17ac6ec7e0">_FringeScale</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_struct_im_draw_list_1a6360ccc7ce978f1497d6291a4a6f87eb"/><section>
    <title>ImDrawList()</title>
<indexterm><primary>ImDrawList</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>ImDrawList</secondary></indexterm>
<para><computeroutput>ImDrawList::ImDrawList (<link linkend="_struct_im_draw_list_shared_data">ImDrawListSharedData</link> * shared_data)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_im_draw_list_1a19fd8d920c202cf8ba5f5c55c43d1d2a"/><section>
    <title>~ImDrawList()</title>
<indexterm><primary>~ImDrawList</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>~ImDrawList</secondary></indexterm>
<para><computeroutput>ImDrawList::~ImDrawList ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_struct_im_draw_list_1a52afa32aaab6d581cda90dc5d8726ed6"/><section>
    <title>_CalcCircleAutoSegmentCount()</title>
<indexterm><primary>_CalcCircleAutoSegmentCount</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>_CalcCircleAutoSegmentCount</secondary></indexterm>
<para><computeroutput>int ImDrawList::_CalcCircleAutoSegmentCount (float radius) const</computeroutput></para></section>
<anchor xml:id="_struct_im_draw_list_1a61a886a16655c810e04c0ccebb228f9a"/><section>
    <title>_ClearFreeMemory()</title>
<indexterm><primary>_ClearFreeMemory</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>_ClearFreeMemory</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImDrawList::_ClearFreeMemory ( )</computeroutput></para></section>
<anchor xml:id="_struct_im_draw_list_1a8e51ddbe1f9732bc271ce807bec23f54"/><section>
    <title>_OnChangedClipRect()</title>
<indexterm><primary>_OnChangedClipRect</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>_OnChangedClipRect</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImDrawList::_OnChangedClipRect ( )</computeroutput></para></section>
<anchor xml:id="_struct_im_draw_list_1a7c14ae666a0df75214ecb97cdb9bd8f4"/><section>
    <title>_OnChangedTextureID()</title>
<indexterm><primary>_OnChangedTextureID</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>_OnChangedTextureID</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImDrawList::_OnChangedTextureID ( )</computeroutput></para></section>
<anchor xml:id="_struct_im_draw_list_1a7f2e315f147acd8b555d86d1557659cc"/><section>
    <title>_OnChangedVtxOffset()</title>
<indexterm><primary>_OnChangedVtxOffset</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>_OnChangedVtxOffset</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImDrawList::_OnChangedVtxOffset ( )</computeroutput></para></section>
<anchor xml:id="_struct_im_draw_list_1ac25f3a7693ed13ba2dac455675be8654"/><section>
    <title>_PathArcToFastEx()</title>
<indexterm><primary>_PathArcToFastEx</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>_PathArcToFastEx</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImDrawList::_PathArcToFastEx (const <link linkend="_struct_im_vec2">ImVec2</link> &amp; center, float radius, int a_min_sample, int a_max_sample, int a_step)</computeroutput></para></section>
<anchor xml:id="_struct_im_draw_list_1a855fcd28cd12b81975e8a61ea2e80e96"/><section>
    <title>_PathArcToN()</title>
<indexterm><primary>_PathArcToN</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>_PathArcToN</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImDrawList::_PathArcToN (const <link linkend="_struct_im_vec2">ImVec2</link> &amp; center, float radius, float a_min, float a_max, int num_segments)</computeroutput></para></section>
<anchor xml:id="_struct_im_draw_list_1a2cb0295fcd3062bfedbebbad55865455"/><section>
    <title>_PopUnusedDrawCmd()</title>
<indexterm><primary>_PopUnusedDrawCmd</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>_PopUnusedDrawCmd</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImDrawList::_PopUnusedDrawCmd ( )</computeroutput></para></section>
<anchor xml:id="_struct_im_draw_list_1a5f78fe195b2507e5926560f591141ff3"/><section>
    <title>_ResetForNewFrame()</title>
<indexterm><primary>_ResetForNewFrame</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>_ResetForNewFrame</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImDrawList::_ResetForNewFrame ( )</computeroutput></para></section>
<anchor xml:id="_struct_im_draw_list_1abdba85bbdc26a98eac56ed04683d5fc7"/><section>
    <title>_TryMergeDrawCmds()</title>
<indexterm><primary>_TryMergeDrawCmds</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>_TryMergeDrawCmds</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImDrawList::_TryMergeDrawCmds ( )</computeroutput></para></section>
<anchor xml:id="_struct_im_draw_list_1a90ebb3c38b997ef3a3adb4d211a1b2a8"/><section>
    <title>AddBezierCubic()</title>
<indexterm><primary>AddBezierCubic</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>AddBezierCubic</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImDrawList::AddBezierCubic (const <link linkend="_struct_im_vec2">ImVec2</link> &amp; p1, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; p2, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; p3, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; p4, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col, float thickness, int num_segments = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_struct_im_draw_list_1a2ca1f97b873778fc53fa4c1f1ca8bb1f"/><section>
    <title>AddBezierQuadratic()</title>
<indexterm><primary>AddBezierQuadratic</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>AddBezierQuadratic</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImDrawList::AddBezierQuadratic (const <link linkend="_struct_im_vec2">ImVec2</link> &amp; p1, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; p2, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; p3, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col, float thickness, int num_segments = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_struct_im_draw_list_1a14073d60ef9db9dc663dc7717a4893a5"/><section>
    <title>AddCallback()</title>
<indexterm><primary>AddCallback</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>AddCallback</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImDrawList::AddCallback (<link linkend="_imgui_8h_1a232a477233f9e3ab7640720bf94674de">ImDrawCallback</link> callback, <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * callback_data)</computeroutput></para></section>
<anchor xml:id="_struct_im_draw_list_1a9b73eea0ebf7a9f02bc8a104deb7de9d"/><section>
    <title>AddCircle()</title>
<indexterm><primary>AddCircle</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>AddCircle</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImDrawList::AddCircle (const <link linkend="_struct_im_vec2">ImVec2</link> &amp; center, float radius, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col, int num_segments = <computeroutput>0</computeroutput>
, float thickness = <computeroutput>1.0f</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_struct_im_draw_list_1aef950cf8b0293b2c5e4708af72de045b"/><section>
    <title>AddCircleFilled()</title>
<indexterm><primary>AddCircleFilled</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>AddCircleFilled</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImDrawList::AddCircleFilled (const <link linkend="_struct_im_vec2">ImVec2</link> &amp; center, float radius, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col, int num_segments = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_struct_im_draw_list_1ad2accc0a74845b08bd0e6fae6183d6d0"/><section>
    <title>AddConvexPolyFilled()</title>
<indexterm><primary>AddConvexPolyFilled</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>AddConvexPolyFilled</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImDrawList::AddConvexPolyFilled (const <link linkend="_struct_im_vec2">ImVec2</link> * points, int num_points, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col)</computeroutput></para></section>
<anchor xml:id="_struct_im_draw_list_1a846714bb0321c6f1f908767abc8559e6"/><section>
    <title>AddDrawCmd()</title>
<indexterm><primary>AddDrawCmd</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>AddDrawCmd</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImDrawList::AddDrawCmd ( )</computeroutput></para></section>
<anchor xml:id="_struct_im_draw_list_1a16d98b58032500e4e7e1a555a4b6ffce"/><section>
    <title>AddEllipse()</title>
<indexterm><primary>AddEllipse</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>AddEllipse</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImDrawList::AddEllipse (const <link linkend="_struct_im_vec2">ImVec2</link> &amp; center, float radius_x, float radius_y, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col, float rot = <computeroutput>0.0f</computeroutput>
, int num_segments = <computeroutput>0</computeroutput>
, float thickness = <computeroutput>1.0f</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_struct_im_draw_list_1ac6ca6eb18ab96e580e7e500a7b8025b2"/><section>
    <title>AddEllipseFilled()</title>
<indexterm><primary>AddEllipseFilled</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>AddEllipseFilled</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImDrawList::AddEllipseFilled (const <link linkend="_struct_im_vec2">ImVec2</link> &amp; center, float radius_x, float radius_y, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col, float rot = <computeroutput>0.0f</computeroutput>
, int num_segments = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_struct_im_draw_list_1ac1f529d53d7ba118484e47e49218c603"/><section>
    <title>AddImage()</title>
<indexterm><primary>AddImage</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>AddImage</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImDrawList::AddImage (<link linkend="_imgui_8h_1a364f4447ecbc4ca176145ccff9db6286">ImTextureID</link> user_texture_id, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; p_min, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; p_max, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; uv_min = <computeroutput><link linkend="_struct_im_vec2">ImVec2</link>(0,&#160;0)</computeroutput>
, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; uv_max = <computeroutput><link linkend="_struct_im_vec2">ImVec2</link>(1,&#160;1)</computeroutput>
, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col = <computeroutput><link linkend="_imgui_8h_1a08fc9855cd3e3fcbb7fcd93b38bd7057">IM_COL32_WHITE</link></computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_struct_im_draw_list_1abf9199e08d17fd33736fd67598485341"/><section>
    <title>AddImageQuad()</title>
<indexterm><primary>AddImageQuad</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>AddImageQuad</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImDrawList::AddImageQuad (<link linkend="_imgui_8h_1a364f4447ecbc4ca176145ccff9db6286">ImTextureID</link> user_texture_id, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; p1, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; p2, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; p3, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; p4, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; uv1 = <computeroutput><link linkend="_struct_im_vec2">ImVec2</link>(0,&#160;0)</computeroutput>
, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; uv2 = <computeroutput><link linkend="_struct_im_vec2">ImVec2</link>(1,&#160;0)</computeroutput>
, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; uv3 = <computeroutput><link linkend="_struct_im_vec2">ImVec2</link>(1,&#160;1)</computeroutput>
, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; uv4 = <computeroutput><link linkend="_struct_im_vec2">ImVec2</link>(0,&#160;1)</computeroutput>
, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col = <computeroutput><link linkend="_imgui_8h_1a08fc9855cd3e3fcbb7fcd93b38bd7057">IM_COL32_WHITE</link></computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_struct_im_draw_list_1a864ccce7a012e9c1ffb4d5693311d847"/><section>
    <title>AddImageRounded()</title>
<indexterm><primary>AddImageRounded</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>AddImageRounded</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImDrawList::AddImageRounded (<link linkend="_imgui_8h_1a364f4447ecbc4ca176145ccff9db6286">ImTextureID</link> user_texture_id, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; p_min, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; p_max, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; uv_min, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; uv_max, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col, float rounding, <link linkend="_imgui_8h_1af2ef7e1341558a1d39aa244c1257780a">ImDrawFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_struct_im_draw_list_1aa21e5a1c6e00239581f97d344fc0db61"/><section>
    <title>AddLine()</title>
<indexterm><primary>AddLine</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>AddLine</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImDrawList::AddLine (const <link linkend="_struct_im_vec2">ImVec2</link> &amp; p1, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; p2, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col, float thickness = <computeroutput>1.0f</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_struct_im_draw_list_1abd004dec93d106eb867c9c6554d85989"/><section>
    <title>AddNgon()</title>
<indexterm><primary>AddNgon</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>AddNgon</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImDrawList::AddNgon (const <link linkend="_struct_im_vec2">ImVec2</link> &amp; center, float radius, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col, int num_segments, float thickness = <computeroutput>1.0f</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_struct_im_draw_list_1a75bf382ddc70429f82a570c2782c4491"/><section>
    <title>AddNgonFilled()</title>
<indexterm><primary>AddNgonFilled</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>AddNgonFilled</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImDrawList::AddNgonFilled (const <link linkend="_struct_im_vec2">ImVec2</link> &amp; center, float radius, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col, int num_segments)</computeroutput></para></section>
<anchor xml:id="_struct_im_draw_list_1abc568847b1113e624456436bfab1b307"/><section>
    <title>AddPolyline()</title>
<indexterm><primary>AddPolyline</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>AddPolyline</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImDrawList::AddPolyline (const <link linkend="_struct_im_vec2">ImVec2</link> * points, int num_points, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col, <link linkend="_imgui_8h_1af2ef7e1341558a1d39aa244c1257780a">ImDrawFlags</link> flags, float thickness)</computeroutput></para></section>
<anchor xml:id="_struct_im_draw_list_1a57b014138de51397db0570d88c770d9f"/><section>
    <title>AddQuad()</title>
<indexterm><primary>AddQuad</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>AddQuad</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImDrawList::AddQuad (const <link linkend="_struct_im_vec2">ImVec2</link> &amp; p1, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; p2, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; p3, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; p4, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col, float thickness = <computeroutput>1.0f</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_struct_im_draw_list_1a2b982fbad35f8736fdfc9d6e7db2ca94"/><section>
    <title>AddQuadFilled()</title>
<indexterm><primary>AddQuadFilled</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>AddQuadFilled</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImDrawList::AddQuadFilled (const <link linkend="_struct_im_vec2">ImVec2</link> &amp; p1, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; p2, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; p3, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; p4, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col)</computeroutput></para></section>
<anchor xml:id="_struct_im_draw_list_1ad96f10a3e954fe0c5b7c96d4e205af7b"/><section>
    <title>AddRect()</title>
<indexterm><primary>AddRect</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>AddRect</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImDrawList::AddRect (const <link linkend="_struct_im_vec2">ImVec2</link> &amp; p_min, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; p_max, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col, float rounding = <computeroutput>0.0f</computeroutput>
, <link linkend="_imgui_8h_1af2ef7e1341558a1d39aa244c1257780a">ImDrawFlags</link> flags = <computeroutput>0</computeroutput>
, float thickness = <computeroutput>1.0f</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_struct_im_draw_list_1a6b16ab764160b0251d2e7b3bd08c1ffc"/><section>
    <title>AddRectFilled()</title>
<indexterm><primary>AddRectFilled</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>AddRectFilled</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImDrawList::AddRectFilled (const <link linkend="_struct_im_vec2">ImVec2</link> &amp; p_min, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; p_max, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col, float rounding = <computeroutput>0.0f</computeroutput>
, <link linkend="_imgui_8h_1af2ef7e1341558a1d39aa244c1257780a">ImDrawFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_struct_im_draw_list_1a6282e85ad78b01ebb74832336e9a2a55"/><section>
    <title>AddRectFilledMultiColor()</title>
<indexterm><primary>AddRectFilledMultiColor</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>AddRectFilledMultiColor</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImDrawList::AddRectFilledMultiColor (const <link linkend="_struct_im_vec2">ImVec2</link> &amp; p_min, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; p_max, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col_upr_left, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col_upr_right, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col_bot_right, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col_bot_left)</computeroutput></para></section>
<anchor xml:id="_struct_im_draw_list_1a0a226cbe9bb1480428e145d8535cda26"/><section>
    <title>AddText()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>AddText</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>AddText</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImDrawList::AddText (const <link linkend="_struct_im_font">ImFont</link> * font, float font_size, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; pos, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col, const char * text_begin, const char * text_end = <computeroutput>NULL</computeroutput>
, float wrap_width = <computeroutput>0.0f</computeroutput>
, const <link linkend="_struct_im_vec4">ImVec4</link> * cpu_fine_clip_rect = <computeroutput>NULL</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_struct_im_draw_list_1ac5221bd86b3429f6d5b6e6ffe454942d"/><section>
    <title>AddText()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>AddText</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>AddText</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImDrawList::AddText (const <link linkend="_struct_im_vec2">ImVec2</link> &amp; pos, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col, const char * text_begin, const char * text_end = <computeroutput>NULL</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_struct_im_draw_list_1a04bde432891d0392e7d98d957c1fd9b3"/><section>
    <title>AddTriangle()</title>
<indexterm><primary>AddTriangle</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>AddTriangle</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImDrawList::AddTriangle (const <link linkend="_struct_im_vec2">ImVec2</link> &amp; p1, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; p2, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; p3, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col, float thickness = <computeroutput>1.0f</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_struct_im_draw_list_1af1dd4a3888034c5f71b66a38e44edf31"/><section>
    <title>AddTriangleFilled()</title>
<indexterm><primary>AddTriangleFilled</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>AddTriangleFilled</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImDrawList::AddTriangleFilled (const <link linkend="_struct_im_vec2">ImVec2</link> &amp; p1, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; p2, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; p3, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col)</computeroutput></para></section>
<anchor xml:id="_struct_im_draw_list_1a2ed82c3f663cda520c90c55b94196274"/><section>
    <title>ChannelsMerge()</title>
<indexterm><primary>ChannelsMerge</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>ChannelsMerge</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImDrawList::ChannelsMerge ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_im_draw_list_1aba9e93d0bf1c3884beb726e96360d2e2"/><section>
    <title>ChannelsSetCurrent()</title>
<indexterm><primary>ChannelsSetCurrent</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>ChannelsSetCurrent</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImDrawList::ChannelsSetCurrent (int n)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_im_draw_list_1acd7bcb6c4c5043876cfc169a98abc24a"/><section>
    <title>ChannelsSplit()</title>
<indexterm><primary>ChannelsSplit</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>ChannelsSplit</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImDrawList::ChannelsSplit (int count)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_im_draw_list_1a24c853c3976c77e7b361fab39adde686"/><section>
    <title>CloneOutput()</title>
<indexterm><primary>CloneOutput</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>CloneOutput</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_draw_list">ImDrawList</link> * ImDrawList::CloneOutput ( ) const</computeroutput></para></section>
<anchor xml:id="_struct_im_draw_list_1a8e484a61eab501c1c1c416a8b45bb08e"/><section>
    <title>GetClipRectMax()</title>
<indexterm><primary>GetClipRectMax</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>GetClipRectMax</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_vec2">ImVec2</link> ImDrawList::GetClipRectMax ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_im_draw_list_1a9d83896d3eb434a9e1072d56523a2754"/><section>
    <title>GetClipRectMin()</title>
<indexterm><primary>GetClipRectMin</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>GetClipRectMin</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_vec2">ImVec2</link> ImDrawList::GetClipRectMin ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_im_draw_list_1af86073403f1557cccb4ff45dfad0a74a"/><section>
    <title>PathArcTo()</title>
<indexterm><primary>PathArcTo</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>PathArcTo</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImDrawList::PathArcTo (const <link linkend="_struct_im_vec2">ImVec2</link> &amp; center, float radius, float a_min, float a_max, int num_segments = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_struct_im_draw_list_1a6d307c6de1a6522e76fa410e8fe96fcc"/><section>
    <title>PathArcToFast()</title>
<indexterm><primary>PathArcToFast</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>PathArcToFast</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImDrawList::PathArcToFast (const <link linkend="_struct_im_vec2">ImVec2</link> &amp; center, float radius, int a_min_of_12, int a_max_of_12)</computeroutput></para></section>
<anchor xml:id="_struct_im_draw_list_1a48358bf6904dfd09906c6bfa3ef88777"/><section>
    <title>PathBezierCubicCurveTo()</title>
<indexterm><primary>PathBezierCubicCurveTo</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>PathBezierCubicCurveTo</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImDrawList::PathBezierCubicCurveTo (const <link linkend="_struct_im_vec2">ImVec2</link> &amp; p2, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; p3, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; p4, int num_segments = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_struct_im_draw_list_1af48c5212d06ca5967f70da33ffadbc86"/><section>
    <title>PathBezierQuadraticCurveTo()</title>
<indexterm><primary>PathBezierQuadraticCurveTo</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>PathBezierQuadraticCurveTo</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImDrawList::PathBezierQuadraticCurveTo (const <link linkend="_struct_im_vec2">ImVec2</link> &amp; p2, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; p3, int num_segments = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_struct_im_draw_list_1ae9ad5f4d638b1bfd9383618dc60e3f18"/><section>
    <title>PathClear()</title>
<indexterm><primary>PathClear</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>PathClear</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImDrawList::PathClear ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_im_draw_list_1aa117dcc4f06b62f6988127ba27ff2e80"/><section>
    <title>PathEllipticalArcTo()</title>
<indexterm><primary>PathEllipticalArcTo</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>PathEllipticalArcTo</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImDrawList::PathEllipticalArcTo (const <link linkend="_struct_im_vec2">ImVec2</link> &amp; center, float radius_x, float radius_y, float rot, float a_min, float a_max, int num_segments = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_struct_im_draw_list_1aea9301cb99ebf4b27f5d3959017567c9"/><section>
    <title>PathFillConvex()</title>
<indexterm><primary>PathFillConvex</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>PathFillConvex</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImDrawList::PathFillConvex (<link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_im_draw_list_1a828d944325ed58d8b57abd3647bffaaf"/><section>
    <title>PathLineTo()</title>
<indexterm><primary>PathLineTo</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>PathLineTo</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImDrawList::PathLineTo (const <link linkend="_struct_im_vec2">ImVec2</link> &amp; pos)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_im_draw_list_1aa3dd11945fb62495f8b9e1392ed724e3"/><section>
    <title>PathLineToMergeDuplicate()</title>
<indexterm><primary>PathLineToMergeDuplicate</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>PathLineToMergeDuplicate</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImDrawList::PathLineToMergeDuplicate (const <link linkend="_struct_im_vec2">ImVec2</link> &amp; pos)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_im_draw_list_1a2251eb264ed8b17a253c409787375053"/><section>
    <title>PathRect()</title>
<indexterm><primary>PathRect</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>PathRect</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImDrawList::PathRect (const <link linkend="_struct_im_vec2">ImVec2</link> &amp; rect_min, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; rect_max, float rounding = <computeroutput>0.0f</computeroutput>
, <link linkend="_imgui_8h_1af2ef7e1341558a1d39aa244c1257780a">ImDrawFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_struct_im_draw_list_1a60bf9040ef3d09b39c4ba8f5a2a68ae9"/><section>
    <title>PathStroke()</title>
<indexterm><primary>PathStroke</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>PathStroke</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImDrawList::PathStroke (<link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col, <link linkend="_imgui_8h_1af2ef7e1341558a1d39aa244c1257780a">ImDrawFlags</link> flags = <computeroutput>0</computeroutput>
, float thickness = <computeroutput>1.0f</computeroutput>
)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_im_draw_list_1a44f40c59ca755f559020f5a7fa81103a"/><section>
    <title>PopClipRect()</title>
<indexterm><primary>PopClipRect</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>PopClipRect</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImDrawList::PopClipRect ( )</computeroutput></para></section>
<anchor xml:id="_struct_im_draw_list_1ade9286c5ca58753f7bd571b30e2ff76c"/><section>
    <title>PopTextureID()</title>
<indexterm><primary>PopTextureID</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>PopTextureID</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImDrawList::PopTextureID ( )</computeroutput></para></section>
<anchor xml:id="_struct_im_draw_list_1a9df27414aaca5f34ac3664a8b82582b5"/><section>
    <title>PrimQuadUV()</title>
<indexterm><primary>PrimQuadUV</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>PrimQuadUV</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImDrawList::PrimQuadUV (const <link linkend="_struct_im_vec2">ImVec2</link> &amp; a, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; b, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; c, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; d, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; uv_a, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; uv_b, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; uv_c, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; uv_d, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col)</computeroutput></para></section>
<anchor xml:id="_struct_im_draw_list_1ae2be093563f1d20b8190b7c423113925"/><section>
    <title>PrimRect()</title>
<indexterm><primary>PrimRect</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>PrimRect</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImDrawList::PrimRect (const <link linkend="_struct_im_vec2">ImVec2</link> &amp; a, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; b, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col)</computeroutput></para></section>
<anchor xml:id="_struct_im_draw_list_1a77d48ed5b33ccdd908824c0a3bebfff8"/><section>
    <title>PrimRectUV()</title>
<indexterm><primary>PrimRectUV</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>PrimRectUV</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImDrawList::PrimRectUV (const <link linkend="_struct_im_vec2">ImVec2</link> &amp; a, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; b, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; uv_a, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; uv_b, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col)</computeroutput></para></section>
<anchor xml:id="_struct_im_draw_list_1a879aa38dbfb0344e3e023d65c002c7d7"/><section>
    <title>PrimReserve()</title>
<indexterm><primary>PrimReserve</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>PrimReserve</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImDrawList::PrimReserve (int idx_count, int vtx_count)</computeroutput></para></section>
<anchor xml:id="_struct_im_draw_list_1a618a5e0efdefce08daa888b45bf8a1d1"/><section>
    <title>PrimUnreserve()</title>
<indexterm><primary>PrimUnreserve</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>PrimUnreserve</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImDrawList::PrimUnreserve (int idx_count, int vtx_count)</computeroutput></para></section>
<anchor xml:id="_struct_im_draw_list_1a405377158f0028ad8b4fb6509eef4532"/><section>
    <title>PrimVtx()</title>
<indexterm><primary>PrimVtx</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>PrimVtx</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImDrawList::PrimVtx (const <link linkend="_struct_im_vec2">ImVec2</link> &amp; pos, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; uv, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_im_draw_list_1a42b72f87a0084c02f11dcd1560c8bbc7"/><section>
    <title>PrimWriteIdx()</title>
<indexterm><primary>PrimWriteIdx</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>PrimWriteIdx</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImDrawList::PrimWriteIdx (<link linkend="_imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1">ImDrawIdx</link> idx)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_im_draw_list_1af86de4faf6c8e978fb712ea14c5d0c5f"/><section>
    <title>PrimWriteVtx()</title>
<indexterm><primary>PrimWriteVtx</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>PrimWriteVtx</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImDrawList::PrimWriteVtx (const <link linkend="_struct_im_vec2">ImVec2</link> &amp; pos, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; uv, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_im_draw_list_1a608a9d9a83715ba87dced8321ed64329"/><section>
    <title>PushClipRect()</title>
<indexterm><primary>PushClipRect</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>PushClipRect</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImDrawList::PushClipRect (const <link linkend="_struct_im_vec2">ImVec2</link> &amp; clip_rect_min, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; clip_rect_max, bool intersect_with_current_clip_rect = <computeroutput>false</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_struct_im_draw_list_1a0ab1ab409f0e269755e50a77901bae39"/><section>
    <title>PushClipRectFullScreen()</title>
<indexterm><primary>PushClipRectFullScreen</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>PushClipRectFullScreen</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImDrawList::PushClipRectFullScreen ( )</computeroutput></para></section>
<anchor xml:id="_struct_im_draw_list_1a7ac41e329a9df911b4823ef0150cee16"/><section>
    <title>PushTextureID()</title>
<indexterm><primary>PushTextureID</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>PushTextureID</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImDrawList::PushTextureID (<link linkend="_imgui_8h_1a364f4447ecbc4ca176145ccff9db6286">ImTextureID</link> texture_id)</computeroutput></para></section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_struct_im_draw_list_1ae950024f053f3c94dc2c763d20be609d"/><section>
    <title>_ClipRectStack</title>
<indexterm><primary>_ClipRectStack</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>_ClipRectStack</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_vector">ImVector</link>&lt;<link linkend="_struct_im_vec4">ImVec4</link>&gt; ImDrawList::_ClipRectStack</computeroutput></para></section>
<anchor xml:id="_struct_im_draw_list_1a87d1ec89ec6a742fd4d097d2b924e92b"/><section>
    <title>_CmdHeader</title>
<indexterm><primary>_CmdHeader</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>_CmdHeader</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_draw_cmd_header">ImDrawCmdHeader</link> ImDrawList::_CmdHeader</computeroutput></para></section>
<anchor xml:id="_struct_im_draw_list_1ad5a67c6f1487a812410e9979d1cf4a02"/><section>
    <title>_Data</title>
<indexterm><primary>_Data</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>_Data</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_draw_list_shared_data">ImDrawListSharedData</link>* ImDrawList::_Data</computeroutput></para></section>
<anchor xml:id="_struct_im_draw_list_1aa667eca45099e5679b161c17ac6ec7e0"/><section>
    <title>_FringeScale</title>
<indexterm><primary>_FringeScale</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>_FringeScale</secondary></indexterm>
<para><computeroutput>float ImDrawList::_FringeScale</computeroutput></para></section>
<anchor xml:id="_struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843"/><section>
    <title>_IdxWritePtr</title>
<indexterm><primary>_IdxWritePtr</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>_IdxWritePtr</secondary></indexterm>
<para><computeroutput><link linkend="_imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1">ImDrawIdx</link>* ImDrawList::_IdxWritePtr</computeroutput></para></section>
<anchor xml:id="_struct_im_draw_list_1a643f385fb9d5fc35a431e72a10a212f5"/><section>
    <title>_OwnerName</title>
<indexterm><primary>_OwnerName</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>_OwnerName</secondary></indexterm>
<para><computeroutput>const char* ImDrawList::_OwnerName</computeroutput></para></section>
<anchor xml:id="_struct_im_draw_list_1a5bdc39abf351360500048628b8dc1b07"/><section>
    <title>_Path</title>
<indexterm><primary>_Path</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>_Path</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_vector">ImVector</link>&lt;<link linkend="_struct_im_vec2">ImVec2</link>&gt; ImDrawList::_Path</computeroutput></para></section>
<anchor xml:id="_struct_im_draw_list_1a2893207705100e8a5da8122da56bd162"/><section>
    <title>_Splitter</title>
<indexterm><primary>_Splitter</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>_Splitter</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_draw_list_splitter">ImDrawListSplitter</link> ImDrawList::_Splitter</computeroutput></para></section>
<anchor xml:id="_struct_im_draw_list_1a848faddd121da050214b8d8159e5e704"/><section>
    <title>_TextureIdStack</title>
<indexterm><primary>_TextureIdStack</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>_TextureIdStack</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_vector">ImVector</link>&lt;<link linkend="_imgui_8h_1a364f4447ecbc4ca176145ccff9db6286">ImTextureID</link>&gt; ImDrawList::_TextureIdStack</computeroutput></para></section>
<anchor xml:id="_struct_im_draw_list_1a2228793183665bc3d8612795555fe505"/><section>
    <title>_VtxCurrentIdx</title>
<indexterm><primary>_VtxCurrentIdx</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>_VtxCurrentIdx</secondary></indexterm>
<para><computeroutput>unsigned int ImDrawList::_VtxCurrentIdx</computeroutput></para></section>
<anchor xml:id="_struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073"/><section>
    <title>_VtxWritePtr</title>
<indexterm><primary>_VtxWritePtr</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>_VtxWritePtr</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_draw_vert">ImDrawVert</link>* ImDrawList::_VtxWritePtr</computeroutput></para></section>
<anchor xml:id="_struct_im_draw_list_1a67a4b5cc4c83bc3b81d96c46cbd38a07"/><section>
    <title>CmdBuffer</title>
<indexterm><primary>CmdBuffer</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>CmdBuffer</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_vector">ImVector</link>&lt;<link linkend="_struct_im_draw_cmd">ImDrawCmd</link>&gt; ImDrawList::CmdBuffer</computeroutput></para></section>
<anchor xml:id="_struct_im_draw_list_1ada2c004661663ef875f4d4c7ec0b4557"/><section>
    <title>Flags</title>
<indexterm><primary>Flags</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>Flags</secondary></indexterm>
<para><computeroutput><link linkend="_imgui_8h_1a1adb61806505bf501bb0fbcdf4414360">ImDrawListFlags</link> ImDrawList::Flags</computeroutput></para></section>
<anchor xml:id="_struct_im_draw_list_1adf292ff70a954d82daf061c609e75dfc"/><section>
    <title>IdxBuffer</title>
<indexterm><primary>IdxBuffer</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>IdxBuffer</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_vector">ImVector</link>&lt;<link linkend="_imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1">ImDrawIdx</link>&gt; ImDrawList::IdxBuffer</computeroutput></para></section>
<anchor xml:id="_struct_im_draw_list_1aa8ff4aee39cf3c3791b7e29a7b4264be"/><section>
    <title>VtxBuffer</title>
<indexterm><primary>VtxBuffer</primary><secondary>ImDrawList</secondary></indexterm>
<indexterm><primary>ImDrawList</primary><secondary>VtxBuffer</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_vector">ImVector</link>&lt;<link linkend="_struct_im_draw_vert">ImDrawVert</link>&gt; ImDrawList::VtxBuffer</computeroutput></para></section>
<para>
The documentation for this struct was generated from the following files:</para>
<link linkend="_imgui_8h">imgui.h</link><link linkend="_imgui__draw_8cpp">imgui_draw.cpp</link></section>
</section>

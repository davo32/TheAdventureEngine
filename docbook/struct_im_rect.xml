<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_struct_im_rect" xml:lang="en-US">
<title>ImRect Struct Reference</title>
<indexterm><primary>ImRect</primary></indexterm>
<para>
<computeroutput>#include &lt;imgui_internal.h&gt;</computeroutput>
</para>
Collaboration diagram for ImRect:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_im_rect__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>constexpr <link linkend="_struct_im_rect_1a1e9548c8a334dfd32eaf4d399aa740e9">ImRect</link> ()</para>
</listitem>
            <listitem><para>constexpr <link linkend="_struct_im_rect_1af7bfb620fd01ea1f7c62c7c04e880ec4">ImRect</link> (const <link linkend="_struct_im_vec2">ImVec2</link> &amp;min, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;max)</para>
</listitem>
            <listitem><para>constexpr <link linkend="_struct_im_rect_1a79261b2cf06a797515ff63332762748a">ImRect</link> (const <link linkend="_struct_im_vec4">ImVec4</link> &amp;v)</para>
</listitem>
            <listitem><para>constexpr <link linkend="_struct_im_rect_1a8293a024ed727cf2873e51742ca629b2">ImRect</link> (float x1, float y1, float x2, float y2)</para>
</listitem>
            <listitem><para><link linkend="_struct_im_vec2">ImVec2</link> <link linkend="_struct_im_rect_1aae13f8003184fd84f29d27c3c074cf43">GetCenter</link> () const</para>
</listitem>
            <listitem><para><link linkend="_struct_im_vec2">ImVec2</link> <link linkend="_struct_im_rect_1ae459d9c50003058cfb34519a571aaf33">GetSize</link> () const</para>
</listitem>
            <listitem><para>float <link linkend="_struct_im_rect_1afa75cb8491f20901c96166d17dcddac4">GetWidth</link> () const</para>
</listitem>
            <listitem><para>float <link linkend="_struct_im_rect_1a748d8ae9cb26508951ec6e2f2df0625b">GetHeight</link> () const</para>
</listitem>
            <listitem><para>float <link linkend="_struct_im_rect_1acb166afad83795305190598a7b92a185">GetArea</link> () const</para>
</listitem>
            <listitem><para><link linkend="_struct_im_vec2">ImVec2</link> <link linkend="_struct_im_rect_1a1d4d972329722b51dca4499cb5931b4b">GetTL</link> () const</para>
</listitem>
            <listitem><para><link linkend="_struct_im_vec2">ImVec2</link> <link linkend="_struct_im_rect_1acae90248a96be4acf1524071fca1c3f3">GetTR</link> () const</para>
</listitem>
            <listitem><para><link linkend="_struct_im_vec2">ImVec2</link> <link linkend="_struct_im_rect_1a59d9751bc7be6745dddf5b83b9155669">GetBL</link> () const</para>
</listitem>
            <listitem><para><link linkend="_struct_im_vec2">ImVec2</link> <link linkend="_struct_im_rect_1ad2f2687254beed5a9b19bde0d6fa14f5">GetBR</link> () const</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_im_rect_1ac583156fd0e9306181fff5d120b262ea">Contains</link> (const <link linkend="_struct_im_vec2">ImVec2</link> &amp;p) const</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_im_rect_1ad6043344d8ac30d5f342c71641cfe24b">Contains</link> (const <link linkend="_struct_im_rect">ImRect</link> &amp;r) const</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_im_rect_1a8dbab244f4e5b786faa9684eb85110fc">ContainsWithPad</link> (const <link linkend="_struct_im_vec2">ImVec2</link> &amp;p, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;pad) const</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_im_rect_1a0af3bade3781e5e7c6afdf71ccfb0d43">Overlaps</link> (const <link linkend="_struct_im_rect">ImRect</link> &amp;r) const</para>
</listitem>
            <listitem><para><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_rect_1a68996cb6b16a023f0a051981cd5be89e">Add</link> (const <link linkend="_struct_im_vec2">ImVec2</link> &amp;p)</para>
</listitem>
            <listitem><para><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_rect_1ab07f581cc78eee99b42f40f77d9fac8e">Add</link> (const <link linkend="_struct_im_rect">ImRect</link> &amp;r)</para>
</listitem>
            <listitem><para><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_rect_1af33a7424c3341d08acd69da30c27c753">Expand</link> (const float amount)</para>
</listitem>
            <listitem><para><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_rect_1ac0b0b88fe65725b4694cd7d91d42d382">Expand</link> (const <link linkend="_struct_im_vec2">ImVec2</link> &amp;amount)</para>
</listitem>
            <listitem><para><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_rect_1a7f799afba3d1c61212448709d9e1a79b">Translate</link> (const <link linkend="_struct_im_vec2">ImVec2</link> &amp;d)</para>
</listitem>
            <listitem><para><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_rect_1a20c399583fc60a1f73715b3c6468a89d">TranslateX</link> (float dx)</para>
</listitem>
            <listitem><para><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_rect_1abb777eaa8fd13ad6b7d6dab56d29fe52">TranslateY</link> (float dy)</para>
</listitem>
            <listitem><para><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_rect_1ac02d5cf6ce0358aea9ed9df43d368f3f">ClipWith</link> (const <link linkend="_struct_im_rect">ImRect</link> &amp;r)</para>
</listitem>
            <listitem><para><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_rect_1a32a5aaca4161b5ffa3f352d293a449ff">ClipWithFull</link> (const <link linkend="_struct_im_rect">ImRect</link> &amp;r)</para>
</listitem>
            <listitem><para><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_rect_1a8fdf75a0c64ff29f65113cd9f8be77ab">Floor</link> ()</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_im_rect_1a140efca57832182e2483e5fe4ba50422">IsInverted</link> () const</para>
</listitem>
            <listitem><para><link linkend="_struct_im_vec4">ImVec4</link> <link linkend="_struct_im_rect_1a2afeb24632fae3848977ff2772036200">ToVec4</link> () const</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para><link linkend="_struct_im_vec2">ImVec2</link> <link linkend="_struct_im_rect_1af8f3fbf7ec983e03548b88e14ba68aa8">Min</link></para>
</listitem>
            <listitem><para><link linkend="_struct_im_vec2">ImVec2</link> <link linkend="_struct_im_rect_1aad58c13340d320b350a72a037e3f7628">Max</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_struct_im_rect_1a1e9548c8a334dfd32eaf4d399aa740e9"/><section>
    <title>ImRect()<computeroutput>[1/4]</computeroutput></title>
<indexterm><primary>ImRect</primary><secondary>ImRect</secondary></indexterm>
<indexterm><primary>ImRect</primary><secondary>ImRect</secondary></indexterm>
<para><computeroutput>constexpr ImRect::ImRect ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_im_rect_1af7bfb620fd01ea1f7c62c7c04e880ec4"/><section>
    <title>ImRect()<computeroutput>[2/4]</computeroutput></title>
<indexterm><primary>ImRect</primary><secondary>ImRect</secondary></indexterm>
<indexterm><primary>ImRect</primary><secondary>ImRect</secondary></indexterm>
<para><computeroutput>constexpr ImRect::ImRect (const <link linkend="_struct_im_vec2">ImVec2</link> &amp; min, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; max)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_im_rect_1a79261b2cf06a797515ff63332762748a"/><section>
    <title>ImRect()<computeroutput>[3/4]</computeroutput></title>
<indexterm><primary>ImRect</primary><secondary>ImRect</secondary></indexterm>
<indexterm><primary>ImRect</primary><secondary>ImRect</secondary></indexterm>
<para><computeroutput>constexpr ImRect::ImRect (const <link linkend="_struct_im_vec4">ImVec4</link> &amp; v)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_im_rect_1a8293a024ed727cf2873e51742ca629b2"/><section>
    <title>ImRect()<computeroutput>[4/4]</computeroutput></title>
<indexterm><primary>ImRect</primary><secondary>ImRect</secondary></indexterm>
<indexterm><primary>ImRect</primary><secondary>ImRect</secondary></indexterm>
<para><computeroutput>constexpr ImRect::ImRect (float x1, float y1, float x2, float y2)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_struct_im_rect_1ab07f581cc78eee99b42f40f77d9fac8e"/><section>
    <title>Add()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>Add</primary><secondary>ImRect</secondary></indexterm>
<indexterm><primary>ImRect</primary><secondary>Add</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImRect::Add (const <link linkend="_struct_im_rect">ImRect</link> &amp; r)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_im_rect_1a68996cb6b16a023f0a051981cd5be89e"/><section>
    <title>Add()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>Add</primary><secondary>ImRect</secondary></indexterm>
<indexterm><primary>ImRect</primary><secondary>Add</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImRect::Add (const <link linkend="_struct_im_vec2">ImVec2</link> &amp; p)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_im_rect_1ac02d5cf6ce0358aea9ed9df43d368f3f"/><section>
    <title>ClipWith()</title>
<indexterm><primary>ClipWith</primary><secondary>ImRect</secondary></indexterm>
<indexterm><primary>ImRect</primary><secondary>ClipWith</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImRect::ClipWith (const <link linkend="_struct_im_rect">ImRect</link> &amp; r)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_im_rect_1a32a5aaca4161b5ffa3f352d293a449ff"/><section>
    <title>ClipWithFull()</title>
<indexterm><primary>ClipWithFull</primary><secondary>ImRect</secondary></indexterm>
<indexterm><primary>ImRect</primary><secondary>ClipWithFull</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImRect::ClipWithFull (const <link linkend="_struct_im_rect">ImRect</link> &amp; r)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_im_rect_1ad6043344d8ac30d5f342c71641cfe24b"/><section>
    <title>Contains()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>Contains</primary><secondary>ImRect</secondary></indexterm>
<indexterm><primary>ImRect</primary><secondary>Contains</secondary></indexterm>
<para><computeroutput>bool ImRect::Contains (const <link linkend="_struct_im_rect">ImRect</link> &amp; r) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_im_rect_1ac583156fd0e9306181fff5d120b262ea"/><section>
    <title>Contains()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>Contains</primary><secondary>ImRect</secondary></indexterm>
<indexterm><primary>ImRect</primary><secondary>Contains</secondary></indexterm>
<para><computeroutput>bool ImRect::Contains (const <link linkend="_struct_im_vec2">ImVec2</link> &amp; p) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_im_rect_1a8dbab244f4e5b786faa9684eb85110fc"/><section>
    <title>ContainsWithPad()</title>
<indexterm><primary>ContainsWithPad</primary><secondary>ImRect</secondary></indexterm>
<indexterm><primary>ImRect</primary><secondary>ContainsWithPad</secondary></indexterm>
<para><computeroutput>bool ImRect::ContainsWithPad (const <link linkend="_struct_im_vec2">ImVec2</link> &amp; p, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; pad) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_im_rect_1af33a7424c3341d08acd69da30c27c753"/><section>
    <title>Expand()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>Expand</primary><secondary>ImRect</secondary></indexterm>
<indexterm><primary>ImRect</primary><secondary>Expand</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImRect::Expand (const float amount)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_im_rect_1ac0b0b88fe65725b4694cd7d91d42d382"/><section>
    <title>Expand()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>Expand</primary><secondary>ImRect</secondary></indexterm>
<indexterm><primary>ImRect</primary><secondary>Expand</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImRect::Expand (const <link linkend="_struct_im_vec2">ImVec2</link> &amp; amount)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_im_rect_1a8fdf75a0c64ff29f65113cd9f8be77ab"/><section>
    <title>Floor()</title>
<indexterm><primary>Floor</primary><secondary>ImRect</secondary></indexterm>
<indexterm><primary>ImRect</primary><secondary>Floor</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImRect::Floor ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_im_rect_1acb166afad83795305190598a7b92a185"/><section>
    <title>GetArea()</title>
<indexterm><primary>GetArea</primary><secondary>ImRect</secondary></indexterm>
<indexterm><primary>ImRect</primary><secondary>GetArea</secondary></indexterm>
<para><computeroutput>float ImRect::GetArea ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_im_rect_1a59d9751bc7be6745dddf5b83b9155669"/><section>
    <title>GetBL()</title>
<indexterm><primary>GetBL</primary><secondary>ImRect</secondary></indexterm>
<indexterm><primary>ImRect</primary><secondary>GetBL</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_vec2">ImVec2</link> ImRect::GetBL ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_im_rect_1ad2f2687254beed5a9b19bde0d6fa14f5"/><section>
    <title>GetBR()</title>
<indexterm><primary>GetBR</primary><secondary>ImRect</secondary></indexterm>
<indexterm><primary>ImRect</primary><secondary>GetBR</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_vec2">ImVec2</link> ImRect::GetBR ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_im_rect_1aae13f8003184fd84f29d27c3c074cf43"/><section>
    <title>GetCenter()</title>
<indexterm><primary>GetCenter</primary><secondary>ImRect</secondary></indexterm>
<indexterm><primary>ImRect</primary><secondary>GetCenter</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_vec2">ImVec2</link> ImRect::GetCenter ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_im_rect_1a748d8ae9cb26508951ec6e2f2df0625b"/><section>
    <title>GetHeight()</title>
<indexterm><primary>GetHeight</primary><secondary>ImRect</secondary></indexterm>
<indexterm><primary>ImRect</primary><secondary>GetHeight</secondary></indexterm>
<para><computeroutput>float ImRect::GetHeight ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_im_rect_1ae459d9c50003058cfb34519a571aaf33"/><section>
    <title>GetSize()</title>
<indexterm><primary>GetSize</primary><secondary>ImRect</secondary></indexterm>
<indexterm><primary>ImRect</primary><secondary>GetSize</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_vec2">ImVec2</link> ImRect::GetSize ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_im_rect_1a1d4d972329722b51dca4499cb5931b4b"/><section>
    <title>GetTL()</title>
<indexterm><primary>GetTL</primary><secondary>ImRect</secondary></indexterm>
<indexterm><primary>ImRect</primary><secondary>GetTL</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_vec2">ImVec2</link> ImRect::GetTL ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_im_rect_1acae90248a96be4acf1524071fca1c3f3"/><section>
    <title>GetTR()</title>
<indexterm><primary>GetTR</primary><secondary>ImRect</secondary></indexterm>
<indexterm><primary>ImRect</primary><secondary>GetTR</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_vec2">ImVec2</link> ImRect::GetTR ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_im_rect_1afa75cb8491f20901c96166d17dcddac4"/><section>
    <title>GetWidth()</title>
<indexterm><primary>GetWidth</primary><secondary>ImRect</secondary></indexterm>
<indexterm><primary>ImRect</primary><secondary>GetWidth</secondary></indexterm>
<para><computeroutput>float ImRect::GetWidth ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_im_rect_1a140efca57832182e2483e5fe4ba50422"/><section>
    <title>IsInverted()</title>
<indexterm><primary>IsInverted</primary><secondary>ImRect</secondary></indexterm>
<indexterm><primary>ImRect</primary><secondary>IsInverted</secondary></indexterm>
<para><computeroutput>bool ImRect::IsInverted ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_im_rect_1a0af3bade3781e5e7c6afdf71ccfb0d43"/><section>
    <title>Overlaps()</title>
<indexterm><primary>Overlaps</primary><secondary>ImRect</secondary></indexterm>
<indexterm><primary>ImRect</primary><secondary>Overlaps</secondary></indexterm>
<para><computeroutput>bool ImRect::Overlaps (const <link linkend="_struct_im_rect">ImRect</link> &amp; r) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_im_rect_1a2afeb24632fae3848977ff2772036200"/><section>
    <title>ToVec4()</title>
<indexterm><primary>ToVec4</primary><secondary>ImRect</secondary></indexterm>
<indexterm><primary>ImRect</primary><secondary>ToVec4</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_vec4">ImVec4</link> ImRect::ToVec4 ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_im_rect_1a7f799afba3d1c61212448709d9e1a79b"/><section>
    <title>Translate()</title>
<indexterm><primary>Translate</primary><secondary>ImRect</secondary></indexterm>
<indexterm><primary>ImRect</primary><secondary>Translate</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImRect::Translate (const <link linkend="_struct_im_vec2">ImVec2</link> &amp; d)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_im_rect_1a20c399583fc60a1f73715b3c6468a89d"/><section>
    <title>TranslateX()</title>
<indexterm><primary>TranslateX</primary><secondary>ImRect</secondary></indexterm>
<indexterm><primary>ImRect</primary><secondary>TranslateX</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImRect::TranslateX (float dx)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_im_rect_1abb777eaa8fd13ad6b7d6dab56d29fe52"/><section>
    <title>TranslateY()</title>
<indexterm><primary>TranslateY</primary><secondary>ImRect</secondary></indexterm>
<indexterm><primary>ImRect</primary><secondary>TranslateY</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImRect::TranslateY (float dy)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_struct_im_rect_1aad58c13340d320b350a72a037e3f7628"/><section>
    <title>Max</title>
<indexterm><primary>Max</primary><secondary>ImRect</secondary></indexterm>
<indexterm><primary>ImRect</primary><secondary>Max</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_vec2">ImVec2</link> ImRect::Max</computeroutput></para></section>
<anchor xml:id="_struct_im_rect_1af8f3fbf7ec983e03548b88e14ba68aa8"/><section>
    <title>Min</title>
<indexterm><primary>Min</primary><secondary>ImRect</secondary></indexterm>
<indexterm><primary>ImRect</primary><secondary>Min</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_vec2">ImVec2</link> ImRect::Min</computeroutput></para></section>
<para>
The documentation for this struct was generated from the following file:</para>
<link linkend="_imgui__internal_8h">imgui_internal.h</link></section>
</section>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_imgui__draw_8cpp" xml:lang="en-US">
<title>imgui_draw.cpp File Reference</title>
<indexterm><primary>imgui_draw.cpp</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &quot;imgui.h&quot;<?linebreak?>#include &quot;imgui_internal.h&quot;<?linebreak?>#include &lt;stdio.h&gt;<?linebreak?>#include &quot;imstb_rectpack.h&quot;<?linebreak?>#include &quot;imstb_truetype.h&quot;<?linebreak?></programlisting>Include dependency graph for imgui_draw.cpp:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="imgui__draw_8cpp__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_struct_im_font_build_src_data">ImFontBuildSrcData</link></para>
</listitem>
            <listitem><para>struct <link linkend="_struct_im_font_build_dst_data">ImFontBuildDstData</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#define <link linkend="_imgui__draw_8cpp_1adf4d73301961430d50d7edd96f92ce38">IMGUI_DEFINE_MATH_OPERATORS</link></para>
</listitem>
            <listitem><para>#define <link linkend="_imgui__draw_8cpp_1aebe589aefd15ba7289a47168e31b5e45">STBRP_STATIC</link></para>
</listitem>
            <listitem><para>#define <link linkend="_imgui__draw_8cpp_1a9592e63d0df8b6f0712e8da3aea5db23">STBRP_ASSERT</link>(x)&#160;&#160;&#160;do { <link linkend="_imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920">IM_ASSERT</link>(x); } while (0)</para>
</listitem>
            <listitem><para>#define <link linkend="_imgui__draw_8cpp_1a152aa757fb023d39f16dd537e66b60f0">STBRP_SORT</link>&#160;&#160;&#160;ImQsort</para>
</listitem>
            <listitem><para>#define <link linkend="_imgui__draw_8cpp_1a0791e69f0dcd58efa795dd50eb8c6cd0">STB_RECT_PACK_IMPLEMENTATION</link></para>
</listitem>
            <listitem><para>#define <link linkend="_imgui__draw_8cpp_1a8f6734fe0cb6d6aa09e494602afa96be">STBTT_malloc</link>(x,  u)&#160;&#160;&#160;((<link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link>)(u), <link linkend="_imgui_8h_1a40113fb128e7035c8d4aaeeed565e7aa">IM_ALLOC</link>(x))</para>
</listitem>
            <listitem><para>#define <link linkend="_imgui__draw_8cpp_1a357d3564409e68f1b694e06f7beeca7e">STBTT_free</link>(x,  u)&#160;&#160;&#160;((<link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link>)(u), <link linkend="_imgui_8h_1ac24040f4c2d54ba3216c829703498ebb">IM_FREE</link>(x))</para>
</listitem>
            <listitem><para>#define <link linkend="_imgui__draw_8cpp_1a1123d905f512c19c8d796a6d294a3a84">STBTT_assert</link>(x)&#160;&#160;&#160;do { <link linkend="_imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920">IM_ASSERT</link>(x); } while(0)</para>
</listitem>
            <listitem><para>#define <link linkend="_imgui__draw_8cpp_1ab937f3c3c6d0c2c126c50bb32e379f02">STBTT_fmod</link>(x,  <link linkend="_imgui__impl__opengl3__loader_8h_1a5e247fc24ceb70d83f6ad59149b8910a">y</link>)&#160;&#160;&#160;<link linkend="_imgui__internal_8h_1ab31c49c24dd5d51dd629a56b5d11a85e">ImFmod</link>(x,<link linkend="_imgui__impl__opengl3__loader_8h_1a5e247fc24ceb70d83f6ad59149b8910a">y</link>)</para>
</listitem>
            <listitem><para>#define <link linkend="_imgui__draw_8cpp_1ace1fcbebd394a5bed76bc9b97dbe8d5a">STBTT_sqrt</link>(x)&#160;&#160;&#160;<link linkend="_imgui__internal_8h_1af45b12e2af4037adec57b0a9488b45c2">ImSqrt</link>(x)</para>
</listitem>
            <listitem><para>#define <link linkend="_imgui__draw_8cpp_1a20c159e8e6985b92a96497881709659a">STBTT_pow</link>(x,  <link linkend="_imgui__impl__opengl3__loader_8h_1a5e247fc24ceb70d83f6ad59149b8910a">y</link>)&#160;&#160;&#160;ImPow(x,<link linkend="_imgui__impl__opengl3__loader_8h_1a5e247fc24ceb70d83f6ad59149b8910a">y</link>)</para>
</listitem>
            <listitem><para>#define <link linkend="_imgui__draw_8cpp_1a2b639a5c1ed39bb9e223a78b743f3769">STBTT_fabs</link>(x)&#160;&#160;&#160;<link linkend="_imgui__internal_8h_1aa886f20aead1a15ce961ac6fa361b044">ImFabs</link>(x)</para>
</listitem>
            <listitem><para>#define <link linkend="_imgui__draw_8cpp_1a37ec4d14918346d3451d4f44f24d4710">STBTT_ifloor</link>(x)&#160;&#160;&#160;((int)ImFloor(x))</para>
</listitem>
            <listitem><para>#define <link linkend="_imgui__draw_8cpp_1a284a26aeebf87bc1688d38b3b16c7248">STBTT_iceil</link>(x)&#160;&#160;&#160;((int)<link linkend="_imgui__internal_8h_1a09170e101a72d70544ae6edfe495ee8f">ImCeil</link>(x))</para>
</listitem>
            <listitem><para>#define <link linkend="_imgui__draw_8cpp_1adb252cc9576591994fdf2f89baddc630">STBTT_STATIC</link></para>
</listitem>
            <listitem><para>#define <link linkend="_imgui__draw_8cpp_1afaa2f2d0d9d6726cfae6da070e736347">STB_TRUETYPE_IMPLEMENTATION</link></para>
</listitem>
            <listitem><para>#define <link linkend="_imgui__draw_8cpp_1a36c70a3a9dfec20d02bbb18e00a42ee1">ImDrawCmd_HeaderSize</link>&#160;&#160;&#160;(offsetof(<link linkend="_struct_im_draw_cmd">ImDrawCmd</link>, VtxOffset) + sizeof(unsigned int))</para>
</listitem>
            <listitem><para>#define <link linkend="_imgui__draw_8cpp_1ac140465795cda6fa747579fc0b1b29d0">ImDrawCmd_HeaderCompare</link>(CMD_LHS,  CMD_RHS)&#160;&#160;&#160;(memcmp(CMD_LHS, CMD_RHS, <link linkend="_imgui__draw_8cpp_1a36c70a3a9dfec20d02bbb18e00a42ee1">ImDrawCmd_HeaderSize</link>))</para>
</listitem>
            <listitem><para>#define <link linkend="_imgui__draw_8cpp_1a13d0eca12c1e2df442519a1a80d8cdaa">ImDrawCmd_HeaderCopy</link>(CMD_DST,  CMD_SRC)&#160;&#160;&#160;(memcpy(CMD_DST, CMD_SRC, <link linkend="_imgui__draw_8cpp_1a36c70a3a9dfec20d02bbb18e00a42ee1">ImDrawCmd_HeaderSize</link>))</para>
</listitem>
            <listitem><para>#define <link linkend="_imgui__draw_8cpp_1acbac18638b9456aa07cd48452f074eeb">ImDrawCmd_AreSequentialIdxOffset</link>(CMD_0,  CMD_1)&#160;&#160;&#160;(CMD_0-&gt;IdxOffset + CMD_0-&gt;ElemCount == CMD_1-&gt;IdxOffset)</para>
</listitem>
            <listitem><para>#define <link linkend="_imgui__draw_8cpp_1aa595f4d7f5dca6ca04e5b1648e84f0d6">IM_NORMALIZE2F_OVER_ZERO</link>(VX,  VY)&#160;&#160;&#160;{ float d2 = VX*VX + VY*VY; if (d2 &gt; 0.0f) { float inv_len = ImRsqrt(d2); VX *= inv_len; VY *= inv_len; } } (<link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link>)0</para>
</listitem>
            <listitem><para>#define <link linkend="_imgui__draw_8cpp_1ae801e54afba24c14221f81e1564615ef">IM_FIXNORMAL2F_MAX_INVLEN2</link>&#160;&#160;&#160;100.0f</para>
</listitem>
            <listitem><para>#define <link linkend="_imgui__draw_8cpp_1a4df703825e073b91ea24956d6021ee59">IM_FIXNORMAL2F</link>(VX,  VY)&#160;&#160;&#160;{ float d2 = VX*VX + VY*VY; if (d2 &gt; 0.000001f) { float inv_len2 = 1.0f / d2; if (inv_len2 &gt; <link linkend="_imgui__draw_8cpp_1ae801e54afba24c14221f81e1564615ef">IM_FIXNORMAL2F_MAX_INVLEN2</link>) inv_len2 = <link linkend="_imgui__draw_8cpp_1ae801e54afba24c14221f81e1564615ef">IM_FIXNORMAL2F_MAX_INVLEN2</link>; VX *= inv_len2; VY *= inv_len2; } } (<link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link>)0</para>
</listitem>
            <listitem><para>#define <link linkend="_imgui__draw_8cpp_1a8abf98f5e58a4b3dbbdf35bb1d5ee872">stb__in2</link>(x)&#160;&#160;&#160;((i[x] &lt;&lt; 8) + i[(x)+1])</para>
</listitem>
            <listitem><para>#define <link linkend="_imgui__draw_8cpp_1acdc23c4b28788003d2841185775661ff">stb__in3</link>(x)&#160;&#160;&#160;((i[x] &lt;&lt; 16) + <link linkend="_imgui__draw_8cpp_1a8abf98f5e58a4b3dbbdf35bb1d5ee872">stb__in2</link>((x)+1))</para>
</listitem>
            <listitem><para>#define <link linkend="_imgui__draw_8cpp_1a26702caa0fd7846cb92e8ba4d80446c3">stb__in4</link>(x)&#160;&#160;&#160;((i[x] &lt;&lt; 24) + <link linkend="_imgui__draw_8cpp_1acdc23c4b28788003d2841185775661ff">stb__in3</link>((x)+1))</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_struct_im_vec2">ImVec2</link> <link linkend="_imgui__draw_8cpp_1a313bb9d47244a5d27a5aeb4cd74f94a3">ImBezierCubicCalc</link> (const <link linkend="_struct_im_vec2">ImVec2</link> &amp;p1, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;p2, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;p3, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;p4, float t)</para>
</listitem>
            <listitem><para><link linkend="_struct_im_vec2">ImVec2</link> <link linkend="_imgui__draw_8cpp_1a9b3ec0353c3a10709ad21985942613da">ImBezierQuadraticCalc</link> (const <link linkend="_struct_im_vec2">ImVec2</link> &amp;p1, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;p2, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;p3, float t)</para>
</listitem>
            <listitem><para><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_imgui__draw_8cpp_1a8d5f3a053aae34ac7b93e39cb9096d06">ImFontAtlasBuildMultiplyCalcLookupTable</link> (unsigned char out_table[256], float in_brighten_factor)</para>
</listitem>
            <listitem><para><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_imgui__draw_8cpp_1a8dc3feae771599949b33712b520e9060">ImFontAtlasBuildMultiplyRectAlpha8</link> (const unsigned char table[256], unsigned char *<link linkend="_imgui__impl__opengl3__loader_8h_1aa6f05cf9167efe04d7c20e5d34561086">pixels</link>, int x, int <link linkend="_imgui__impl__opengl3__loader_8h_1a5e247fc24ceb70d83f6ad59149b8910a">y</link>, int w, int h, int <link linkend="_imgui__impl__opengl3__loader_8h_1adec60f1216ca1b900f8d776c5b6190e0">stride</link>)</para>
</listitem>
            <listitem><para>const <link linkend="_struct_im_font_builder_i_o">ImFontBuilderIO</link> * <link linkend="_imgui__draw_8cpp_1a4c276d0224ef420d570c9485c4c76a19">ImFontAtlasGetBuilderForStbTruetype</link> ()</para>
</listitem>
            <listitem><para><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_imgui__draw_8cpp_1ab58975478a1fbc1735cf9b15e2db5be0">ImFontAtlasUpdateConfigDataPointers</link> (<link linkend="_struct_im_font_atlas">ImFontAtlas</link> *atlas)</para>
</listitem>
            <listitem><para><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_imgui__draw_8cpp_1a4bea0932904c84de73237df3f1f76bdd">ImFontAtlasBuildSetupFont</link> (<link linkend="_struct_im_font_atlas">ImFontAtlas</link> *atlas, <link linkend="_struct_im_font">ImFont</link> *font, <link linkend="_struct_im_font_config">ImFontConfig</link> *font_config, float ascent, float descent)</para>
</listitem>
            <listitem><para><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_imgui__draw_8cpp_1add0fcd1708ca3540688d8277fc01bf3f">ImFontAtlasBuildPackCustomRects</link> (<link linkend="_struct_im_font_atlas">ImFontAtlas</link> *atlas, <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *stbrp_context_opaque)</para>
</listitem>
            <listitem><para><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_imgui__draw_8cpp_1acc7928ba77e5e06a342720ccf0a95ece">ImFontAtlasBuildRender8bppRectFromString</link> (<link linkend="_struct_im_font_atlas">ImFontAtlas</link> *atlas, int x, int <link linkend="_imgui__impl__opengl3__loader_8h_1a5e247fc24ceb70d83f6ad59149b8910a">y</link>, int w, int h, const char *in_str, char in_marker_char, unsigned char in_marker_pixel_value)</para>
</listitem>
            <listitem><para><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_imgui__draw_8cpp_1a66ac51ad223da84c7167d4c9f4cfb2fb">ImFontAtlasBuildRender32bppRectFromString</link> (<link linkend="_struct_im_font_atlas">ImFontAtlas</link> *atlas, int x, int <link linkend="_imgui__impl__opengl3__loader_8h_1a5e247fc24ceb70d83f6ad59149b8910a">y</link>, int w, int h, const char *in_str, char in_marker_char, unsigned int in_marker_pixel_value)</para>
</listitem>
            <listitem><para><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_imgui__draw_8cpp_1ac050ff181df43cec0b63d834b6039c3f">ImFontAtlasBuildInit</link> (<link linkend="_struct_im_font_atlas">ImFontAtlas</link> *atlas)</para>
</listitem>
            <listitem><para><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_imgui__draw_8cpp_1adbf0ee92b3ac86e30b9e81f552d15d37">ImFontAtlasBuildFinish</link> (<link linkend="_struct_im_font_atlas">ImFontAtlas</link> *atlas)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Variables    </title>
        <itemizedlist>
            <listitem><para>const int <link linkend="_imgui__draw_8cpp_1adf518fea7357febbb14eeecb692a8d95">FONT_ATLAS_DEFAULT_TEX_DATA_W</link> = 122</para>
</listitem>
            <listitem><para>const int <link linkend="_imgui__draw_8cpp_1a2c96fc3febbe9f4f6c042a2f975a5b1d">FONT_ATLAS_DEFAULT_TEX_DATA_H</link> = 27</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="_imgui__draw_8cpp_1a4df703825e073b91ea24956d6021ee59"/><section>
    <title>IM_FIXNORMAL2F</title>
<indexterm><primary>IM_FIXNORMAL2F</primary><secondary>imgui_draw.cpp</secondary></indexterm>
<indexterm><primary>imgui_draw.cpp</primary><secondary>IM_FIXNORMAL2F</secondary></indexterm>
<para><computeroutput>#define IM_FIXNORMAL2F( VX,  VY)&#160;&#160;&#160;{ float d2 = VX*VX + VY*VY; if (d2 &gt; 0.000001f) { float inv_len2 = 1.0f / d2; if (inv_len2 &gt; <link linkend="_imgui__draw_8cpp_1ae801e54afba24c14221f81e1564615ef">IM_FIXNORMAL2F_MAX_INVLEN2</link>) inv_len2 = <link linkend="_imgui__draw_8cpp_1ae801e54afba24c14221f81e1564615ef">IM_FIXNORMAL2F_MAX_INVLEN2</link>; VX *= inv_len2; VY *= inv_len2; } } (<link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link>)0</computeroutput></para></section>
<anchor xml:id="_imgui__draw_8cpp_1ae801e54afba24c14221f81e1564615ef"/><section>
    <title>IM_FIXNORMAL2F_MAX_INVLEN2</title>
<indexterm><primary>IM_FIXNORMAL2F_MAX_INVLEN2</primary><secondary>imgui_draw.cpp</secondary></indexterm>
<indexterm><primary>imgui_draw.cpp</primary><secondary>IM_FIXNORMAL2F_MAX_INVLEN2</secondary></indexterm>
<para><computeroutput>#define IM_FIXNORMAL2F_MAX_INVLEN2&#160;&#160;&#160;100.0f</computeroutput></para></section>
<anchor xml:id="_imgui__draw_8cpp_1aa595f4d7f5dca6ca04e5b1648e84f0d6"/><section>
    <title>IM_NORMALIZE2F_OVER_ZERO</title>
<indexterm><primary>IM_NORMALIZE2F_OVER_ZERO</primary><secondary>imgui_draw.cpp</secondary></indexterm>
<indexterm><primary>imgui_draw.cpp</primary><secondary>IM_NORMALIZE2F_OVER_ZERO</secondary></indexterm>
<para><computeroutput>#define IM_NORMALIZE2F_OVER_ZERO( VX,  VY)&#160;&#160;&#160;{ float d2 = VX*VX + VY*VY; if (d2 &gt; 0.0f) { float inv_len = ImRsqrt(d2); VX *= inv_len; VY *= inv_len; } } (<link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link>)0</computeroutput></para></section>
<anchor xml:id="_imgui__draw_8cpp_1acbac18638b9456aa07cd48452f074eeb"/><section>
    <title>ImDrawCmd_AreSequentialIdxOffset</title>
<indexterm><primary>ImDrawCmd_AreSequentialIdxOffset</primary><secondary>imgui_draw.cpp</secondary></indexterm>
<indexterm><primary>imgui_draw.cpp</primary><secondary>ImDrawCmd_AreSequentialIdxOffset</secondary></indexterm>
<para><computeroutput>#define ImDrawCmd_AreSequentialIdxOffset( CMD_0,  CMD_1)&#160;&#160;&#160;(CMD_0-&gt;IdxOffset + CMD_0-&gt;ElemCount == CMD_1-&gt;IdxOffset)</computeroutput></para></section>
<anchor xml:id="_imgui__draw_8cpp_1ac140465795cda6fa747579fc0b1b29d0"/><section>
    <title>ImDrawCmd_HeaderCompare</title>
<indexterm><primary>ImDrawCmd_HeaderCompare</primary><secondary>imgui_draw.cpp</secondary></indexterm>
<indexterm><primary>imgui_draw.cpp</primary><secondary>ImDrawCmd_HeaderCompare</secondary></indexterm>
<para><computeroutput>#define ImDrawCmd_HeaderCompare( CMD_LHS,  CMD_RHS)&#160;&#160;&#160;(memcmp(CMD_LHS, CMD_RHS, <link linkend="_imgui__draw_8cpp_1a36c70a3a9dfec20d02bbb18e00a42ee1">ImDrawCmd_HeaderSize</link>))</computeroutput></para></section>
<anchor xml:id="_imgui__draw_8cpp_1a13d0eca12c1e2df442519a1a80d8cdaa"/><section>
    <title>ImDrawCmd_HeaderCopy</title>
<indexterm><primary>ImDrawCmd_HeaderCopy</primary><secondary>imgui_draw.cpp</secondary></indexterm>
<indexterm><primary>imgui_draw.cpp</primary><secondary>ImDrawCmd_HeaderCopy</secondary></indexterm>
<para><computeroutput>#define ImDrawCmd_HeaderCopy( CMD_DST,  CMD_SRC)&#160;&#160;&#160;(memcpy(CMD_DST, CMD_SRC, <link linkend="_imgui__draw_8cpp_1a36c70a3a9dfec20d02bbb18e00a42ee1">ImDrawCmd_HeaderSize</link>))</computeroutput></para></section>
<anchor xml:id="_imgui__draw_8cpp_1a36c70a3a9dfec20d02bbb18e00a42ee1"/><section>
    <title>ImDrawCmd_HeaderSize</title>
<indexterm><primary>ImDrawCmd_HeaderSize</primary><secondary>imgui_draw.cpp</secondary></indexterm>
<indexterm><primary>imgui_draw.cpp</primary><secondary>ImDrawCmd_HeaderSize</secondary></indexterm>
<para><computeroutput>#define ImDrawCmd_HeaderSize&#160;&#160;&#160;(offsetof(<link linkend="_struct_im_draw_cmd">ImDrawCmd</link>, VtxOffset) + sizeof(unsigned int))</computeroutput></para></section>
<anchor xml:id="_imgui__draw_8cpp_1adf4d73301961430d50d7edd96f92ce38"/><section>
    <title>IMGUI_DEFINE_MATH_OPERATORS</title>
<indexterm><primary>IMGUI_DEFINE_MATH_OPERATORS</primary><secondary>imgui_draw.cpp</secondary></indexterm>
<indexterm><primary>imgui_draw.cpp</primary><secondary>IMGUI_DEFINE_MATH_OPERATORS</secondary></indexterm>
<para><computeroutput>#define IMGUI_DEFINE_MATH_OPERATORS</computeroutput></para></section>
<anchor xml:id="_imgui__draw_8cpp_1a8abf98f5e58a4b3dbbdf35bb1d5ee872"/><section>
    <title>stb__in2</title>
<indexterm><primary>stb__in2</primary><secondary>imgui_draw.cpp</secondary></indexterm>
<indexterm><primary>imgui_draw.cpp</primary><secondary>stb__in2</secondary></indexterm>
<para><computeroutput>#define stb__in2( x)&#160;&#160;&#160;((i[x] &lt;&lt; 8) + i[(x)+1])</computeroutput></para></section>
<anchor xml:id="_imgui__draw_8cpp_1acdc23c4b28788003d2841185775661ff"/><section>
    <title>stb__in3</title>
<indexterm><primary>stb__in3</primary><secondary>imgui_draw.cpp</secondary></indexterm>
<indexterm><primary>imgui_draw.cpp</primary><secondary>stb__in3</secondary></indexterm>
<para><computeroutput>#define stb__in3( x)&#160;&#160;&#160;((i[x] &lt;&lt; 16) + <link linkend="_imgui__draw_8cpp_1a8abf98f5e58a4b3dbbdf35bb1d5ee872">stb__in2</link>((x)+1))</computeroutput></para></section>
<anchor xml:id="_imgui__draw_8cpp_1a26702caa0fd7846cb92e8ba4d80446c3"/><section>
    <title>stb__in4</title>
<indexterm><primary>stb__in4</primary><secondary>imgui_draw.cpp</secondary></indexterm>
<indexterm><primary>imgui_draw.cpp</primary><secondary>stb__in4</secondary></indexterm>
<para><computeroutput>#define stb__in4( x)&#160;&#160;&#160;((i[x] &lt;&lt; 24) + <link linkend="_imgui__draw_8cpp_1acdc23c4b28788003d2841185775661ff">stb__in3</link>((x)+1))</computeroutput></para></section>
<anchor xml:id="_imgui__draw_8cpp_1a0791e69f0dcd58efa795dd50eb8c6cd0"/><section>
    <title>STB_RECT_PACK_IMPLEMENTATION</title>
<indexterm><primary>STB_RECT_PACK_IMPLEMENTATION</primary><secondary>imgui_draw.cpp</secondary></indexterm>
<indexterm><primary>imgui_draw.cpp</primary><secondary>STB_RECT_PACK_IMPLEMENTATION</secondary></indexterm>
<para><computeroutput>#define STB_RECT_PACK_IMPLEMENTATION</computeroutput></para></section>
<anchor xml:id="_imgui__draw_8cpp_1afaa2f2d0d9d6726cfae6da070e736347"/><section>
    <title>STB_TRUETYPE_IMPLEMENTATION</title>
<indexterm><primary>STB_TRUETYPE_IMPLEMENTATION</primary><secondary>imgui_draw.cpp</secondary></indexterm>
<indexterm><primary>imgui_draw.cpp</primary><secondary>STB_TRUETYPE_IMPLEMENTATION</secondary></indexterm>
<para><computeroutput>#define STB_TRUETYPE_IMPLEMENTATION</computeroutput></para></section>
<anchor xml:id="_imgui__draw_8cpp_1a9592e63d0df8b6f0712e8da3aea5db23"/><section>
    <title>STBRP_ASSERT</title>
<indexterm><primary>STBRP_ASSERT</primary><secondary>imgui_draw.cpp</secondary></indexterm>
<indexterm><primary>imgui_draw.cpp</primary><secondary>STBRP_ASSERT</secondary></indexterm>
<para><computeroutput>#define STBRP_ASSERT( x)&#160;&#160;&#160;do { <link linkend="_imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920">IM_ASSERT</link>(x); } while (0)</computeroutput></para></section>
<anchor xml:id="_imgui__draw_8cpp_1a152aa757fb023d39f16dd537e66b60f0"/><section>
    <title>STBRP_SORT</title>
<indexterm><primary>STBRP_SORT</primary><secondary>imgui_draw.cpp</secondary></indexterm>
<indexterm><primary>imgui_draw.cpp</primary><secondary>STBRP_SORT</secondary></indexterm>
<para><computeroutput>#define STBRP_SORT&#160;&#160;&#160;ImQsort</computeroutput></para></section>
<anchor xml:id="_imgui__draw_8cpp_1aebe589aefd15ba7289a47168e31b5e45"/><section>
    <title>STBRP_STATIC</title>
<indexterm><primary>STBRP_STATIC</primary><secondary>imgui_draw.cpp</secondary></indexterm>
<indexterm><primary>imgui_draw.cpp</primary><secondary>STBRP_STATIC</secondary></indexterm>
<para><computeroutput>#define STBRP_STATIC</computeroutput></para></section>
<anchor xml:id="_imgui__draw_8cpp_1a1123d905f512c19c8d796a6d294a3a84"/><section>
    <title>STBTT_assert</title>
<indexterm><primary>STBTT_assert</primary><secondary>imgui_draw.cpp</secondary></indexterm>
<indexterm><primary>imgui_draw.cpp</primary><secondary>STBTT_assert</secondary></indexterm>
<para><computeroutput>#define STBTT_assert( x)&#160;&#160;&#160;do { <link linkend="_imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920">IM_ASSERT</link>(x); } while(0)</computeroutput></para></section>
<anchor xml:id="_imgui__draw_8cpp_1a2b639a5c1ed39bb9e223a78b743f3769"/><section>
    <title>STBTT_fabs</title>
<indexterm><primary>STBTT_fabs</primary><secondary>imgui_draw.cpp</secondary></indexterm>
<indexterm><primary>imgui_draw.cpp</primary><secondary>STBTT_fabs</secondary></indexterm>
<para><computeroutput>#define STBTT_fabs( x)&#160;&#160;&#160;<link linkend="_imgui__internal_8h_1aa886f20aead1a15ce961ac6fa361b044">ImFabs</link>(x)</computeroutput></para></section>
<anchor xml:id="_imgui__draw_8cpp_1ab937f3c3c6d0c2c126c50bb32e379f02"/><section>
    <title>STBTT_fmod</title>
<indexterm><primary>STBTT_fmod</primary><secondary>imgui_draw.cpp</secondary></indexterm>
<indexterm><primary>imgui_draw.cpp</primary><secondary>STBTT_fmod</secondary></indexterm>
<para><computeroutput>#define STBTT_fmod( x,  <link linkend="_imgui__impl__opengl3__loader_8h_1a5e247fc24ceb70d83f6ad59149b8910a">y</link>)&#160;&#160;&#160;<link linkend="_imgui__internal_8h_1ab31c49c24dd5d51dd629a56b5d11a85e">ImFmod</link>(x,<link linkend="_imgui__impl__opengl3__loader_8h_1a5e247fc24ceb70d83f6ad59149b8910a">y</link>)</computeroutput></para></section>
<anchor xml:id="_imgui__draw_8cpp_1a357d3564409e68f1b694e06f7beeca7e"/><section>
    <title>STBTT_free</title>
<indexterm><primary>STBTT_free</primary><secondary>imgui_draw.cpp</secondary></indexterm>
<indexterm><primary>imgui_draw.cpp</primary><secondary>STBTT_free</secondary></indexterm>
<para><computeroutput>#define STBTT_free( x,  u)&#160;&#160;&#160;((<link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link>)(u), <link linkend="_imgui_8h_1ac24040f4c2d54ba3216c829703498ebb">IM_FREE</link>(x))</computeroutput></para></section>
<anchor xml:id="_imgui__draw_8cpp_1a284a26aeebf87bc1688d38b3b16c7248"/><section>
    <title>STBTT_iceil</title>
<indexterm><primary>STBTT_iceil</primary><secondary>imgui_draw.cpp</secondary></indexterm>
<indexterm><primary>imgui_draw.cpp</primary><secondary>STBTT_iceil</secondary></indexterm>
<para><computeroutput>#define STBTT_iceil( x)&#160;&#160;&#160;((int)<link linkend="_imgui__internal_8h_1a09170e101a72d70544ae6edfe495ee8f">ImCeil</link>(x))</computeroutput></para></section>
<anchor xml:id="_imgui__draw_8cpp_1a37ec4d14918346d3451d4f44f24d4710"/><section>
    <title>STBTT_ifloor</title>
<indexterm><primary>STBTT_ifloor</primary><secondary>imgui_draw.cpp</secondary></indexterm>
<indexterm><primary>imgui_draw.cpp</primary><secondary>STBTT_ifloor</secondary></indexterm>
<para><computeroutput>#define STBTT_ifloor( x)&#160;&#160;&#160;((int)ImFloor(x))</computeroutput></para></section>
<anchor xml:id="_imgui__draw_8cpp_1a8f6734fe0cb6d6aa09e494602afa96be"/><section>
    <title>STBTT_malloc</title>
<indexterm><primary>STBTT_malloc</primary><secondary>imgui_draw.cpp</secondary></indexterm>
<indexterm><primary>imgui_draw.cpp</primary><secondary>STBTT_malloc</secondary></indexterm>
<para><computeroutput>#define STBTT_malloc( x,  u)&#160;&#160;&#160;((<link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link>)(u), <link linkend="_imgui_8h_1a40113fb128e7035c8d4aaeeed565e7aa">IM_ALLOC</link>(x))</computeroutput></para></section>
<anchor xml:id="_imgui__draw_8cpp_1a20c159e8e6985b92a96497881709659a"/><section>
    <title>STBTT_pow</title>
<indexterm><primary>STBTT_pow</primary><secondary>imgui_draw.cpp</secondary></indexterm>
<indexterm><primary>imgui_draw.cpp</primary><secondary>STBTT_pow</secondary></indexterm>
<para><computeroutput>#define STBTT_pow( x,  <link linkend="_imgui__impl__opengl3__loader_8h_1a5e247fc24ceb70d83f6ad59149b8910a">y</link>)&#160;&#160;&#160;ImPow(x,<link linkend="_imgui__impl__opengl3__loader_8h_1a5e247fc24ceb70d83f6ad59149b8910a">y</link>)</computeroutput></para></section>
<anchor xml:id="_imgui__draw_8cpp_1ace1fcbebd394a5bed76bc9b97dbe8d5a"/><section>
    <title>STBTT_sqrt</title>
<indexterm><primary>STBTT_sqrt</primary><secondary>imgui_draw.cpp</secondary></indexterm>
<indexterm><primary>imgui_draw.cpp</primary><secondary>STBTT_sqrt</secondary></indexterm>
<para><computeroutput>#define STBTT_sqrt( x)&#160;&#160;&#160;<link linkend="_imgui__internal_8h_1af45b12e2af4037adec57b0a9488b45c2">ImSqrt</link>(x)</computeroutput></para></section>
<anchor xml:id="_imgui__draw_8cpp_1adb252cc9576591994fdf2f89baddc630"/><section>
    <title>STBTT_STATIC</title>
<indexterm><primary>STBTT_STATIC</primary><secondary>imgui_draw.cpp</secondary></indexterm>
<indexterm><primary>imgui_draw.cpp</primary><secondary>STBTT_STATIC</secondary></indexterm>
<para><computeroutput>#define STBTT_STATIC</computeroutput></para></section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_imgui__draw_8cpp_1a313bb9d47244a5d27a5aeb4cd74f94a3"/><section>
    <title>ImBezierCubicCalc()</title>
<indexterm><primary>ImBezierCubicCalc</primary><secondary>imgui_draw.cpp</secondary></indexterm>
<indexterm><primary>imgui_draw.cpp</primary><secondary>ImBezierCubicCalc</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_vec2">ImVec2</link> ImBezierCubicCalc (const <link linkend="_struct_im_vec2">ImVec2</link> &amp; p1, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; p2, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; p3, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; p4, float t)</computeroutput></para></section>
<anchor xml:id="_imgui__draw_8cpp_1a9b3ec0353c3a10709ad21985942613da"/><section>
    <title>ImBezierQuadraticCalc()</title>
<indexterm><primary>ImBezierQuadraticCalc</primary><secondary>imgui_draw.cpp</secondary></indexterm>
<indexterm><primary>imgui_draw.cpp</primary><secondary>ImBezierQuadraticCalc</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_vec2">ImVec2</link> ImBezierQuadraticCalc (const <link linkend="_struct_im_vec2">ImVec2</link> &amp; p1, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; p2, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; p3, float t)</computeroutput></para></section>
<anchor xml:id="_imgui__draw_8cpp_1adbf0ee92b3ac86e30b9e81f552d15d37"/><section>
    <title>ImFontAtlasBuildFinish()</title>
<indexterm><primary>ImFontAtlasBuildFinish</primary><secondary>imgui_draw.cpp</secondary></indexterm>
<indexterm><primary>imgui_draw.cpp</primary><secondary>ImFontAtlasBuildFinish</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImFontAtlasBuildFinish (<link linkend="_struct_im_font_atlas">ImFontAtlas</link> * atlas)</computeroutput></para></section>
<anchor xml:id="_imgui__draw_8cpp_1ac050ff181df43cec0b63d834b6039c3f"/><section>
    <title>ImFontAtlasBuildInit()</title>
<indexterm><primary>ImFontAtlasBuildInit</primary><secondary>imgui_draw.cpp</secondary></indexterm>
<indexterm><primary>imgui_draw.cpp</primary><secondary>ImFontAtlasBuildInit</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImFontAtlasBuildInit (<link linkend="_struct_im_font_atlas">ImFontAtlas</link> * atlas)</computeroutput></para></section>
<anchor xml:id="_imgui__draw_8cpp_1a8d5f3a053aae34ac7b93e39cb9096d06"/><section>
    <title>ImFontAtlasBuildMultiplyCalcLookupTable()</title>
<indexterm><primary>ImFontAtlasBuildMultiplyCalcLookupTable</primary><secondary>imgui_draw.cpp</secondary></indexterm>
<indexterm><primary>imgui_draw.cpp</primary><secondary>ImFontAtlasBuildMultiplyCalcLookupTable</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImFontAtlasBuildMultiplyCalcLookupTable (unsigned char out_table[256], float in_brighten_factor)</computeroutput></para></section>
<anchor xml:id="_imgui__draw_8cpp_1a8dc3feae771599949b33712b520e9060"/><section>
    <title>ImFontAtlasBuildMultiplyRectAlpha8()</title>
<indexterm><primary>ImFontAtlasBuildMultiplyRectAlpha8</primary><secondary>imgui_draw.cpp</secondary></indexterm>
<indexterm><primary>imgui_draw.cpp</primary><secondary>ImFontAtlasBuildMultiplyRectAlpha8</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImFontAtlasBuildMultiplyRectAlpha8 (const unsigned char table[256], unsigned char * pixels, int x, int y, int w, int h, int stride)</computeroutput></para></section>
<anchor xml:id="_imgui__draw_8cpp_1add0fcd1708ca3540688d8277fc01bf3f"/><section>
    <title>ImFontAtlasBuildPackCustomRects()</title>
<indexterm><primary>ImFontAtlasBuildPackCustomRects</primary><secondary>imgui_draw.cpp</secondary></indexterm>
<indexterm><primary>imgui_draw.cpp</primary><secondary>ImFontAtlasBuildPackCustomRects</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImFontAtlasBuildPackCustomRects (<link linkend="_struct_im_font_atlas">ImFontAtlas</link> * atlas, <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * stbrp_context_opaque)</computeroutput></para></section>
<anchor xml:id="_imgui__draw_8cpp_1a66ac51ad223da84c7167d4c9f4cfb2fb"/><section>
    <title>ImFontAtlasBuildRender32bppRectFromString()</title>
<indexterm><primary>ImFontAtlasBuildRender32bppRectFromString</primary><secondary>imgui_draw.cpp</secondary></indexterm>
<indexterm><primary>imgui_draw.cpp</primary><secondary>ImFontAtlasBuildRender32bppRectFromString</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImFontAtlasBuildRender32bppRectFromString (<link linkend="_struct_im_font_atlas">ImFontAtlas</link> * atlas, int x, int y, int w, int h, const char * in_str, char in_marker_char, unsigned int in_marker_pixel_value)</computeroutput></para></section>
<anchor xml:id="_imgui__draw_8cpp_1acc7928ba77e5e06a342720ccf0a95ece"/><section>
    <title>ImFontAtlasBuildRender8bppRectFromString()</title>
<indexterm><primary>ImFontAtlasBuildRender8bppRectFromString</primary><secondary>imgui_draw.cpp</secondary></indexterm>
<indexterm><primary>imgui_draw.cpp</primary><secondary>ImFontAtlasBuildRender8bppRectFromString</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImFontAtlasBuildRender8bppRectFromString (<link linkend="_struct_im_font_atlas">ImFontAtlas</link> * atlas, int x, int y, int w, int h, const char * in_str, char in_marker_char, unsigned char in_marker_pixel_value)</computeroutput></para></section>
<anchor xml:id="_imgui__draw_8cpp_1a4bea0932904c84de73237df3f1f76bdd"/><section>
    <title>ImFontAtlasBuildSetupFont()</title>
<indexterm><primary>ImFontAtlasBuildSetupFont</primary><secondary>imgui_draw.cpp</secondary></indexterm>
<indexterm><primary>imgui_draw.cpp</primary><secondary>ImFontAtlasBuildSetupFont</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImFontAtlasBuildSetupFont (<link linkend="_struct_im_font_atlas">ImFontAtlas</link> * atlas, <link linkend="_struct_im_font">ImFont</link> * font, <link linkend="_struct_im_font_config">ImFontConfig</link> * font_config, float ascent, float descent)</computeroutput></para></section>
<anchor xml:id="_imgui__draw_8cpp_1a4c276d0224ef420d570c9485c4c76a19"/><section>
    <title>ImFontAtlasGetBuilderForStbTruetype()</title>
<indexterm><primary>ImFontAtlasGetBuilderForStbTruetype</primary><secondary>imgui_draw.cpp</secondary></indexterm>
<indexterm><primary>imgui_draw.cpp</primary><secondary>ImFontAtlasGetBuilderForStbTruetype</secondary></indexterm>
<para><computeroutput>const <link linkend="_struct_im_font_builder_i_o">ImFontBuilderIO</link> * ImFontAtlasGetBuilderForStbTruetype ( )</computeroutput></para></section>
<anchor xml:id="_imgui__draw_8cpp_1ab58975478a1fbc1735cf9b15e2db5be0"/><section>
    <title>ImFontAtlasUpdateConfigDataPointers()</title>
<indexterm><primary>ImFontAtlasUpdateConfigDataPointers</primary><secondary>imgui_draw.cpp</secondary></indexterm>
<indexterm><primary>imgui_draw.cpp</primary><secondary>ImFontAtlasUpdateConfigDataPointers</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImFontAtlasUpdateConfigDataPointers (<link linkend="_struct_im_font_atlas">ImFontAtlas</link> * atlas)</computeroutput></para></section>
</section>
<section>
<title>Variable Documentation</title>
<anchor xml:id="_imgui__draw_8cpp_1a2c96fc3febbe9f4f6c042a2f975a5b1d"/><section>
    <title>FONT_ATLAS_DEFAULT_TEX_DATA_H</title>
<indexterm><primary>FONT_ATLAS_DEFAULT_TEX_DATA_H</primary><secondary>imgui_draw.cpp</secondary></indexterm>
<indexterm><primary>imgui_draw.cpp</primary><secondary>FONT_ATLAS_DEFAULT_TEX_DATA_H</secondary></indexterm>
<para><computeroutput>const int FONT_ATLAS_DEFAULT_TEX_DATA_H = 27</computeroutput></para></section>
<anchor xml:id="_imgui__draw_8cpp_1adf518fea7357febbb14eeecb692a8d95"/><section>
    <title>FONT_ATLAS_DEFAULT_TEX_DATA_W</title>
<indexterm><primary>FONT_ATLAS_DEFAULT_TEX_DATA_W</primary><secondary>imgui_draw.cpp</secondary></indexterm>
<indexterm><primary>imgui_draw.cpp</primary><secondary>FONT_ATLAS_DEFAULT_TEX_DATA_W</secondary></indexterm>
<para><computeroutput>const int FONT_ATLAS_DEFAULT_TEX_DATA_W = 122</computeroutput></para></section>
</section>
</section>

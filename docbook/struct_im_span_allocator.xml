<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_struct_im_span_allocator" xml:lang="en-US">
<title>ImSpanAllocator&lt; CHUNKS &gt; Struct Template Reference</title>
<indexterm><primary>ImSpanAllocator&lt; CHUNKS &gt;</primary></indexterm>
<para>
<computeroutput>#include &lt;imgui_internal.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_struct_im_span_allocator_1afdf8fba72df5de9e2f42fabb2e8f62b6">ImSpanAllocator</link> ()</para>
</listitem>
            <listitem><para><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_span_allocator_1a89b08935873f324a44642c9be7388004">Reserve</link> (int n, size_t sz, int a=4)</para>
</listitem>
            <listitem><para>int <link linkend="_struct_im_span_allocator_1a6bdfe0539ad0cba8d9cb616ff20ae695">GetArenaSizeInBytes</link> ()</para>
</listitem>
            <listitem><para><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_span_allocator_1af379bb313a9dae91ee56093aa81d83f3">SetArenaBasePtr</link> (<link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *base_ptr)</para>
</listitem>
            <listitem><para><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * <link linkend="_struct_im_span_allocator_1adbca9351c7f01b3866abe21bc81d33a8">GetSpanPtrBegin</link> (int n)</para>
</listitem>
            <listitem><para><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * <link linkend="_struct_im_span_allocator_1ae28975e7722b5fb3ec23c55e57dc31f9">GetSpanPtrEnd</link> (int n)</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_span_allocator_1a47aaeac7a303ec0d3a52e59189c4c627">GetSpan</link> (int n, <link linkend="_struct_im_span">ImSpan</link>&lt; T &gt; *span)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para>char * <link linkend="_struct_im_span_allocator_1a13ffffaa95637e4c95d215414f9600fd">BasePtr</link></para>
</listitem>
            <listitem><para>int <link linkend="_struct_im_span_allocator_1aee84402fdab48c9a6a14994ae525d503">CurrOff</link></para>
</listitem>
            <listitem><para>int <link linkend="_struct_im_span_allocator_1a5ef3ee2f2ba50bf7fe63c81decfa75e7">CurrIdx</link></para>
</listitem>
            <listitem><para>int <link linkend="_struct_im_span_allocator_1a480822668b44faa98ae0363765059c06">Offsets</link> [CHUNKS]</para>
</listitem>
            <listitem><para>int <link linkend="_struct_im_span_allocator_1afe77e900299427326cd6ba4f2a868897">Sizes</link> [CHUNKS]</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_struct_im_span_allocator_1afdf8fba72df5de9e2f42fabb2e8f62b6"/><section>
    <title>ImSpanAllocator()</title>
<indexterm><primary>ImSpanAllocator</primary><secondary>ImSpanAllocator&lt; CHUNKS &gt;</secondary></indexterm>
<indexterm><primary>ImSpanAllocator&lt; CHUNKS &gt;</primary><secondary>ImSpanAllocator</secondary></indexterm>
<computeroutput>template&lt;int CHUNKS&gt; </computeroutput><para><computeroutput><link linkend="_struct_im_span_allocator">ImSpanAllocator</link>&lt; CHUNKS &gt;<link linkend="_struct_im_span_allocator">::ImSpanAllocator</link> ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_struct_im_span_allocator_1a6bdfe0539ad0cba8d9cb616ff20ae695"/><section>
    <title>GetArenaSizeInBytes()</title>
<indexterm><primary>GetArenaSizeInBytes</primary><secondary>ImSpanAllocator&lt; CHUNKS &gt;</secondary></indexterm>
<indexterm><primary>ImSpanAllocator&lt; CHUNKS &gt;</primary><secondary>GetArenaSizeInBytes</secondary></indexterm>
<computeroutput>template&lt;int CHUNKS&gt; </computeroutput><para><computeroutput>int <link linkend="_struct_im_span_allocator">ImSpanAllocator</link>&lt; CHUNKS &gt;::GetArenaSizeInBytes ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_im_span_allocator_1a47aaeac7a303ec0d3a52e59189c4c627"/><section>
    <title>GetSpan()</title>
<indexterm><primary>GetSpan</primary><secondary>ImSpanAllocator&lt; CHUNKS &gt;</secondary></indexterm>
<indexterm><primary>ImSpanAllocator&lt; CHUNKS &gt;</primary><secondary>GetSpan</secondary></indexterm>
<computeroutput>template&lt;int CHUNKS&gt; </computeroutput><computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_span_allocator">ImSpanAllocator</link>&lt; CHUNKS &gt;::GetSpan (int n, <link linkend="_struct_im_span">ImSpan</link>&lt; T &gt; * span)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_im_span_allocator_1adbca9351c7f01b3866abe21bc81d33a8"/><section>
    <title>GetSpanPtrBegin()</title>
<indexterm><primary>GetSpanPtrBegin</primary><secondary>ImSpanAllocator&lt; CHUNKS &gt;</secondary></indexterm>
<indexterm><primary>ImSpanAllocator&lt; CHUNKS &gt;</primary><secondary>GetSpanPtrBegin</secondary></indexterm>
<computeroutput>template&lt;int CHUNKS&gt; </computeroutput><para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * <link linkend="_struct_im_span_allocator">ImSpanAllocator</link>&lt; CHUNKS &gt;::GetSpanPtrBegin (int n)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_im_span_allocator_1ae28975e7722b5fb3ec23c55e57dc31f9"/><section>
    <title>GetSpanPtrEnd()</title>
<indexterm><primary>GetSpanPtrEnd</primary><secondary>ImSpanAllocator&lt; CHUNKS &gt;</secondary></indexterm>
<indexterm><primary>ImSpanAllocator&lt; CHUNKS &gt;</primary><secondary>GetSpanPtrEnd</secondary></indexterm>
<computeroutput>template&lt;int CHUNKS&gt; </computeroutput><para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * <link linkend="_struct_im_span_allocator">ImSpanAllocator</link>&lt; CHUNKS &gt;::GetSpanPtrEnd (int n)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_im_span_allocator_1a89b08935873f324a44642c9be7388004"/><section>
    <title>Reserve()</title>
<indexterm><primary>Reserve</primary><secondary>ImSpanAllocator&lt; CHUNKS &gt;</secondary></indexterm>
<indexterm><primary>ImSpanAllocator&lt; CHUNKS &gt;</primary><secondary>Reserve</secondary></indexterm>
<computeroutput>template&lt;int CHUNKS&gt; </computeroutput><para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_span_allocator">ImSpanAllocator</link>&lt; CHUNKS &gt;::Reserve (int n, size_t sz, int a = <computeroutput>4</computeroutput>
)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_im_span_allocator_1af379bb313a9dae91ee56093aa81d83f3"/><section>
    <title>SetArenaBasePtr()</title>
<indexterm><primary>SetArenaBasePtr</primary><secondary>ImSpanAllocator&lt; CHUNKS &gt;</secondary></indexterm>
<indexterm><primary>ImSpanAllocator&lt; CHUNKS &gt;</primary><secondary>SetArenaBasePtr</secondary></indexterm>
<computeroutput>template&lt;int CHUNKS&gt; </computeroutput><para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_struct_im_span_allocator">ImSpanAllocator</link>&lt; CHUNKS &gt;::SetArenaBasePtr (<link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * base_ptr)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_struct_im_span_allocator_1a13ffffaa95637e4c95d215414f9600fd"/><section>
    <title>BasePtr</title>
<indexterm><primary>BasePtr</primary><secondary>ImSpanAllocator&lt; CHUNKS &gt;</secondary></indexterm>
<indexterm><primary>ImSpanAllocator&lt; CHUNKS &gt;</primary><secondary>BasePtr</secondary></indexterm>
<computeroutput>template&lt;int CHUNKS&gt; </computeroutput><para><computeroutput>char* <link linkend="_struct_im_span_allocator">ImSpanAllocator</link>&lt; CHUNKS &gt;::BasePtr</computeroutput></para></section>
<anchor xml:id="_struct_im_span_allocator_1a5ef3ee2f2ba50bf7fe63c81decfa75e7"/><section>
    <title>CurrIdx</title>
<indexterm><primary>CurrIdx</primary><secondary>ImSpanAllocator&lt; CHUNKS &gt;</secondary></indexterm>
<indexterm><primary>ImSpanAllocator&lt; CHUNKS &gt;</primary><secondary>CurrIdx</secondary></indexterm>
<computeroutput>template&lt;int CHUNKS&gt; </computeroutput><para><computeroutput>int <link linkend="_struct_im_span_allocator">ImSpanAllocator</link>&lt; CHUNKS &gt;::CurrIdx</computeroutput></para></section>
<anchor xml:id="_struct_im_span_allocator_1aee84402fdab48c9a6a14994ae525d503"/><section>
    <title>CurrOff</title>
<indexterm><primary>CurrOff</primary><secondary>ImSpanAllocator&lt; CHUNKS &gt;</secondary></indexterm>
<indexterm><primary>ImSpanAllocator&lt; CHUNKS &gt;</primary><secondary>CurrOff</secondary></indexterm>
<computeroutput>template&lt;int CHUNKS&gt; </computeroutput><para><computeroutput>int <link linkend="_struct_im_span_allocator">ImSpanAllocator</link>&lt; CHUNKS &gt;::CurrOff</computeroutput></para></section>
<anchor xml:id="_struct_im_span_allocator_1a480822668b44faa98ae0363765059c06"/><section>
    <title>Offsets</title>
<indexterm><primary>Offsets</primary><secondary>ImSpanAllocator&lt; CHUNKS &gt;</secondary></indexterm>
<indexterm><primary>ImSpanAllocator&lt; CHUNKS &gt;</primary><secondary>Offsets</secondary></indexterm>
<computeroutput>template&lt;int CHUNKS&gt; </computeroutput><para><computeroutput>int <link linkend="_struct_im_span_allocator">ImSpanAllocator</link>&lt; CHUNKS &gt;::Offsets[CHUNKS]</computeroutput></para></section>
<anchor xml:id="_struct_im_span_allocator_1afe77e900299427326cd6ba4f2a868897"/><section>
    <title>Sizes</title>
<indexterm><primary>Sizes</primary><secondary>ImSpanAllocator&lt; CHUNKS &gt;</secondary></indexterm>
<indexterm><primary>ImSpanAllocator&lt; CHUNKS &gt;</primary><secondary>Sizes</secondary></indexterm>
<computeroutput>template&lt;int CHUNKS&gt; </computeroutput><para><computeroutput>int <link linkend="_struct_im_span_allocator">ImSpanAllocator</link>&lt; CHUNKS &gt;::Sizes[CHUNKS]</computeroutput></para></section>
<para>
The documentation for this struct was generated from the following file:</para>
<link linkend="_imgui__internal_8h">imgui_internal.h</link></section>
</section>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_event" xml:lang="en-US">
<title>Event Class Reference</title>
<indexterm><primary>Event</primary></indexterm>
<para>
<computeroutput>#include &lt;Event.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_event_1a412c278f236e633b812d715338ce0e5a">Event</link> (std::string _EventName, std::string _EventText)</para>
</listitem>
            <listitem><para>std::string <link linkend="_class_event_1a6e76ba2de6b5244c7c34cffa3a20744c">GetEventName</link> ()</para>
</listitem>
            <listitem><para>std::string <link linkend="_class_event_1a74f6664627a8240a470dccd4c315c6a6">GetEventText</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_event">Event</link> * <link linkend="_class_event_1ae22a7e379ed5caff274d3792795cda41">GetEventBranch</link> (std::string Action)</para>
</listitem>
            <listitem><para><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_class_event_1add0df8c3701db0d73c216598e119022d">AddBranchingEvents</link> (std::initializer_list&lt; std::pair&lt; std::string, <link linkend="_class_event">Event</link> * &gt; &gt; &amp;events)</para>
</listitem>
            <listitem><para><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_class_event_1aaf3ca2eec66edf24ae49317012d0cd49">AddRewardItems</link> (const std::initializer_list&lt; <link linkend="_class_item">Item</link> * &gt; &amp;items)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_event_1a412c278f236e633b812d715338ce0e5a"/><section>
    <title>Event()</title>
<indexterm><primary>Event</primary><secondary>Event</secondary></indexterm>
<indexterm><primary>Event</primary><secondary>Event</secondary></indexterm>
<para><computeroutput>Event::Event (std::string _EventName, std::string _EventText)</computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_event_1add0df8c3701db0d73c216598e119022d"/><section>
    <title>AddBranchingEvents()</title>
<indexterm><primary>AddBranchingEvents</primary><secondary>Event</secondary></indexterm>
<indexterm><primary>Event</primary><secondary>AddBranchingEvents</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> Event::AddBranchingEvents (std::initializer_list&lt; std::pair&lt; std::string, <link linkend="_class_event">Event</link> * &gt; &gt; &amp; events)</computeroutput></para></section>
<anchor xml:id="_class_event_1aaf3ca2eec66edf24ae49317012d0cd49"/><section>
    <title>AddRewardItems()</title>
<indexterm><primary>AddRewardItems</primary><secondary>Event</secondary></indexterm>
<indexterm><primary>Event</primary><secondary>AddRewardItems</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> Event::AddRewardItems (const std::initializer_list&lt; <link linkend="_class_item">Item</link> * &gt; &amp; items)</computeroutput></para></section>
<anchor xml:id="_class_event_1ae22a7e379ed5caff274d3792795cda41"/><section>
    <title>GetEventBranch()</title>
<indexterm><primary>GetEventBranch</primary><secondary>Event</secondary></indexterm>
<indexterm><primary>Event</primary><secondary>GetEventBranch</secondary></indexterm>
<para><computeroutput><link linkend="_class_event">Event</link> * Event::GetEventBranch (std::string Action)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_event_1a6e76ba2de6b5244c7c34cffa3a20744c"/><section>
    <title>GetEventName()</title>
<indexterm><primary>GetEventName</primary><secondary>Event</secondary></indexterm>
<indexterm><primary>Event</primary><secondary>GetEventName</secondary></indexterm>
<para><computeroutput>std::string Event::GetEventName ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_event_1a74f6664627a8240a470dccd4c315c6a6"/><section>
    <title>GetEventText()</title>
<indexterm><primary>GetEventText</primary><secondary>Event</secondary></indexterm>
<indexterm><primary>Event</primary><secondary>GetEventText</secondary></indexterm>
<para><computeroutput>std::string Event::GetEventText ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<para>
The documentation for this class was generated from the following files:</para>
<link linkend="__event_8h">Event.h</link><link linkend="__event_8cpp">Event.cpp</link></section>
</section>

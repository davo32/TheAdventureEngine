<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_namespace_im_gui" xml:lang="en-US">
<title>ImGui Namespace Reference</title>
<indexterm><primary>ImGui</primary></indexterm>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_struct_im_gui_context">ImGuiContext</link> * <link linkend="_namespace_im_gui_1a4ff6c9ad05a0eba37ce1b5ff1607810a">CreateContext</link> (<link linkend="_struct_im_font_atlas">ImFontAtlas</link> *shared_font_atlas=NULL)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1ab9132deece575023170cd8e681d0581d">DestroyContext</link> (<link linkend="_struct_im_gui_context">ImGuiContext</link> *ctx=NULL)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_struct_im_gui_context">ImGuiContext</link> * <link linkend="_namespace_im_gui_1af557a6de5538099a0f6047eb994bbf42">GetCurrentContext</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a289dbbbffdadcf1231821d97a7c4a9be">SetCurrentContext</link> (<link linkend="_struct_im_gui_context">ImGuiContext</link> *ctx)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_struct_im_gui_i_o">ImGuiIO</link> &amp; <link linkend="_namespace_im_gui_1a3179e560812f878f3961ce803a5d9302">GetIO</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_struct_im_gui_style">ImGuiStyle</link> &amp; <link linkend="_namespace_im_gui_1abafef4bb3e3654efd96a47b2e22870a7">GetStyle</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1ab3f1fc018f903b7ad79fd10663375774">NewFrame</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a246c37da45e88a12ade440a0feacb4ee">EndFrame</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1ab51a164f547317c16c441f1599e3946d">Render</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_struct_im_draw_data">ImDrawData</link> * <link linkend="_namespace_im_gui_1ab73131dc44b1267dac04f0c2bb0af983">GetDrawData</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1af95643a0ce4893b9e57c12991922fb18">ShowDemoWindow</link> (bool *p_open=NULL)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1afe7a28c6eb52fff3cc27d5a698fea4ff">ShowMetricsWindow</link> (bool *p_open=NULL)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1af1b39e70cac2e1b9e62dd3c9d154cbd6">ShowDebugLogWindow</link> (bool *p_open=NULL)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1ab4a87bf4a874a8e5872b60b4a9b1d99e">ShowIDStackToolWindow</link> (bool *p_open=NULL)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1ac297462e33309d0540fa459bccdc9304">ShowAboutWindow</link> (bool *p_open=NULL)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1ab2eb3dec78d054fe3feab1c091ec5de5">ShowStyleEditor</link> (<link linkend="_struct_im_gui_style">ImGuiStyle</link> *ref=NULL)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a83f4e863c102b0a05e0e3308b371b394">ShowStyleSelector</link> (const char *label)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a0bdce99eef17ef1e1fef40a18bd811ab">ShowFontSelector</link> (const char *label)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1ad6f4919bc9aa806ca8d2c1d6e2bfb051">ShowUserGuide</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> const char * <link linkend="_namespace_im_gui_1a6488c3cfa6331c8a1e93769e580ce020">GetVersion</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a26c67fc14081b359566d5e135cd8c767">StyleColorsDark</link> (<link linkend="_struct_im_gui_style">ImGuiStyle</link> *dst=NULL)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1ae1fc558bfbc557b228d63f7facfc86e1">StyleColorsLight</link> (<link linkend="_struct_im_gui_style">ImGuiStyle</link> *dst=NULL)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a1cf931a42a10f71150def3ce222434b6">StyleColorsClassic</link> (<link linkend="_struct_im_gui_style">ImGuiStyle</link> *dst=NULL)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a581e58db0bc930bafa4a5d23093a2b99">Begin</link> (const char *<link linkend="_imgui__impl__opengl3__loader_8h_1a5c4947d4516dd7cfa3505ce3a648a4ef">name</link>, bool *p_open=NULL, <link linkend="_imgui_8h_1a0b8e067ab4f7a818828c8d89e531addc">ImGuiWindowFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a5479d93794a004c67ceb6d13f37c8254">End</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1aebac8b07ee9ea0e452c98813a3e907c3">BeginChild</link> (const char *str_id, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;<link linkend="_imgui__impl__opengl3__loader_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>=<link linkend="_struct_im_vec2">ImVec2</link>(0, 0), <link linkend="_imgui_8h_1aa08bedfb80be3701d8c8d7b218c5a5d0">ImGuiChildFlags</link> child_flags=0, <link linkend="_imgui_8h_1a0b8e067ab4f7a818828c8d89e531addc">ImGuiWindowFlags</link> window_flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a3824e63145d50dd477deec2c7edf5c5a">BeginChild</link> (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;<link linkend="_imgui__impl__opengl3__loader_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>=<link linkend="_struct_im_vec2">ImVec2</link>(0, 0), <link linkend="_imgui_8h_1aa08bedfb80be3701d8c8d7b218c5a5d0">ImGuiChildFlags</link> child_flags=0, <link linkend="_imgui_8h_1a0b8e067ab4f7a818828c8d89e531addc">ImGuiWindowFlags</link> window_flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1af8de559a88c1442d6df8c1b04c86e997">EndChild</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a99fd14154aae264087d471132e56a42e">IsWindowAppearing</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a2a6492aea9013c0078fc530a66e11768">IsWindowCollapsed</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a51ed119ab4be7fcf47a34644e262c87e">IsWindowFocused</link> (<link linkend="_imgui_8h_1a4445363c9e1c008fee2c255d83046248">ImGuiFocusedFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1aaed1ebf40cc2cb2ec30b0ba39b91d4a5">IsWindowHovered</link> (<link linkend="_imgui_8h_1a3a8f688665e5ea0bd9700e1251580a2c">ImGuiHoveredFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_struct_im_draw_list">ImDrawList</link> * <link linkend="_namespace_im_gui_1aa100c22a9feafe843fa12c66590cbda0">GetWindowDrawList</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> float <link linkend="_namespace_im_gui_1a98ae0bd17b81b2b3be6dcb332a3af6a8">GetWindowDpiScale</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_struct_im_vec2">ImVec2</link> <link linkend="_namespace_im_gui_1a413d939f3ef416a47d6e5b48be955146">GetWindowPos</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_struct_im_vec2">ImVec2</link> <link linkend="_namespace_im_gui_1aaa5c0bfac7125ba9850a08b6db2e90c9">GetWindowSize</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> float <link linkend="_namespace_im_gui_1a471ff23945b99541c506dbdc2a9004cf">GetWindowWidth</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> float <link linkend="_namespace_im_gui_1a44d2bfb80e0d2dd232a553ab29a91b52">GetWindowHeight</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_struct_im_gui_viewport">ImGuiViewport</link> * <link linkend="_namespace_im_gui_1a8a37885b98909fb087e3d658d5545145">GetWindowViewport</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1afbccd31113430670b5ab2bf0d6f509bf">SetNextWindowPos</link> (const <link linkend="_struct_im_vec2">ImVec2</link> &amp;pos, <link linkend="_imgui_8h_1aef890d6ac872e12c5804d0b3e4f7f103">ImGuiCond</link> cond=0, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;pivot=<link linkend="_struct_im_vec2">ImVec2</link>(0, 0))</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1ab33717bb71ef5e393ae18656fc6b229d">SetNextWindowSize</link> (const <link linkend="_struct_im_vec2">ImVec2</link> &amp;<link linkend="_imgui__impl__opengl3__loader_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>, <link linkend="_imgui_8h_1aef890d6ac872e12c5804d0b3e4f7f103">ImGuiCond</link> cond=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a157d5bcc362951e77eb3236864e879ce">SetNextWindowSizeConstraints</link> (const <link linkend="_struct_im_vec2">ImVec2</link> &amp;size_min, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;size_max, <link linkend="_imgui_8h_1a1cccf55557c2153a9d4af6db73dc3a91">ImGuiSizeCallback</link> custom_callback=NULL, <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *custom_callback_data=NULL)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1aae55a58c38d8e84b10eb1e8b1531372d">SetNextWindowContentSize</link> (const <link linkend="_struct_im_vec2">ImVec2</link> &amp;<link linkend="_imgui__impl__opengl3__loader_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a3e9380e253a3c49665a404e56950a52a">SetNextWindowCollapsed</link> (bool collapsed, <link linkend="_imgui_8h_1aef890d6ac872e12c5804d0b3e4f7f103">ImGuiCond</link> cond=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1ac2d2b163c95cd8c8391aba85bc50d170">SetNextWindowFocus</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a35141137f969aced6eb213bcaa5ff623">SetNextWindowScroll</link> (const <link linkend="_struct_im_vec2">ImVec2</link> &amp;scroll)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a7de5a63cec4babe417f972403db6430c">SetNextWindowBgAlpha</link> (float <link linkend="_imgui__impl__opengl3__loader_8h_1a090ebe65994a3ee4bb60ae3472abffc5">alpha</link>)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1ac8ebacf97bce7f8a5e62fef85755a734">SetNextWindowViewport</link> (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> viewport_id)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1aaa81e004de4c0a5cedb836e92e8aa0e5">SetWindowPos</link> (const <link linkend="_struct_im_vec2">ImVec2</link> &amp;pos, <link linkend="_imgui_8h_1aef890d6ac872e12c5804d0b3e4f7f103">ImGuiCond</link> cond=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a657c6cc2246485332f608a5204447ea1">SetWindowSize</link> (const <link linkend="_struct_im_vec2">ImVec2</link> &amp;<link linkend="_imgui__impl__opengl3__loader_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>, <link linkend="_imgui_8h_1aef890d6ac872e12c5804d0b3e4f7f103">ImGuiCond</link> cond=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1ab5445711a74e0e1a58d1e464cdda252f">SetWindowCollapsed</link> (bool collapsed, <link linkend="_imgui_8h_1aef890d6ac872e12c5804d0b3e4f7f103">ImGuiCond</link> cond=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1ac71920931ed7b7c8594ee84c6a94e7b8">SetWindowFocus</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a11f2f343dbc9b00ccd9e99ebd59cfe8b">SetWindowFontScale</link> (float scale)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a32032b56f975bb3145adbe19f38f3b56">SetWindowPos</link> (const char *<link linkend="_imgui__impl__opengl3__loader_8h_1a5c4947d4516dd7cfa3505ce3a648a4ef">name</link>, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;pos, <link linkend="_imgui_8h_1aef890d6ac872e12c5804d0b3e4f7f103">ImGuiCond</link> cond=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a441528b9198d4531e79337121212cd33">SetWindowSize</link> (const char *<link linkend="_imgui__impl__opengl3__loader_8h_1a5c4947d4516dd7cfa3505ce3a648a4ef">name</link>, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;<link linkend="_imgui__impl__opengl3__loader_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>, <link linkend="_imgui_8h_1aef890d6ac872e12c5804d0b3e4f7f103">ImGuiCond</link> cond=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1ac349187d6aae141cd3b4476e54bcc338">SetWindowCollapsed</link> (const char *<link linkend="_imgui__impl__opengl3__loader_8h_1a5c4947d4516dd7cfa3505ce3a648a4ef">name</link>, bool collapsed, <link linkend="_imgui_8h_1aef890d6ac872e12c5804d0b3e4f7f103">ImGuiCond</link> cond=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1aa612adbb975051090898f094a1608f24">SetWindowFocus</link> (const char *<link linkend="_imgui__impl__opengl3__loader_8h_1a5c4947d4516dd7cfa3505ce3a648a4ef">name</link>)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_struct_im_vec2">ImVec2</link> <link linkend="_namespace_im_gui_1a410c8e19b2fea8b52746ca11b3930301">GetContentRegionAvail</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_struct_im_vec2">ImVec2</link> <link linkend="_namespace_im_gui_1a0a4dbfabbfa45d74319ef541962ce2eb">GetContentRegionMax</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_struct_im_vec2">ImVec2</link> <link linkend="_namespace_im_gui_1a790123aa15c266798f35050ba36b7197">GetWindowContentRegionMin</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_struct_im_vec2">ImVec2</link> <link linkend="_namespace_im_gui_1a96ce6060592d3ef975594357e650adc6">GetWindowContentRegionMax</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> float <link linkend="_namespace_im_gui_1a6f88335d87da3be81dc6e24cb1812923">GetScrollX</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> float <link linkend="_namespace_im_gui_1a3c924a2eeb8b2ddfb40ea17be7ea12a6">GetScrollY</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a0796750de8c50555d895f63e79ac87f0">SetScrollX</link> (float scroll_x)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a41833555962807384432e6fc94d46ec9">SetScrollY</link> (float scroll_y)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> float <link linkend="_namespace_im_gui_1af472cb090157c22e65a0aa1662b9f3d0">GetScrollMaxX</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> float <link linkend="_namespace_im_gui_1ab34c0d5c63908a7ff50923151730f76a">GetScrollMaxY</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a317a44e9126aa24099abc5cfc7d391ec">SetScrollHereX</link> (float center_x_ratio=0.5f)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1ac74487b4d75580ca637659103fef1368">SetScrollHereY</link> (float center_y_ratio=0.5f)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1ad244660a2f3f2999f645feb9fbdfe0ec">SetScrollFromPosX</link> (float local_x, float center_x_ratio=0.5f)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a670d32573369e7ece9330d73f47e4d8b">SetScrollFromPosY</link> (float local_y, float center_y_ratio=0.5f)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1ac5a59f4f8226fd35786d8973c85b85a9">PushFont</link> (<link linkend="_struct_im_font">ImFont</link> *font)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1af66649bc37022bf3cf2496c73af9a499">PopFont</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a77ee84afb636e05eb4b2d6eeddcc2aa8">PushStyleColor</link> (<link linkend="_imgui_8h_1a1b0467ec582e731ae6292fef726fb5fe">ImGuiCol</link> idx, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a5bd052ebf55015312a53739974950e7b">PushStyleColor</link> (<link linkend="_imgui_8h_1a1b0467ec582e731ae6292fef726fb5fe">ImGuiCol</link> idx, const <link linkend="_struct_im_vec4">ImVec4</link> &amp;col)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a9795f730b4043a98b6254738d86efcdc">PopStyleColor</link> (int <link linkend="_imgui__impl__opengl3__loader_8h_1a619bc20e8198de3bd3f3d7fc34de66b2">count</link>=1)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1aab3f43009094462cf2a5eb554785949b">PushStyleVar</link> (<link linkend="_imgui_8h_1ac919acabce24faae590e295b424874ca">ImGuiStyleVar</link> idx, float val)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1ae404b6978e9aedec5c16627d8c45f923">PushStyleVar</link> (<link linkend="_imgui_8h_1ac919acabce24faae590e295b424874ca">ImGuiStyleVar</link> idx, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;val)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a14116e57d81e326adef2a702e65781d4">PopStyleVar</link> (int <link linkend="_imgui__impl__opengl3__loader_8h_1a619bc20e8198de3bd3f3d7fc34de66b2">count</link>=1)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1abab24220022e3427f1c428722675dd94">PushTabStop</link> (bool tab_stop)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1af84a746ead8a8eeaf60e57f956487f47">PopTabStop</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a61d3e0191d67bedaf45f0178f87e3125">PushButtonRepeat</link> (bool repeat)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a0f883e8507be797ca8ba1448d2b9dbb0">PopButtonRepeat</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a4ad13bf38f0521a339133248ef3e3036">PushItemWidth</link> (float item_width)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1ad29a3fc0cb5dfc7f9fc7224512ce90bf">PopItemWidth</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a1291228607bee5a703df6553f27cbbb9">SetNextItemWidth</link> (float item_width)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> float <link linkend="_namespace_im_gui_1ab3b3ba92ebd8bca4a552dd93321a1994">CalcItemWidth</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a72ba065ae9819aaed3af68c113d2758b">PushTextWrapPos</link> (float wrap_local_pos_x=0.0f)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a08000421b9cc13757430efe54178ae0f">PopTextWrapPos</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_struct_im_font">ImFont</link> * <link linkend="_namespace_im_gui_1a43cf349576e20fac4a1300269320ad8f">GetFont</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> float <link linkend="_namespace_im_gui_1ac592ae8e0aa4a1a06502ec7872bc8da8">GetFontSize</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_struct_im_vec2">ImVec2</link> <link linkend="_namespace_im_gui_1a3092da6abc1d04f3287c084435dc6026">GetFontTexUvWhitePixel</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> <link linkend="_namespace_im_gui_1a0de2d9bd347d9866511eb8d014e62556">GetColorU32</link> (<link linkend="_imgui_8h_1a1b0467ec582e731ae6292fef726fb5fe">ImGuiCol</link> idx, float alpha_mul=1.0f)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> <link linkend="_namespace_im_gui_1ac701752365ddd58cecc1956fc62921a8">GetColorU32</link> (const <link linkend="_struct_im_vec4">ImVec4</link> &amp;col)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> <link linkend="_namespace_im_gui_1ae1b28fefd853a96e40c7d626d4a030db">GetColorU32</link> (<link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col, float alpha_mul=1.0f)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> const <link linkend="_struct_im_vec4">ImVec4</link> &amp; <link linkend="_namespace_im_gui_1ad838e580972e2c4b3da2b0f60754b662">GetStyleColorVec4</link> (<link linkend="_imgui_8h_1a1b0467ec582e731ae6292fef726fb5fe">ImGuiCol</link> idx)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_struct_im_vec2">ImVec2</link> <link linkend="_namespace_im_gui_1adb0db3c1ee36f5085f35890a4229ae75">GetCursorScreenPos</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a632bc7e15b8258f95ab0bc9b2efd5537">SetCursorScreenPos</link> (const <link linkend="_struct_im_vec2">ImVec2</link> &amp;pos)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_struct_im_vec2">ImVec2</link> <link linkend="_namespace_im_gui_1a2fa4eb57e0f73b90e8edcd226a0cc7d5">GetCursorPos</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> float <link linkend="_namespace_im_gui_1a022e32c808ac899e25847f4d65633b77">GetCursorPosX</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> float <link linkend="_namespace_im_gui_1a86e409551f256b542166989c558d41c1">GetCursorPosY</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a51ea13c986360d8a2e868dc9eeac2115">SetCursorPos</link> (const <link linkend="_struct_im_vec2">ImVec2</link> &amp;local_pos)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1ae5e6e80ef23bb8df9cd5ac273be8aeb0">SetCursorPosX</link> (float local_x)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a0037515d9bd7a28cc27a6e40401c1dec">SetCursorPosY</link> (float local_y)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_struct_im_vec2">ImVec2</link> <link linkend="_namespace_im_gui_1a8ee9647de3b39fc7b77395082fc9e0cc">GetCursorStartPos</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a191123597a5084d003c8beac7eeb029e">Separator</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a2991c91e94f3b77a0c3411f4f3aa348e">SameLine</link> (float offset_from_start_x=0.0f, float spacing=-1.0f)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a77f8b0a33e5335f98661f99e720411da">NewLine</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a2659e2bfe84b4cad0facd65d5c1ac90d">Spacing</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a8b0fb07113251301ff897b8578a53f34">Dummy</link> (const <link linkend="_struct_im_vec2">ImVec2</link> &amp;<link linkend="_imgui__impl__opengl3__loader_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a6c7b9f2d60951462eeebad80154a8926">Indent</link> (float indent_w=0.0f)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1ad577d36753634c9bbdc3750b0e5217f5">Unindent</link> (float indent_w=0.0f)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a42407e196b7ed2a8755bff28aae9805f">BeginGroup</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a05fc97fc64f28a55486087f503d9a622">EndGroup</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1ae14be3a3bec106de7c91aaa2a9a558a1">AlignTextToFramePadding</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> float <link linkend="_namespace_im_gui_1aaba5637199d31ea23d4d143b30a44aff">GetTextLineHeight</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> float <link linkend="_namespace_im_gui_1aa1616f6082fd210fde8d98c511bf8f56">GetTextLineHeightWithSpacing</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> float <link linkend="_namespace_im_gui_1ae560f17cf3262017cee888d1eb77f294">GetFrameHeight</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> float <link linkend="_namespace_im_gui_1a8de260eebd333718fa0c3b6c80258c67">GetFrameHeightWithSpacing</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a27a8533605dc5b8cabf161bf7715bbde">PushID</link> (const char *str_id)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1af5e55788830807a7c53d5dd7865b692a">PushID</link> (const char *str_id_begin, const char *str_id_end)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1af9cf42fdf2fbc5eeec7521de14996bfb">PushID</link> (const <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *ptr_id)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a6a11664be2a0b9a0e7054bb339e009ac">PushID</link> (int int_id)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1aba0b2d8f890a5d435ae43d0c4a2d4dd1">PopID</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> <link linkend="_namespace_im_gui_1a3329b04bd4235e90ad9deb00ffb38ae4">GetID</link> (const char *str_id)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> <link linkend="_namespace_im_gui_1a26064d74efebef3aa86e1a78b3e4c333">GetID</link> (const char *str_id_begin, const char *str_id_end)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> <link linkend="_namespace_im_gui_1a220123ad62c2180ded92b2ef91f27c5a">GetID</link> (const <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *ptr_id)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a96a5f42789ecc419b2ae8af7b2acc28e">TextUnformatted</link> (const char *text, const char *text_end=NULL)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a9e7b83611fe441d54fad2effb4bf4965">Text</link> (const char *fmt,...) <link linkend="_imgui_8h_1a1251c2f9ddac0873dbad8181bd82c9f1">IM_FMTARGS</link>(1)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a10a0d6362178c2f743092f21e1b6cd20">TextV</link> (const char *fmt, va_list args) <link linkend="_imgui_8h_1a047693beb7f899f5deab1e20202016b3">IM_FMTLIST</link>(1)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a36ab8fcad68b26863d6e910755de04c2">TextColored</link> (const <link linkend="_struct_im_vec4">ImVec4</link> &amp;col, const char *fmt,...) <link linkend="_imgui_8h_1a1251c2f9ddac0873dbad8181bd82c9f1">IM_FMTARGS</link>(2)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a87c24ece994188a7145d8feecb4439ed">TextColoredV</link> (const <link linkend="_struct_im_vec4">ImVec4</link> &amp;col, const char *fmt, va_list args) <link linkend="_imgui_8h_1a047693beb7f899f5deab1e20202016b3">IM_FMTLIST</link>(2)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1aa96bf14c5fa288e106820aeb4ba7fcb6">TextDisabled</link> (const char *fmt,...) <link linkend="_imgui_8h_1a1251c2f9ddac0873dbad8181bd82c9f1">IM_FMTARGS</link>(1)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a5b128d4f12d7e33e95fb9cef7dce027e">TextDisabledV</link> (const char *fmt, va_list args) <link linkend="_imgui_8h_1a047693beb7f899f5deab1e20202016b3">IM_FMTLIST</link>(1)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1ad57bb15c599e73b2ccc7c0f7de6e5823">TextWrapped</link> (const char *fmt,...) <link linkend="_imgui_8h_1a1251c2f9ddac0873dbad8181bd82c9f1">IM_FMTARGS</link>(1)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a9019a388cd0c410bcb3d3ae63a008123">TextWrappedV</link> (const char *fmt, va_list args) <link linkend="_imgui_8h_1a047693beb7f899f5deab1e20202016b3">IM_FMTLIST</link>(1)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1ad92ccfbc33d448ff40cfcf9219177344">LabelText</link> (const char *label, const char *fmt,...) <link linkend="_imgui_8h_1a1251c2f9ddac0873dbad8181bd82c9f1">IM_FMTARGS</link>(2)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a55e5a7edb676a8f5cd7f65443138a8a0">LabelTextV</link> (const char *label, const char *fmt, va_list args) <link linkend="_imgui_8h_1a047693beb7f899f5deab1e20202016b3">IM_FMTLIST</link>(2)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1af8d34d563b17c683943a0fa7bf5807bc">BulletText</link> (const char *fmt,...) <link linkend="_imgui_8h_1a1251c2f9ddac0873dbad8181bd82c9f1">IM_FMTARGS</link>(1)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1af8f4b5e96c745e205974857f9a584583">BulletTextV</link> (const char *fmt, va_list args) <link linkend="_imgui_8h_1a047693beb7f899f5deab1e20202016b3">IM_FMTLIST</link>(1)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a35e04f2c996f8634bfda0fa1c07572d9">SeparatorText</link> (const char *label)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a38094c568ce398db5a3abb9d3ac92030">Button</link> (const char *label, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;<link linkend="_imgui__impl__opengl3__loader_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>=<link linkend="_struct_im_vec2">ImVec2</link>(0, 0))</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a5b76ec69758aeb0a00a66f142f7a4fb2">SmallButton</link> (const char *label)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a1f61951b9d3a38083bd77b1dbe3ea895">InvisibleButton</link> (const char *str_id, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;<link linkend="_imgui__impl__opengl3__loader_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>, <link linkend="_imgui_8h_1a990fae518aa1d95f571ee40989de4c22">ImGuiButtonFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1ad2bc397a02d5e4b8a14360d89abc6242">ArrowButton</link> (const char *str_id, <link linkend="_imgui_8h_1a874086389bc27cc9647118d22a806403">ImGuiDir</link> dir)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a57d73c1d0ef807fef734d91024092027">Checkbox</link> (const char *label, bool *v)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1ab40105d09d9fa234721901da6e196a65">CheckboxFlags</link> (const char *label, int *flags, int flags_value)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1aeca400dcf5a82c312b3e669d2fe6e88d">CheckboxFlags</link> (const char *label, unsigned int *flags, unsigned int flags_value)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a6b146763845cbad5a4144772279631bc">RadioButton</link> (const char *label, bool active)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a018d2b61d2f00bb7a9dd2b1f933b93a5">RadioButton</link> (const char *label, int *v, int v_button)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a412b0416ad68c0ac46e5d66805d911ff">ProgressBar</link> (float fraction, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;size_arg=<link linkend="_struct_im_vec2">ImVec2</link>(-FLT_MIN, 0), const char *overlay=NULL)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1ae2d22212681556d2c2398dfd152f3121">Bullet</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a95b5d733371c3b74caf89dbae8d51419">Image</link> (<link linkend="_imgui_8h_1a364f4447ecbc4ca176145ccff9db6286">ImTextureID</link> user_texture_id, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;image_size, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;uv0=<link linkend="_struct_im_vec2">ImVec2</link>(0, 0), const <link linkend="_struct_im_vec2">ImVec2</link> &amp;uv1=<link linkend="_struct_im_vec2">ImVec2</link>(1, 1), const <link linkend="_struct_im_vec4">ImVec4</link> &amp;tint_col=<link linkend="_struct_im_vec4">ImVec4</link>(1, 1, 1, 1), const <link linkend="_struct_im_vec4">ImVec4</link> &amp;border_col=<link linkend="_struct_im_vec4">ImVec4</link>(0, 0, 0, 0))</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1af3b1c663cabd3324291be7f13c1eb60f">ImageButton</link> (const char *str_id, <link linkend="_imgui_8h_1a364f4447ecbc4ca176145ccff9db6286">ImTextureID</link> user_texture_id, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;image_size, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;uv0=<link linkend="_struct_im_vec2">ImVec2</link>(0, 0), const <link linkend="_struct_im_vec2">ImVec2</link> &amp;uv1=<link linkend="_struct_im_vec2">ImVec2</link>(1, 1), const <link linkend="_struct_im_vec4">ImVec4</link> &amp;bg_col=<link linkend="_struct_im_vec4">ImVec4</link>(0, 0, 0, 0), const <link linkend="_struct_im_vec4">ImVec4</link> &amp;tint_col=<link linkend="_struct_im_vec4">ImVec4</link>(1, 1, 1, 1))</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1aa895095bdc7a2907375c555e245575ea">BeginCombo</link> (const char *label, const char *preview_value, <link linkend="_imgui_8h_1aae31d1cfbcc55ae20b4122a7149d435e">ImGuiComboFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a63434692d7de278875c7ea0143fbe6e4">EndCombo</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1aa2979368da5b9e98d368449b36d166b2">Combo</link> (const char *label, int *current_item, const char *const items[], int items_count, int popup_max_height_in_items=-1)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1ab982779804105fdc57355868ab531cad">Combo</link> (const char *label, int *current_item, const char *items_separated_by_zeros, int popup_max_height_in_items=-1)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1ad530c65e7cdfaf03f4e9b2f4e3fed8fc">Combo</link> (const char *label, int *current_item, const char *(*getter)(<link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *user_data, int idx), <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *user_data, int items_count, int popup_max_height_in_items=-1)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1aab1b20e7bf98aa7bbdb26f8cd3ad91e6">DragFloat</link> (const char *label, float *v, float v_speed=1.0f, float v_min=0.0f, float v_max=0.0f, const char *<link linkend="_imgui__impl__opengl3__loader_8h_1a1e3b09934060e9d373139c3557730d37">format</link>=&quot;%.3f&quot;, <link linkend="_imgui_8h_1a50cc3e3e4beb155e2186f8c1dc057e18">ImGuiSliderFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1afc9ce10d78534a5c186cee0b337f7471">DragFloat2</link> (const char *label, float v[2], float v_speed=1.0f, float v_min=0.0f, float v_max=0.0f, const char *<link linkend="_imgui__impl__opengl3__loader_8h_1a1e3b09934060e9d373139c3557730d37">format</link>=&quot;%.3f&quot;, <link linkend="_imgui_8h_1a50cc3e3e4beb155e2186f8c1dc057e18">ImGuiSliderFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a5ffcbb0240077cf2f300960db3c0a3d7">DragFloat3</link> (const char *label, float v[3], float v_speed=1.0f, float v_min=0.0f, float v_max=0.0f, const char *<link linkend="_imgui__impl__opengl3__loader_8h_1a1e3b09934060e9d373139c3557730d37">format</link>=&quot;%.3f&quot;, <link linkend="_imgui_8h_1a50cc3e3e4beb155e2186f8c1dc057e18">ImGuiSliderFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a43e4508fb0c6a82cf6d78a645965dd57">DragFloat4</link> (const char *label, float v[4], float v_speed=1.0f, float v_min=0.0f, float v_max=0.0f, const char *<link linkend="_imgui__impl__opengl3__loader_8h_1a1e3b09934060e9d373139c3557730d37">format</link>=&quot;%.3f&quot;, <link linkend="_imgui_8h_1a50cc3e3e4beb155e2186f8c1dc057e18">ImGuiSliderFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1aa6bfd93ead5c47e84b66185da88b8e8c">DragFloatRange2</link> (const char *label, float *v_current_min, float *v_current_max, float v_speed=1.0f, float v_min=0.0f, float v_max=0.0f, const char *<link linkend="_imgui__impl__opengl3__loader_8h_1a1e3b09934060e9d373139c3557730d37">format</link>=&quot;%.3f&quot;, const char *format_max=NULL, <link linkend="_imgui_8h_1a50cc3e3e4beb155e2186f8c1dc057e18">ImGuiSliderFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a3714db739ae51fc75601d7fad234a58b">DragInt</link> (const char *label, int *v, float v_speed=1.0f, int v_min=0, int v_max=0, const char *<link linkend="_imgui__impl__opengl3__loader_8h_1a1e3b09934060e9d373139c3557730d37">format</link>=&quot;%d&quot;, <link linkend="_imgui_8h_1a50cc3e3e4beb155e2186f8c1dc057e18">ImGuiSliderFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a56e3ba8164b0b78b46f01a3a2f7fe00b">DragInt2</link> (const char *label, int v[2], float v_speed=1.0f, int v_min=0, int v_max=0, const char *<link linkend="_imgui__impl__opengl3__loader_8h_1a1e3b09934060e9d373139c3557730d37">format</link>=&quot;%d&quot;, <link linkend="_imgui_8h_1a50cc3e3e4beb155e2186f8c1dc057e18">ImGuiSliderFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1af4be377242ba2480b28b116390af7261">DragInt3</link> (const char *label, int v[3], float v_speed=1.0f, int v_min=0, int v_max=0, const char *<link linkend="_imgui__impl__opengl3__loader_8h_1a1e3b09934060e9d373139c3557730d37">format</link>=&quot;%d&quot;, <link linkend="_imgui_8h_1a50cc3e3e4beb155e2186f8c1dc057e18">ImGuiSliderFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a5d75e4d3263272f22eb2001652397e55">DragInt4</link> (const char *label, int v[4], float v_speed=1.0f, int v_min=0, int v_max=0, const char *<link linkend="_imgui__impl__opengl3__loader_8h_1a1e3b09934060e9d373139c3557730d37">format</link>=&quot;%d&quot;, <link linkend="_imgui_8h_1a50cc3e3e4beb155e2186f8c1dc057e18">ImGuiSliderFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a27a0380e0480671c7cd854dd7bfc6bd1">DragIntRange2</link> (const char *label, int *v_current_min, int *v_current_max, float v_speed=1.0f, int v_min=0, int v_max=0, const char *<link linkend="_imgui__impl__opengl3__loader_8h_1a1e3b09934060e9d373139c3557730d37">format</link>=&quot;%d&quot;, const char *format_max=NULL, <link linkend="_imgui_8h_1a50cc3e3e4beb155e2186f8c1dc057e18">ImGuiSliderFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a17d8926e8f44a6d00575b12081c51fe0">DragScalar</link> (const char *label, <link linkend="_imgui_8h_1a4cfa8697a3d76722fff83eb18922e9d5">ImGuiDataType</link> data_type, <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *p_data, float v_speed=1.0f, const <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *p_min=NULL, const <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *p_max=NULL, const char *<link linkend="_imgui__impl__opengl3__loader_8h_1a1e3b09934060e9d373139c3557730d37">format</link>=NULL, <link linkend="_imgui_8h_1a50cc3e3e4beb155e2186f8c1dc057e18">ImGuiSliderFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a1265d2b30ced1fca909e26c8f718fcbd">DragScalarN</link> (const char *label, <link linkend="_imgui_8h_1a4cfa8697a3d76722fff83eb18922e9d5">ImGuiDataType</link> data_type, <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *p_data, int components, float v_speed=1.0f, const <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *p_min=NULL, const <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *p_max=NULL, const char *<link linkend="_imgui__impl__opengl3__loader_8h_1a1e3b09934060e9d373139c3557730d37">format</link>=NULL, <link linkend="_imgui_8h_1a50cc3e3e4beb155e2186f8c1dc057e18">ImGuiSliderFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a864f761801792a0cc5ce3408f3392cfc">SliderFloat</link> (const char *label, float *v, float v_min, float v_max, const char *<link linkend="_imgui__impl__opengl3__loader_8h_1a1e3b09934060e9d373139c3557730d37">format</link>=&quot;%.3f&quot;, <link linkend="_imgui_8h_1a50cc3e3e4beb155e2186f8c1dc057e18">ImGuiSliderFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a65ed4a55f13d467b06075c951b310c23">SliderFloat2</link> (const char *label, float v[2], float v_min, float v_max, const char *<link linkend="_imgui__impl__opengl3__loader_8h_1a1e3b09934060e9d373139c3557730d37">format</link>=&quot;%.3f&quot;, <link linkend="_imgui_8h_1a50cc3e3e4beb155e2186f8c1dc057e18">ImGuiSliderFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a9fb9ae936849ae17be13c9b6a0391585">SliderFloat3</link> (const char *label, float v[3], float v_min, float v_max, const char *<link linkend="_imgui__impl__opengl3__loader_8h_1a1e3b09934060e9d373139c3557730d37">format</link>=&quot;%.3f&quot;, <link linkend="_imgui_8h_1a50cc3e3e4beb155e2186f8c1dc057e18">ImGuiSliderFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1acee94c7b89963d8fec32de541cd7205f">SliderFloat4</link> (const char *label, float v[4], float v_min, float v_max, const char *<link linkend="_imgui__impl__opengl3__loader_8h_1a1e3b09934060e9d373139c3557730d37">format</link>=&quot;%.3f&quot;, <link linkend="_imgui_8h_1a50cc3e3e4beb155e2186f8c1dc057e18">ImGuiSliderFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1acd162f7732c5c7be7b8651d7e43bb979">SliderAngle</link> (const char *label, float *v_rad, float v_degrees_min=-360.0f, float v_degrees_max=+360.0f, const char *<link linkend="_imgui__impl__opengl3__loader_8h_1a1e3b09934060e9d373139c3557730d37">format</link>=&quot;%.0f deg&quot;, <link linkend="_imgui_8h_1a50cc3e3e4beb155e2186f8c1dc057e18">ImGuiSliderFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a580128c9b35d1a9fc5b7a057f6f5464a">SliderInt</link> (const char *label, int *v, int v_min, int v_max, const char *<link linkend="_imgui__impl__opengl3__loader_8h_1a1e3b09934060e9d373139c3557730d37">format</link>=&quot;%d&quot;, <link linkend="_imgui_8h_1a50cc3e3e4beb155e2186f8c1dc057e18">ImGuiSliderFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a9913948869631d72e4fa5dd69235350e">SliderInt2</link> (const char *label, int v[2], int v_min, int v_max, const char *<link linkend="_imgui__impl__opengl3__loader_8h_1a1e3b09934060e9d373139c3557730d37">format</link>=&quot;%d&quot;, <link linkend="_imgui_8h_1a50cc3e3e4beb155e2186f8c1dc057e18">ImGuiSliderFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1ab1e67cf69998479a59677e332dba745b">SliderInt3</link> (const char *label, int v[3], int v_min, int v_max, const char *<link linkend="_imgui__impl__opengl3__loader_8h_1a1e3b09934060e9d373139c3557730d37">format</link>=&quot;%d&quot;, <link linkend="_imgui_8h_1a50cc3e3e4beb155e2186f8c1dc057e18">ImGuiSliderFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a9a0bb4c55424177ab7894e5a87bd91ea">SliderInt4</link> (const char *label, int v[4], int v_min, int v_max, const char *<link linkend="_imgui__impl__opengl3__loader_8h_1a1e3b09934060e9d373139c3557730d37">format</link>=&quot;%d&quot;, <link linkend="_imgui_8h_1a50cc3e3e4beb155e2186f8c1dc057e18">ImGuiSliderFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1afdd7faa9a69f75b8d674cdc207441bea">SliderScalar</link> (const char *label, <link linkend="_imgui_8h_1a4cfa8697a3d76722fff83eb18922e9d5">ImGuiDataType</link> data_type, <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *p_data, const <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *p_min, const <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *p_max, const char *<link linkend="_imgui__impl__opengl3__loader_8h_1a1e3b09934060e9d373139c3557730d37">format</link>=NULL, <link linkend="_imgui_8h_1a50cc3e3e4beb155e2186f8c1dc057e18">ImGuiSliderFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a64031a4ad000695c1e1d3f42792f4bb4">SliderScalarN</link> (const char *label, <link linkend="_imgui_8h_1a4cfa8697a3d76722fff83eb18922e9d5">ImGuiDataType</link> data_type, <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *p_data, int components, const <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *p_min, const <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *p_max, const char *<link linkend="_imgui__impl__opengl3__loader_8h_1a1e3b09934060e9d373139c3557730d37">format</link>=NULL, <link linkend="_imgui_8h_1a50cc3e3e4beb155e2186f8c1dc057e18">ImGuiSliderFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a990332e589b828093786bbc007b9bfda">VSliderFloat</link> (const char *label, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;<link linkend="_imgui__impl__opengl3__loader_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>, float *v, float v_min, float v_max, const char *<link linkend="_imgui__impl__opengl3__loader_8h_1a1e3b09934060e9d373139c3557730d37">format</link>=&quot;%.3f&quot;, <link linkend="_imgui_8h_1a50cc3e3e4beb155e2186f8c1dc057e18">ImGuiSliderFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a3cf7cf500353bf13250e29d788bd3fff">VSliderInt</link> (const char *label, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;<link linkend="_imgui__impl__opengl3__loader_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>, int *v, int v_min, int v_max, const char *<link linkend="_imgui__impl__opengl3__loader_8h_1a1e3b09934060e9d373139c3557730d37">format</link>=&quot;%d&quot;, <link linkend="_imgui_8h_1a50cc3e3e4beb155e2186f8c1dc057e18">ImGuiSliderFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a6ad24ca37a530d43f9d1c727d94e4829">VSliderScalar</link> (const char *label, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;<link linkend="_imgui__impl__opengl3__loader_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>, <link linkend="_imgui_8h_1a4cfa8697a3d76722fff83eb18922e9d5">ImGuiDataType</link> data_type, <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *p_data, const <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *p_min, const <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *p_max, const char *<link linkend="_imgui__impl__opengl3__loader_8h_1a1e3b09934060e9d373139c3557730d37">format</link>=NULL, <link linkend="_imgui_8h_1a50cc3e3e4beb155e2186f8c1dc057e18">ImGuiSliderFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1aa72b5760a3a206729723a587ac7c8519">InputText</link> (const char *label, char *buf, size_t buf_size, <link linkend="_imgui_8h_1a7d2c6153a6b9b5d3178ce82434ac9fb8">ImGuiInputTextFlags</link> flags=0, <link linkend="_imgui_8h_1a65fd2b568a62c9aa2a28a8a13eb65ad7">ImGuiInputTextCallback</link> callback=NULL, <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *user_data=NULL)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a0470693929ed9930cbf5b737577c2414">InputTextMultiline</link> (const char *label, char *buf, size_t buf_size, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;<link linkend="_imgui__impl__opengl3__loader_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>=<link linkend="_struct_im_vec2">ImVec2</link>(0, 0), <link linkend="_imgui_8h_1a7d2c6153a6b9b5d3178ce82434ac9fb8">ImGuiInputTextFlags</link> flags=0, <link linkend="_imgui_8h_1a65fd2b568a62c9aa2a28a8a13eb65ad7">ImGuiInputTextCallback</link> callback=NULL, <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *user_data=NULL)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1aee5a5127f494966ad16e578714e8fac2">InputTextWithHint</link> (const char *label, const char *hint, char *buf, size_t buf_size, <link linkend="_imgui_8h_1a7d2c6153a6b9b5d3178ce82434ac9fb8">ImGuiInputTextFlags</link> flags=0, <link linkend="_imgui_8h_1a65fd2b568a62c9aa2a28a8a13eb65ad7">ImGuiInputTextCallback</link> callback=NULL, <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *user_data=NULL)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a36b86c9d7226f18c316400c83a904454">InputFloat</link> (const char *label, float *v, float step=0.0f, float step_fast=0.0f, const char *<link linkend="_imgui__impl__opengl3__loader_8h_1a1e3b09934060e9d373139c3557730d37">format</link>=&quot;%.3f&quot;, <link linkend="_imgui_8h_1a7d2c6153a6b9b5d3178ce82434ac9fb8">ImGuiInputTextFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a854ba6decd4ae7e4b0980a9c71bfa47d">InputFloat2</link> (const char *label, float v[2], const char *<link linkend="_imgui__impl__opengl3__loader_8h_1a1e3b09934060e9d373139c3557730d37">format</link>=&quot;%.3f&quot;, <link linkend="_imgui_8h_1a7d2c6153a6b9b5d3178ce82434ac9fb8">ImGuiInputTextFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a970a00fd1a4226c697ea5fb807fb62d8">InputFloat3</link> (const char *label, float v[3], const char *<link linkend="_imgui__impl__opengl3__loader_8h_1a1e3b09934060e9d373139c3557730d37">format</link>=&quot;%.3f&quot;, <link linkend="_imgui_8h_1a7d2c6153a6b9b5d3178ce82434ac9fb8">ImGuiInputTextFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a69675d2e9780a0e5a7a372f936b64d49">InputFloat4</link> (const char *label, float v[4], const char *<link linkend="_imgui__impl__opengl3__loader_8h_1a1e3b09934060e9d373139c3557730d37">format</link>=&quot;%.3f&quot;, <link linkend="_imgui_8h_1a7d2c6153a6b9b5d3178ce82434ac9fb8">ImGuiInputTextFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a36fc45a3c41a63ea9a983cc851752505">InputInt</link> (const char *label, int *v, int step=1, int step_fast=100, <link linkend="_imgui_8h_1a7d2c6153a6b9b5d3178ce82434ac9fb8">ImGuiInputTextFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a83dfd2daacefb741e67d8d69821e1590">InputInt2</link> (const char *label, int v[2], <link linkend="_imgui_8h_1a7d2c6153a6b9b5d3178ce82434ac9fb8">ImGuiInputTextFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1ab8e7466e5bdda70fefa551eb662dc3f5">InputInt3</link> (const char *label, int v[3], <link linkend="_imgui_8h_1a7d2c6153a6b9b5d3178ce82434ac9fb8">ImGuiInputTextFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a3a57668b83f7a99d295f94baa71add0a">InputInt4</link> (const char *label, int v[4], <link linkend="_imgui_8h_1a7d2c6153a6b9b5d3178ce82434ac9fb8">ImGuiInputTextFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1ad941c3cfa561ca35b674fd5802bcf870">InputDouble</link> (const char *label, double *v, double step=0.0, double step_fast=0.0, const char *<link linkend="_imgui__impl__opengl3__loader_8h_1a1e3b09934060e9d373139c3557730d37">format</link>=&quot;%.6f&quot;, <link linkend="_imgui_8h_1a7d2c6153a6b9b5d3178ce82434ac9fb8">ImGuiInputTextFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1afdb54540b7480872fbb746f64344b374">InputScalar</link> (const char *label, <link linkend="_imgui_8h_1a4cfa8697a3d76722fff83eb18922e9d5">ImGuiDataType</link> data_type, <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *p_data, const <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *p_step=NULL, const <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *p_step_fast=NULL, const char *<link linkend="_imgui__impl__opengl3__loader_8h_1a1e3b09934060e9d373139c3557730d37">format</link>=NULL, <link linkend="_imgui_8h_1a7d2c6153a6b9b5d3178ce82434ac9fb8">ImGuiInputTextFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1afb17f0092027c09183df498834abace9">InputScalarN</link> (const char *label, <link linkend="_imgui_8h_1a4cfa8697a3d76722fff83eb18922e9d5">ImGuiDataType</link> data_type, <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *p_data, int components, const <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *p_step=NULL, const <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *p_step_fast=NULL, const char *<link linkend="_imgui__impl__opengl3__loader_8h_1a1e3b09934060e9d373139c3557730d37">format</link>=NULL, <link linkend="_imgui_8h_1a7d2c6153a6b9b5d3178ce82434ac9fb8">ImGuiInputTextFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a5afe76ba1c91f07363e40396e7df656e">ColorEdit3</link> (const char *label, float col[3], <link linkend="_imgui_8h_1a6b2d5e95adc38f22c021252189f669c6">ImGuiColorEditFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1ac3f45e2aa0b1d591cc8a2cdf8b566a45">ColorEdit4</link> (const char *label, float col[4], <link linkend="_imgui_8h_1a6b2d5e95adc38f22c021252189f669c6">ImGuiColorEditFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a2a2a98cb9a17b18702be6b954670b388">ColorPicker3</link> (const char *label, float col[3], <link linkend="_imgui_8h_1a6b2d5e95adc38f22c021252189f669c6">ImGuiColorEditFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a3d5aae9e0a14aa051d5a799abbe97b32">ColorPicker4</link> (const char *label, float col[4], <link linkend="_imgui_8h_1a6b2d5e95adc38f22c021252189f669c6">ImGuiColorEditFlags</link> flags=0, const float *ref_col=NULL)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1ae2d7c8f37726810753d71d480f0af7f0">ColorButton</link> (const char *desc_id, const <link linkend="_struct_im_vec4">ImVec4</link> &amp;col, <link linkend="_imgui_8h_1a6b2d5e95adc38f22c021252189f669c6">ImGuiColorEditFlags</link> flags=0, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;<link linkend="_imgui__impl__opengl3__loader_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>=<link linkend="_struct_im_vec2">ImVec2</link>(0, 0))</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1ac768151f2ac6c7d79b31b934cc0e9d05">SetColorEditOptions</link> (<link linkend="_imgui_8h_1a6b2d5e95adc38f22c021252189f669c6">ImGuiColorEditFlags</link> flags)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a4dff507ce8bbe0da9556bb50b1e60d7f">TreeNode</link> (const char *label)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a6e6e4de20291002430854cbd8cd58843">TreeNode</link> (const char *str_id, const char *fmt,...) <link linkend="_imgui_8h_1a1251c2f9ddac0873dbad8181bd82c9f1">IM_FMTARGS</link>(2)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a47f1421323f90fdd0a9cbfea2338b10f">TreeNode</link> (const <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *ptr_id, const char *fmt,...) <link linkend="_imgui_8h_1a1251c2f9ddac0873dbad8181bd82c9f1">IM_FMTARGS</link>(2)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a9bc1075c583973d76d8d65ea89787453">TreeNodeV</link> (const char *str_id, const char *fmt, va_list args) <link linkend="_imgui_8h_1a047693beb7f899f5deab1e20202016b3">IM_FMTLIST</link>(2)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a15320f61ba6b4916af3323bf7844602e">TreeNodeV</link> (const <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *ptr_id, const char *fmt, va_list args) <link linkend="_imgui_8h_1a047693beb7f899f5deab1e20202016b3">IM_FMTLIST</link>(2)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a21f62e092dac9556a15a8edee2f70522">TreeNodeEx</link> (const char *label, <link linkend="_imgui_8h_1a0588fdd10c59b49a0159484fe9ec4564">ImGuiTreeNodeFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a9ca2fae922b38cfddc3259f874c18a5d">TreeNodeEx</link> (const char *str_id, <link linkend="_imgui_8h_1a0588fdd10c59b49a0159484fe9ec4564">ImGuiTreeNodeFlags</link> flags, const char *fmt,...) <link linkend="_imgui_8h_1a1251c2f9ddac0873dbad8181bd82c9f1">IM_FMTARGS</link>(3)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1adce362ad94baa9b00f5914cbcab00452">TreeNodeEx</link> (const <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *ptr_id, <link linkend="_imgui_8h_1a0588fdd10c59b49a0159484fe9ec4564">ImGuiTreeNodeFlags</link> flags, const char *fmt,...) <link linkend="_imgui_8h_1a1251c2f9ddac0873dbad8181bd82c9f1">IM_FMTARGS</link>(3)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a251cd4acbdad4cef2246d9b573a83ce0">TreeNodeExV</link> (const char *str_id, <link linkend="_imgui_8h_1a0588fdd10c59b49a0159484fe9ec4564">ImGuiTreeNodeFlags</link> flags, const char *fmt, va_list args) <link linkend="_imgui_8h_1a047693beb7f899f5deab1e20202016b3">IM_FMTLIST</link>(3)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1aaae827898572d17e064a88a1afc8e6b0">TreeNodeExV</link> (const <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *ptr_id, <link linkend="_imgui_8h_1a0588fdd10c59b49a0159484fe9ec4564">ImGuiTreeNodeFlags</link> flags, const char *fmt, va_list args) <link linkend="_imgui_8h_1a047693beb7f899f5deab1e20202016b3">IM_FMTLIST</link>(3)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a30b5df3be04a6e712985612bbdea6656">TreePush</link> (const char *str_id)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1aaaedbc7778152061af89f542f3e3402e">TreePush</link> (const <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *ptr_id)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a41ecf265e5f678c78fc9c30b3cf2077f">TreePop</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> float <link linkend="_namespace_im_gui_1a5c89cb6b42296d0f7db75027efc0fb7a">GetTreeNodeToLabelSpacing</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1ab52f9e08698c9d64abb05b98f5355146">CollapsingHeader</link> (const char *label, <link linkend="_imgui_8h_1a0588fdd10c59b49a0159484fe9ec4564">ImGuiTreeNodeFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a4d6e6e7a5ace0e5dbee3ea1926ddf049">CollapsingHeader</link> (const char *label, bool *p_visible, <link linkend="_imgui_8h_1a0588fdd10c59b49a0159484fe9ec4564">ImGuiTreeNodeFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a4a90137256a3ce852e726cb65d55b627">SetNextItemOpen</link> (bool is_open, <link linkend="_imgui_8h_1aef890d6ac872e12c5804d0b3e4f7f103">ImGuiCond</link> cond=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1af98575238bda183a523df19fb447af60">Selectable</link> (const char *label, bool selected=false, <link linkend="_imgui_8h_1aab0fe56421d75949dedfbfbbaa674b6b">ImGuiSelectableFlags</link> flags=0, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;<link linkend="_imgui__impl__opengl3__loader_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>=<link linkend="_struct_im_vec2">ImVec2</link>(0, 0))</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a9229a9c3c304ffc0c98ffe2ee4ff5e40">Selectable</link> (const char *label, bool *p_selected, <link linkend="_imgui_8h_1aab0fe56421d75949dedfbfbbaa674b6b">ImGuiSelectableFlags</link> flags=0, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;<link linkend="_imgui__impl__opengl3__loader_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>=<link linkend="_struct_im_vec2">ImVec2</link>(0, 0))</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a2f37c541760a39c189ebdd86c15b60d9">BeginListBox</link> (const char *label, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;<link linkend="_imgui__impl__opengl3__loader_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>=<link linkend="_struct_im_vec2">ImVec2</link>(0, 0))</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a6a1b63d9b66bb934d995c279ac02daff">EndListBox</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a44379fe654f54ae8bd8cc1b88bf7c822">ListBox</link> (const char *label, int *current_item, const char *const items[], int items_count, int height_in_items=-1)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a94c78076bd40ff548ecd124f95af8710">ListBox</link> (const char *label, int *current_item, const char *(*getter)(<link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *user_data, int idx), <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *user_data, int items_count, int height_in_items=-1)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a2bc21c56e4796855313804086cca114f">PlotLines</link> (const char *label, const float *values, int values_count, int values_offset=0, const char *overlay_text=NULL, float scale_min=FLT_MAX, float scale_max=FLT_MAX, <link linkend="_struct_im_vec2">ImVec2</link> graph_size=<link linkend="_struct_im_vec2">ImVec2</link>(0, 0), int <link linkend="_imgui__impl__opengl3__loader_8h_1adec60f1216ca1b900f8d776c5b6190e0">stride</link>=sizeof(float))</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a94a2645d45c96da35b834dc7db93a9f1">PlotLines</link> (const char *label, float(*values_getter)(<link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *<link linkend="_imgui__impl__opengl3__loader_8h_1abd87654504355b4c1bb002dcb1d4d16a">data</link>, int idx), <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *<link linkend="_imgui__impl__opengl3__loader_8h_1abd87654504355b4c1bb002dcb1d4d16a">data</link>, int values_count, int values_offset=0, const char *overlay_text=NULL, float scale_min=FLT_MAX, float scale_max=FLT_MAX, <link linkend="_struct_im_vec2">ImVec2</link> graph_size=<link linkend="_struct_im_vec2">ImVec2</link>(0, 0))</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1af7a92b2118981835b5251bfdaac50252">PlotHistogram</link> (const char *label, const float *values, int values_count, int values_offset=0, const char *overlay_text=NULL, float scale_min=FLT_MAX, float scale_max=FLT_MAX, <link linkend="_struct_im_vec2">ImVec2</link> graph_size=<link linkend="_struct_im_vec2">ImVec2</link>(0, 0), int <link linkend="_imgui__impl__opengl3__loader_8h_1adec60f1216ca1b900f8d776c5b6190e0">stride</link>=sizeof(float))</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1af8089203baf8cf723a158c9e34bda2a4">PlotHistogram</link> (const char *label, float(*values_getter)(<link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *<link linkend="_imgui__impl__opengl3__loader_8h_1abd87654504355b4c1bb002dcb1d4d16a">data</link>, int idx), <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *<link linkend="_imgui__impl__opengl3__loader_8h_1abd87654504355b4c1bb002dcb1d4d16a">data</link>, int values_count, int values_offset=0, const char *overlay_text=NULL, float scale_min=FLT_MAX, float scale_max=FLT_MAX, <link linkend="_struct_im_vec2">ImVec2</link> graph_size=<link linkend="_struct_im_vec2">ImVec2</link>(0, 0))</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a1b3324308e43eeded5c3599fa0f03e85">Value</link> (const char *prefix, bool b)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a654ceb70f2dd1598f88861f54764ee08">Value</link> (const char *prefix, int v)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1aec80a3e35bf7c1ff5704334e5a3ebd5a">Value</link> (const char *prefix, unsigned int v)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a0c8b87438082a1d0a46ae2a76090ca16">Value</link> (const char *prefix, float v, const char *float_format=NULL)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a4852dff802922163fc747e2e0df5b88f">BeginMenuBar</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1aa226265c140eb6ee375c5b9abc69c4fc">EndMenuBar</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a55cb9cfb9865204ac6fb21c965784f78">BeginMainMenuBar</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1ab92f330c808546b340eb7bdf7e5f7c95">EndMainMenuBar</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a1e55711a21f97d5dff919d697d3a7201">BeginMenu</link> (const char *label, bool enabled=true)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a1448a5a4e8c431c15f991e9255c0df95">EndMenu</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1aa1bae511ca47478998693a9d8c84f2e6">MenuItem</link> (const char *label, const char *shortcut=NULL, bool selected=false, bool enabled=true)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a237e76bff3088f1c2622f4aebae2356e">MenuItem</link> (const char *label, const char *shortcut, bool *p_selected, bool enabled=true)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a0609fbb218702a720c383c87d0c545a2">BeginTooltip</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1ac8d75c160cfdf43d512f773ca133a1c6">EndTooltip</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a313073fa01b8a9791f241ef93091ce92">SetTooltip</link> (const char *fmt,...) <link linkend="_imgui_8h_1a1251c2f9ddac0873dbad8181bd82c9f1">IM_FMTARGS</link>(1)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a3826acf68fc4a12bb66401575f51d6a2">SetTooltipV</link> (const char *fmt, va_list args) <link linkend="_imgui_8h_1a047693beb7f899f5deab1e20202016b3">IM_FMTLIST</link>(1)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a0557ed1d3f89dcb5d25311bf3099ddf5">BeginItemTooltip</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a3685a04624f724222fa78824de3a1c63">SetItemTooltip</link> (const char *fmt,...) <link linkend="_imgui_8h_1a1251c2f9ddac0873dbad8181bd82c9f1">IM_FMTARGS</link>(1)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a7729dc27e2807c6e2f6dc91fb7fc9d6a">SetItemTooltipV</link> (const char *fmt, va_list args) <link linkend="_imgui_8h_1a047693beb7f899f5deab1e20202016b3">IM_FMTLIST</link>(1)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a10e213926d8ca212266bc5fbded1e026">BeginPopup</link> (const char *str_id, <link linkend="_imgui_8h_1a0b8e067ab4f7a818828c8d89e531addc">ImGuiWindowFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a6d840f615c198c2342968f733fda11b3">BeginPopupModal</link> (const char *<link linkend="_imgui__impl__opengl3__loader_8h_1a5c4947d4516dd7cfa3505ce3a648a4ef">name</link>, bool *p_open=NULL, <link linkend="_imgui_8h_1a0b8e067ab4f7a818828c8d89e531addc">ImGuiWindowFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1aa6a9b5696f2ea7eed7683425fc77b8f2">EndPopup</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a9e1be94ca8c4d48a20b230cdfc9b18c5">OpenPopup</link> (const char *str_id, <link linkend="_imgui_8h_1af06c83fd0d1f3442139f0a5459b5a18a">ImGuiPopupFlags</link> popup_flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1aa01aaa1d9002799e66094cfe87bf77a3">OpenPopup</link> (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id, <link linkend="_imgui_8h_1af06c83fd0d1f3442139f0a5459b5a18a">ImGuiPopupFlags</link> popup_flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a3811834876930efd5cb08a25d8c022d0">OpenPopupOnItemClick</link> (const char *str_id=NULL, <link linkend="_imgui_8h_1af06c83fd0d1f3442139f0a5459b5a18a">ImGuiPopupFlags</link> popup_flags=1)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1aeaec6479834db7918260fc082107f90b">CloseCurrentPopup</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a440894c8c00495d5cc01529f4504fca9">BeginPopupContextItem</link> (const char *str_id=NULL, <link linkend="_imgui_8h_1af06c83fd0d1f3442139f0a5459b5a18a">ImGuiPopupFlags</link> popup_flags=1)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1aef8b2c0baa27bd5c68f676aaf14ed946">BeginPopupContextWindow</link> (const char *str_id=NULL, <link linkend="_imgui_8h_1af06c83fd0d1f3442139f0a5459b5a18a">ImGuiPopupFlags</link> popup_flags=1)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a6758a456204101a9c4a660da4cfba2c9">BeginPopupContextVoid</link> (const char *str_id=NULL, <link linkend="_imgui_8h_1af06c83fd0d1f3442139f0a5459b5a18a">ImGuiPopupFlags</link> popup_flags=1)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a0e351145d0936e79948094166757712e">IsPopupOpen</link> (const char *str_id, <link linkend="_imgui_8h_1af06c83fd0d1f3442139f0a5459b5a18a">ImGuiPopupFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a04ee4f6866b8e10b98008e7f19d35796">BeginTable</link> (const char *str_id, int column, <link linkend="_imgui_8h_1ad3032e379f8aba2cb5c31b05cd40858d">ImGuiTableFlags</link> flags=0, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;outer_size=<link linkend="_struct_im_vec2">ImVec2</link>(0.0f, 0.0f), float inner_width=0.0f)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a9c70aaa6464c2e51e6f3342da133ada1">EndTable</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a33511cbfe04b545a1a51b514ab6c208c">TableNextRow</link> (<link linkend="_imgui_8h_1acff5083d4dbfa7a898927046008598c1">ImGuiTableRowFlags</link> row_flags=0, float min_row_height=0.0f)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1ac9925e8335f55449b1be988829e37ba5">TableNextColumn</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1adfbeb33991944035737d413379ae8b1c">TableSetColumnIndex</link> (int column_n)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a4ac0fd352082b1aa9a2a5a1dedcf5b89">TableSetupColumn</link> (const char *label, <link linkend="_imgui_8h_1afa2ab8df5653f1cc944f6cbc156bf874">ImGuiTableColumnFlags</link> flags=0, float init_width_or_weight=0.0f, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> user_id=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a3be97defe1cb195b220dccac4e9d3084">TableSetupScrollFreeze</link> (int cols, int rows)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1ae51bc07bc518779f58def3c0e2d0045c">TableHeader</link> (const char *label)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a0c16791f4620e8db38511553d5d63335">TableHeadersRow</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a17eb2b71b2aff472d9d56c838586b73b">TableAngledHeadersRow</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_struct_im_gui_table_sort_specs">ImGuiTableSortSpecs</link> * <link linkend="_namespace_im_gui_1acaeb2f2896b8332e108b6b1ce1c08fcc">TableGetSortSpecs</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> int <link linkend="_namespace_im_gui_1acaf1dac6c4f24b96ad607958d4298198">TableGetColumnCount</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> int <link linkend="_namespace_im_gui_1a0527a5c08501cf1de0eb2c691042e40b">TableGetColumnIndex</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> int <link linkend="_namespace_im_gui_1a1b93e609ccd69d923f69751c25ac2f5c">TableGetRowIndex</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> const char * <link linkend="_namespace_im_gui_1a38ddf97e72be7278e6661d7db3055526">TableGetColumnName</link> (int column_n=-1)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_imgui_8h_1afa2ab8df5653f1cc944f6cbc156bf874">ImGuiTableColumnFlags</link> <link linkend="_namespace_im_gui_1a809f5ce5ce8ad4035d19cea0e79e1e5f">TableGetColumnFlags</link> (int column_n=-1)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a8e40d2b7a1cdee9d210c7de4cf577f7f">TableSetColumnEnabled</link> (int column_n, bool v)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1ae8fa85b0cea3c12f73d9432cab64d50a">TableSetBgColor</link> (<link linkend="_imgui_8h_1a7f84e7096ba6fa76bbcd5d8fb990b59d">ImGuiTableBgTarget</link> target, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> color, int column_n=-1)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a0e2889956542527c4039b6b8bf5c2a38">Columns</link> (int <link linkend="_imgui__impl__opengl3__loader_8h_1a619bc20e8198de3bd3f3d7fc34de66b2">count</link>=1, const char *id=NULL, bool <link linkend="_imgui__impl__opengl3__loader_8h_1a04bf50a0ceff267d0040a99e545d74e9">border</link>=true)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a8f97746d6a9d59c8400c26fb7613a2ff">NextColumn</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> int <link linkend="_namespace_im_gui_1acc31f8eea4fcfb86edeb3ac12d82fc05">GetColumnIndex</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> float <link linkend="_namespace_im_gui_1a3d205d86dab5ca0763a92997283ac36e">GetColumnWidth</link> (int column_index=-1)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1af17222ec47aebb5ede00be7b52de9f5d">SetColumnWidth</link> (int column_index, float <link linkend="_imgui__impl__opengl3__loader_8h_1a6879d830f164725df67adeeabca3ea47">width</link>)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> float <link linkend="_namespace_im_gui_1a79c22e9c5c208b6c9534a273be71a9e6">GetColumnOffset</link> (int column_index=-1)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a8cc207211d6cf3f77b505e24aed4ebcc">SetColumnOffset</link> (int column_index, float offset_x)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> int <link linkend="_namespace_im_gui_1a3c2998ad9527948a4e4166c4f7db9ec9">GetColumnsCount</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1ab930db04eeff13f78ae76382c52db7eb">BeginTabBar</link> (const char *str_id, <link linkend="_imgui_8h_1a60ced774e9c7a4f73c41ef4feb91a30a">ImGuiTabBarFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a864b8ece257d4e30569f0349752ad928">EndTabBar</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a4cee1ccc9018a298cfff90a704bde8ca">BeginTabItem</link> (const char *label, bool *p_open=NULL, <link linkend="_imgui_8h_1aec9b231c0bca6ab9afc507ccfe60d872">ImGuiTabItemFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a42abffd6af88c1362535514925e1358b">EndTabItem</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a1dbc539ac5b49e9445c4573607e6d60d">TabItemButton</link> (const char *label, <link linkend="_imgui_8h_1aec9b231c0bca6ab9afc507ccfe60d872">ImGuiTabItemFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1aad849238bf7c65665ac6a8a6ffecef98">SetTabItemClosed</link> (const char *tab_or_docked_window_label)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> <link linkend="_namespace_im_gui_1aacc87878f9d14939bfbbaa2f719e910e">DockSpace</link> (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;<link linkend="_imgui__impl__opengl3__loader_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>=<link linkend="_struct_im_vec2">ImVec2</link>(0, 0), <link linkend="_imgui_8h_1ad2fc6cf2d0116e422921e4ffc1077c6f">ImGuiDockNodeFlags</link> flags=0, const <link linkend="_struct_im_gui_window_class">ImGuiWindowClass</link> *window_class=NULL)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> <link linkend="_namespace_im_gui_1add238564557f1af2f3de8d0ec02e4a1c">DockSpaceOverViewport</link> (const <link linkend="_struct_im_gui_viewport">ImGuiViewport</link> *viewport=NULL, <link linkend="_imgui_8h_1ad2fc6cf2d0116e422921e4ffc1077c6f">ImGuiDockNodeFlags</link> flags=0, const <link linkend="_struct_im_gui_window_class">ImGuiWindowClass</link> *window_class=NULL)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a7b4bed7db004d713de020e697c80f8b3">SetNextWindowDockID</link> (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> dock_id, <link linkend="_imgui_8h_1aef890d6ac872e12c5804d0b3e4f7f103">ImGuiCond</link> cond=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1aff657208718f7ade7a306c09d0af0bae">SetNextWindowClass</link> (const <link linkend="_struct_im_gui_window_class">ImGuiWindowClass</link> *window_class)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> <link linkend="_namespace_im_gui_1a8e3b8d78fcc9c9ed772a2b648aadab0c">GetWindowDockID</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1ac0e995f2c0c4b677ef08fdd4c468aed0">IsWindowDocked</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1ad206c49bc6306a56d915251fa5d9e388">LogToTTY</link> (int auto_open_depth=-1)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a8feab4b22519bc5eae9754b0ad545d81">LogToFile</link> (int auto_open_depth=-1, const char *filename=NULL)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a70e12f01ecb65747c9a70b73555b6ec1">LogToClipboard</link> (int auto_open_depth=-1)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a2ebcd048d1ca025fb972e1c2e920e3f3">LogFinish</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a7bd295da4be19bab98262c76fcaeb4fb">LogButtons</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1aa548475d8f771ab6524d73d900a41198">LogText</link> (const char *fmt,...) <link linkend="_imgui_8h_1a1251c2f9ddac0873dbad8181bd82c9f1">IM_FMTARGS</link>(1)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a98df9ecc95235a208c834945c71df3a0">LogTextV</link> (const char *fmt, va_list args) <link linkend="_imgui_8h_1a047693beb7f899f5deab1e20202016b3">IM_FMTLIST</link>(1)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1ac2609b0f034d3bcd8d70d26df8694eaa">BeginDragDropSource</link> (<link linkend="_imgui_8h_1a4e54f95ded29d2584125d116df22e430">ImGuiDragDropFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a45f9694c878e79127c63d20d8955e07f">SetDragDropPayload</link> (const char *<link linkend="_imgui__impl__opengl3__loader_8h_1a63267399cd2a2ee217572c11d2e54f07">type</link>, const <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *<link linkend="_imgui__impl__opengl3__loader_8h_1abd87654504355b4c1bb002dcb1d4d16a">data</link>, size_t sz, <link linkend="_imgui_8h_1aef890d6ac872e12c5804d0b3e4f7f103">ImGuiCond</link> cond=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a02f225fefff2a046038ed99ab20606da">EndDragDropSource</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1ac42384c3181406bbd0f3f4f77a73c7ed">BeginDragDropTarget</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> const <link linkend="_struct_im_gui_payload">ImGuiPayload</link> * <link linkend="_namespace_im_gui_1a5e0dac39e249bf50e2ae96dc4a97cb18">AcceptDragDropPayload</link> (const char *<link linkend="_imgui__impl__opengl3__loader_8h_1a63267399cd2a2ee217572c11d2e54f07">type</link>, <link linkend="_imgui_8h_1a4e54f95ded29d2584125d116df22e430">ImGuiDragDropFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1ae8313266214728f86c2cb7cb30a30e89">EndDragDropTarget</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> const <link linkend="_struct_im_gui_payload">ImGuiPayload</link> * <link linkend="_namespace_im_gui_1a1756b37d61154de489f1520179b4e294">GetDragDropPayload</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1ae90e9a26f01d0d45f6bf7ca720d170d1">BeginDisabled</link> (bool disabled=true)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a9e6088c6c690ddff1302b6e42b380733">EndDisabled</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a11c8bd8676e1281e15b24c9615b6904a">PushClipRect</link> (const <link linkend="_struct_im_vec2">ImVec2</link> &amp;clip_rect_min, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;clip_rect_max, bool intersect_with_current_clip_rect)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1aef1c8a6e5a3c70cb10d03d2a2a66dfd8">PopClipRect</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a3720a69496e9b8cf110a11dfe7d334e6">SetItemDefaultFocus</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1ae85e5fba7e88cea8bd3ba5b687c979f2">SetKeyboardFocusHere</link> (int <link linkend="_imgui__impl__opengl3__loader_8h_1ae1b92ae085ddef4b1cdca7d749339fb0">offset</link>=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1aeccccafb037bb9ab9128e5c518b585a3">SetNextItemAllowOverlap</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1ac9a400eff3a9561d95e80486c52a660b">IsItemHovered</link> (<link linkend="_imgui_8h_1a3a8f688665e5ea0bd9700e1251580a2c">ImGuiHoveredFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a2d8ac4569456a8003e4dddd39caf771c">IsItemActive</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1add3290865a67327258c3a32b695adb28">IsItemFocused</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a11ae401d73ed6b044ba46add5db54617">IsItemClicked</link> (<link linkend="_imgui_8h_1ac16f674bc3efe8e4459caca9bca6eb1e">ImGuiMouseButton</link> mouse_button=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a0e9273fc53bdf7ca39d59cdb657c3c2f">IsItemVisible</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a6508c0e1f28d1e7f9328a944b4f35ff7">IsItemEdited</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a574b7cecdeb707c429edc827c49983f5">IsItemActivated</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1ada3b1cb76907bb9e630b2482f52f0599">IsItemDeactivated</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a8bb4c0fc2b9d0e90249310bb4e822485">IsItemDeactivatedAfterEdit</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a2f52aab3ede3e1a4a130c88154e1560f">IsItemToggledOpen</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a0512146617bb55e24ebcfbe3ce6553d5">IsAnyItemHovered</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1acdc18199d50d26919312db5f9707b8dc">IsAnyItemActive</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a89514ca4c0a2b883c878736d92352656">IsAnyItemFocused</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> <link linkend="_namespace_im_gui_1a102bd745dcb69ab33637e25ceeabb444">GetItemID</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_struct_im_vec2">ImVec2</link> <link linkend="_namespace_im_gui_1a65b24b72ec0e8444c705cebf3e91f570">GetItemRectMin</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_struct_im_vec2">ImVec2</link> <link linkend="_namespace_im_gui_1a3d260209b8dc25a2c942e8cfd1ed0e51">GetItemRectMax</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_struct_im_vec2">ImVec2</link> <link linkend="_namespace_im_gui_1a3303d1c37041307e11fd46fc43b2274d">GetItemRectSize</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_struct_im_gui_viewport">ImGuiViewport</link> * <link linkend="_namespace_im_gui_1a7bf620af1d66ee7d7b06701894d23e60">GetMainViewport</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_struct_im_draw_list">ImDrawList</link> * <link linkend="_namespace_im_gui_1ab361971e8b198a11c6ece6b49cf03647">GetBackgroundDrawList</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_struct_im_draw_list">ImDrawList</link> * <link linkend="_namespace_im_gui_1a718d48e3636f9df63e4820d0fef34e78">GetForegroundDrawList</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_struct_im_draw_list">ImDrawList</link> * <link linkend="_namespace_im_gui_1ab9cfddd372e40f8cb35806d8ee2a23dc">GetBackgroundDrawList</link> (<link linkend="_struct_im_gui_viewport">ImGuiViewport</link> *viewport)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_struct_im_draw_list">ImDrawList</link> * <link linkend="_namespace_im_gui_1a07eee0014d66b8698d14b1635ea18f2d">GetForegroundDrawList</link> (<link linkend="_struct_im_gui_viewport">ImGuiViewport</link> *viewport)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a578ead6237b3ed05497ed361f18d9f97">IsRectVisible</link> (const <link linkend="_struct_im_vec2">ImVec2</link> &amp;<link linkend="_imgui__impl__opengl3__loader_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a5aca7e6939e07caaca489aa8c776fd81">IsRectVisible</link> (const <link linkend="_struct_im_vec2">ImVec2</link> &amp;rect_min, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;rect_max)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> double <link linkend="_namespace_im_gui_1a3f983cf463367c8fd3a3d5793639dc59">GetTime</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> int <link linkend="_namespace_im_gui_1a0180211f23fc10807dfc3d2f6e8681f9">GetFrameCount</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_struct_im_draw_list_shared_data">ImDrawListSharedData</link> * <link linkend="_namespace_im_gui_1a2a5a77bd5b6215e8cb47a8a457224a52">GetDrawListSharedData</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> const char * <link linkend="_namespace_im_gui_1a265d7614c4c0b92ba6dd43946a3293e0">GetStyleColorName</link> (<link linkend="_imgui_8h_1a1b0467ec582e731ae6292fef726fb5fe">ImGuiCol</link> idx)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a5ba1bf82e3ecdd09dcb6ad733bcf5726">SetStateStorage</link> (<link linkend="_struct_im_gui_storage">ImGuiStorage</link> *storage)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_struct_im_gui_storage">ImGuiStorage</link> * <link linkend="_namespace_im_gui_1aa2b8fa1a5320cd70f23a53d8fe604fb2">GetStateStorage</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_struct_im_vec2">ImVec2</link> <link linkend="_namespace_im_gui_1a848b9db6cc4a186751c0ecebcaadc33b">CalcTextSize</link> (const char *text, const char *text_end=NULL, bool hide_text_after_double_hash=false, float wrap_width=-1.0f)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_struct_im_vec4">ImVec4</link> <link linkend="_namespace_im_gui_1a74df648cad381b5ad979c3609b7f4b2a">ColorConvertU32ToFloat4</link> (<link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> in)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> <link linkend="_namespace_im_gui_1abe2691de0b1a71c774ab24cc91564a94">ColorConvertFloat4ToU32</link> (const <link linkend="_struct_im_vec4">ImVec4</link> &amp;in)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1aaed5ed34aaaa02b61cbb67598c0ad9ca">ColorConvertRGBtoHSV</link> (float r, float g, float b, float &amp;out_h, float &amp;out_s, float &amp;out_v)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a074427678b3e56378b7dcdefa4c8b5c7">ColorConvertHSVtoRGB</link> (float h, float s, float v, float &amp;out_r, float &amp;out_g, float &amp;out_b)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a82095f2501c1df5ccd1928a53edaad99">IsKeyDown</link> (<link linkend="_imgui_8h_1aa22ffe36b188427d712447ec465203d4">ImGuiKey</link> key)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a477c2ef31c9641b158d78879780bd108">IsKeyPressed</link> (<link linkend="_imgui_8h_1aa22ffe36b188427d712447ec465203d4">ImGuiKey</link> key, bool repeat=true)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1af37007f6f7296f056590b1ca54796f56">IsKeyReleased</link> (<link linkend="_imgui_8h_1aa22ffe36b188427d712447ec465203d4">ImGuiKey</link> key)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1ab3e095e7757d000686cfa2aff76534d2">IsKeyChordPressed</link> (<link linkend="_imgui_8h_1a0720c04fed27e0f01b3722a13c8a8762">ImGuiKeyChord</link> key_chord)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> int <link linkend="_namespace_im_gui_1a48359a9849c1cb2af8fb30c655cf8ff5">GetKeyPressedAmount</link> (<link linkend="_imgui_8h_1aa22ffe36b188427d712447ec465203d4">ImGuiKey</link> key, float repeat_delay, float rate)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> const char * <link linkend="_namespace_im_gui_1a1d631e0e344472fb2da1a53a6bf55448">GetKeyName</link> (<link linkend="_imgui_8h_1aa22ffe36b188427d712447ec465203d4">ImGuiKey</link> key)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1ac1b2639c15a22180748c792aff2a7e60">SetNextFrameWantCaptureKeyboard</link> (bool want_capture_keyboard)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1aed7dae248aa865bf06c1d60c0e809537">IsMouseDown</link> (<link linkend="_imgui_8h_1ac16f674bc3efe8e4459caca9bca6eb1e">ImGuiMouseButton</link> button)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a2d430db9485d0b3d86d51d5436225495">IsMouseClicked</link> (<link linkend="_imgui_8h_1ac16f674bc3efe8e4459caca9bca6eb1e">ImGuiMouseButton</link> button, bool repeat=false)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1ae53a0c1818d2804e3b1331f0c1777434">IsMouseReleased</link> (<link linkend="_imgui_8h_1ac16f674bc3efe8e4459caca9bca6eb1e">ImGuiMouseButton</link> button)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a2cc28f85bd97eecf708ce78c11761fb9">IsMouseDoubleClicked</link> (<link linkend="_imgui_8h_1ac16f674bc3efe8e4459caca9bca6eb1e">ImGuiMouseButton</link> button)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> int <link linkend="_namespace_im_gui_1afff5701c54fdd2c5653ed43e6b5cde1e">GetMouseClickedCount</link> (<link linkend="_imgui_8h_1ac16f674bc3efe8e4459caca9bca6eb1e">ImGuiMouseButton</link> button)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1ae0b8ea0e06c457316d6aed6c5b2a1c25">IsMouseHoveringRect</link> (const <link linkend="_struct_im_vec2">ImVec2</link> &amp;r_min, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;r_max, bool clip=true)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a22d482190e8f549d5904aded1c6f7778">IsMousePosValid</link> (const <link linkend="_struct_im_vec2">ImVec2</link> *mouse_pos=NULL)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a0ce3f28b6b09f031e12e7a81708c043a">IsAnyMouseDown</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_struct_im_vec2">ImVec2</link> <link linkend="_namespace_im_gui_1abf11873349874c5d302861583c00d451">GetMousePos</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_struct_im_vec2">ImVec2</link> <link linkend="_namespace_im_gui_1ac1ba5d7b76e11d47660b32dc851afd2f">GetMousePosOnOpeningCurrentPopup</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a0fc57160c83b9f2707fa762f8ac2f8ba">IsMouseDragging</link> (<link linkend="_imgui_8h_1ac16f674bc3efe8e4459caca9bca6eb1e">ImGuiMouseButton</link> button, float lock_threshold=-1.0f)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_struct_im_vec2">ImVec2</link> <link linkend="_namespace_im_gui_1a242fd32eb24c2070977b0a86a720af6b">GetMouseDragDelta</link> (<link linkend="_imgui_8h_1ac16f674bc3efe8e4459caca9bca6eb1e">ImGuiMouseButton</link> button=0, float lock_threshold=-1.0f)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a771c37d1bb71fb7f30632721618633b9">ResetMouseDragDelta</link> (<link linkend="_imgui_8h_1ac16f674bc3efe8e4459caca9bca6eb1e">ImGuiMouseButton</link> button=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_imgui_8h_1a9223d6c82bb5d12c2eab5f829ca520ef">ImGuiMouseCursor</link> <link linkend="_namespace_im_gui_1a3b955bb840a2411f7c19ac6687d57392">GetMouseCursor</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1aca3237fd4efa0af7fc6b4eff6494dfce">SetMouseCursor</link> (<link linkend="_imgui_8h_1a9223d6c82bb5d12c2eab5f829ca520ef">ImGuiMouseCursor</link> cursor_type)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1affc347668060a3dfbfae50247eaac7d2">SetNextFrameWantCaptureMouse</link> (bool want_capture_mouse)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> const char * <link linkend="_namespace_im_gui_1a11837daee819fd90e17d80ab1eef1f99">GetClipboardText</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1aa4824a1b351c063b4aff9b9f4fb5fd4d">SetClipboardText</link> (const char *text)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a4bf22fb84ba768fc18383af50e8c217f">LoadIniSettingsFromDisk</link> (const char *ini_filename)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a8e37b6a0b2feb6cd6ac61a4259392861">LoadIniSettingsFromMemory</link> (const char *ini_data, size_t ini_size=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1afa4985e7810be4e687bc4ff28cec8a4d">SaveIniSettingsToDisk</link> (const char *ini_filename)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> const char * <link linkend="_namespace_im_gui_1a27043a530e0e842e01c279dd4207f9eb">SaveIniSettingsToMemory</link> (size_t *out_ini_size=NULL)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a326f0badd138d1dea078a31b0e8dd685">DebugTextEncoding</link> (const char *text)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1afd4250e2c2f662451c9c4e9d5ab70562">DebugFlashStyleColor</link> (<link linkend="_imgui_8h_1a1b0467ec582e731ae6292fef726fb5fe">ImGuiCol</link> idx)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1abb29f1f359c62a224ad5320734035e05">DebugStartItemPicker</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a9fcc162a6de03ea6ad95457718b0683d">DebugCheckVersionAndDataLayout</link> (const char *version_str, size_t sz_io, size_t sz_style, size_t sz_vec2, size_t sz_vec4, size_t sz_drawvert, size_t sz_drawidx)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a7c7021b71b8682ba1a816cbca394fc94">SetAllocatorFunctions</link> (<link linkend="_imgui_8h_1a18581d9ce5ad374685c32a08d9c00659">ImGuiMemAllocFunc</link> alloc_func, <link linkend="_imgui_8h_1ad6abffbb2b01431575aad8400461d11f">ImGuiMemFreeFunc</link> free_func, <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *user_data=NULL)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a855f163c9a30e8af87aa9c56a3478b0e">GetAllocatorFunctions</link> (<link linkend="_imgui_8h_1a18581d9ce5ad374685c32a08d9c00659">ImGuiMemAllocFunc</link> *p_alloc_func, <link linkend="_imgui_8h_1ad6abffbb2b01431575aad8400461d11f">ImGuiMemFreeFunc</link> *p_free_func, <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> **p_user_data)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * <link linkend="_namespace_im_gui_1aed896913f2e140cd0ad7431060dba50b">MemAlloc</link> (size_t <link linkend="_imgui__impl__opengl3__loader_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a269ec695c6e722ec3da85dae37f0675d">MemFree</link> (<link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *ptr)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_struct_im_gui_platform_i_o">ImGuiPlatformIO</link> &amp; <link linkend="_namespace_im_gui_1a3edc2b6129cbf1e8d247c6d03c344065">GetPlatformIO</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1aec5bbce3200aa681dac6a1915ef07f60">UpdatePlatformWindows</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a6b071e16d5fd79c23459135ff562bef5">RenderPlatformWindowsDefault</link> (<link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *platform_render_arg=NULL, <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *renderer_render_arg=NULL)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1aec24353cab7c663fbb44f1e6d8b50ead">DestroyPlatformWindows</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_struct_im_gui_viewport">ImGuiViewport</link> * <link linkend="_namespace_im_gui_1a19f511dec79b1d152da3cd6667bb3856">FindViewportByID</link> (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_struct_im_gui_viewport">ImGuiViewport</link> * <link linkend="_namespace_im_gui_1a53bee8c14cf414a6df4177945ef8cec0">FindViewportByPlatformHandle</link> (<link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *platform_handle)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_imgui_8h_1aa22ffe36b188427d712447ec465203d4">ImGuiKey</link> <link linkend="_namespace_im_gui_1a03f5c2b43767af1947c9a9eea38a367d">GetKeyIndex</link> (<link linkend="_imgui_8h_1aa22ffe36b188427d712447ec465203d4">ImGuiKey</link> key)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1ac766894f35a2b0e421f665918b753b49">ListBox</link> (const char *label, int *current_item, bool(*old_callback)(<link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *user_data, int idx, const char **out_text), <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *user_data, int items_count, int height_in_items=-1)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1accd9f50f53a08e6bd0afbf54a1209572">Combo</link> (const char *label, int *current_item, bool(*old_callback)(<link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *user_data, int idx, const char **out_text), <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *user_data, int items_count, int popup_max_height_in_items=-1)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a3291356b06ebe5f771d60b334a831d4b">SetItemAllowOverlap</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1ac79ef64e8b9e1db73d8237f6a999da14">ImageButton</link> (<link linkend="_imgui_8h_1a364f4447ecbc4ca176145ccff9db6286">ImTextureID</link> user_texture_id, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;<link linkend="_imgui__impl__opengl3__loader_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;uv0=<link linkend="_struct_im_vec2">ImVec2</link>(0, 0), const <link linkend="_struct_im_vec2">ImVec2</link> &amp;uv1=<link linkend="_struct_im_vec2">ImVec2</link>(1, 1), int frame_padding=-1, const <link linkend="_struct_im_vec4">ImVec4</link> &amp;bg_col=<link linkend="_struct_im_vec4">ImVec4</link>(0, 0, 0, 0), const <link linkend="_struct_im_vec4">ImVec4</link> &amp;tint_col=<link linkend="_struct_im_vec4">ImVec4</link>(1, 1, 1, 1))</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1acab51ec2b39577845309f24535381038">ShowFontAtlas</link> (<link linkend="_struct_im_font_atlas">ImFontAtlas</link> *atlas)</para>
</listitem>
            <listitem><para><link linkend="_struct_im_gui_window">ImGuiWindow</link> * <link linkend="_namespace_im_gui_1a055af7d6b7b4ae977a9c3c25a98e0d2f">GetCurrentWindowRead</link> ()</para>
</listitem>
            <listitem><para><link linkend="_struct_im_gui_window">ImGuiWindow</link> * <link linkend="_namespace_im_gui_1ac452417b5004ca16a814a72cff153526">GetCurrentWindow</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_struct_im_gui_window">ImGuiWindow</link> * <link linkend="_namespace_im_gui_1a82204d8800dc3a072ddbcbd2aecc48ac">FindWindowByID</link> (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_struct_im_gui_window">ImGuiWindow</link> * <link linkend="_namespace_im_gui_1abca25f22c02e73d5eb2e9c72c4557813">FindWindowByName</link> (const char *<link linkend="_imgui__impl__opengl3__loader_8h_1a5c4947d4516dd7cfa3505ce3a648a4ef">name</link>)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a85d7262320ed7ce8e40863b99f8db4a3">UpdateWindowParentAndRootLinks</link> (<link linkend="_struct_im_gui_window">ImGuiWindow</link> *window, <link linkend="_imgui_8h_1a0b8e067ab4f7a818828c8d89e531addc">ImGuiWindowFlags</link> flags, <link linkend="_struct_im_gui_window">ImGuiWindow</link> *parent_window)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_struct_im_vec2">ImVec2</link> <link linkend="_namespace_im_gui_1aa306c009063e86091ed61d80d4d231f6">CalcWindowNextAutoFitSize</link> (<link linkend="_struct_im_gui_window">ImGuiWindow</link> *window)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a9ac223b9e17540da02c233d29914689d">IsWindowChildOf</link> (<link linkend="_struct_im_gui_window">ImGuiWindow</link> *window, <link linkend="_struct_im_gui_window">ImGuiWindow</link> *potential_parent, bool popup_hierarchy, bool dock_hierarchy)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a48de6990762aa67d7da5c3264b92d44f">IsWindowWithinBeginStackOf</link> (<link linkend="_struct_im_gui_window">ImGuiWindow</link> *window, <link linkend="_struct_im_gui_window">ImGuiWindow</link> *potential_parent)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1ac5dd091c08f9d923c8f849353fe359bf">IsWindowAbove</link> (<link linkend="_struct_im_gui_window">ImGuiWindow</link> *potential_above, <link linkend="_struct_im_gui_window">ImGuiWindow</link> *potential_below)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a6dfaa7187edcbc862be2edb2bbc987bb">IsWindowNavFocusable</link> (<link linkend="_struct_im_gui_window">ImGuiWindow</link> *window)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a77f1cca87a93a1411781d00a1b63ef45">SetWindowPos</link> (<link linkend="_struct_im_gui_window">ImGuiWindow</link> *window, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;pos, <link linkend="_imgui_8h_1aef890d6ac872e12c5804d0b3e4f7f103">ImGuiCond</link> cond=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a8a9e750e203a4e4dfac2abd5368f51cf">SetWindowSize</link> (<link linkend="_struct_im_gui_window">ImGuiWindow</link> *window, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;<link linkend="_imgui__impl__opengl3__loader_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>, <link linkend="_imgui_8h_1aef890d6ac872e12c5804d0b3e4f7f103">ImGuiCond</link> cond=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a728bb661ccd1b63fb5ee4d3a3e3d0b7e">SetWindowCollapsed</link> (<link linkend="_struct_im_gui_window">ImGuiWindow</link> *window, bool collapsed, <link linkend="_imgui_8h_1aef890d6ac872e12c5804d0b3e4f7f103">ImGuiCond</link> cond=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a83c0b24b73d8c9842de6ef882e394974">SetWindowHitTestHole</link> (<link linkend="_struct_im_gui_window">ImGuiWindow</link> *window, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;pos, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;<link linkend="_imgui__impl__opengl3__loader_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a2a1dfd9dfa155f17d07c75f54130228b">SetWindowHiddenAndSkipItemsForCurrentFrame</link> (<link linkend="_struct_im_gui_window">ImGuiWindow</link> *window)</para>
</listitem>
            <listitem><para><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a976dec79c6fdee8960d4bee4a30d9c9d">SetWindowParentWindowForFocusRoute</link> (<link linkend="_struct_im_gui_window">ImGuiWindow</link> *window, <link linkend="_struct_im_gui_window">ImGuiWindow</link> *parent_window)</para>
</listitem>
            <listitem><para><link linkend="_struct_im_rect">ImRect</link> <link linkend="_namespace_im_gui_1a06d8e9fae450c785dc8f61f6e03462a7">WindowRectAbsToRel</link> (<link linkend="_struct_im_gui_window">ImGuiWindow</link> *window, const <link linkend="_struct_im_rect">ImRect</link> &amp;r)</para>
</listitem>
            <listitem><para><link linkend="_struct_im_rect">ImRect</link> <link linkend="_namespace_im_gui_1a10d8f47027c5bea2da6d5792ada70a7f">WindowRectRelToAbs</link> (<link linkend="_struct_im_gui_window">ImGuiWindow</link> *window, const <link linkend="_struct_im_rect">ImRect</link> &amp;r)</para>
</listitem>
            <listitem><para><link linkend="_struct_im_vec2">ImVec2</link> <link linkend="_namespace_im_gui_1a7e0c722c925ab942261618abd18b1dc9">WindowPosRelToAbs</link> (<link linkend="_struct_im_gui_window">ImGuiWindow</link> *window, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;p)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a27aa6f2f3aa11778c6d023b1b223f262">FocusWindow</link> (<link linkend="_struct_im_gui_window">ImGuiWindow</link> *window, <link linkend="_imgui__internal_8h_1a980fa6fddcd4eef108d84d0e22b571a2">ImGuiFocusRequestFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1aa97e87e96c05eb3e91aa96fa68b13a2a">FocusTopMostWindowUnderOne</link> (<link linkend="_struct_im_gui_window">ImGuiWindow</link> *under_this_window, <link linkend="_struct_im_gui_window">ImGuiWindow</link> *ignore_window, <link linkend="_struct_im_gui_viewport">ImGuiViewport</link> *filter_viewport, <link linkend="_imgui__internal_8h_1a980fa6fddcd4eef108d84d0e22b571a2">ImGuiFocusRequestFlags</link> flags)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1affe95a2dc969f0d15fbd4b588c94ac1a">BringWindowToFocusFront</link> (<link linkend="_struct_im_gui_window">ImGuiWindow</link> *window)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a1f7b95f36d03751c928af7b1b745e959">BringWindowToDisplayFront</link> (<link linkend="_struct_im_gui_window">ImGuiWindow</link> *window)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a34d2363f631f1df5ab1a2a131ab98fa7">BringWindowToDisplayBack</link> (<link linkend="_struct_im_gui_window">ImGuiWindow</link> *window)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a8cae2f7a08f820a8d5349d1964603b20">BringWindowToDisplayBehind</link> (<link linkend="_struct_im_gui_window">ImGuiWindow</link> *window, <link linkend="_struct_im_gui_window">ImGuiWindow</link> *above_window)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> int <link linkend="_namespace_im_gui_1acc8dfbe9f52370fe2b95f6c948ba113e">FindWindowDisplayIndex</link> (<link linkend="_struct_im_gui_window">ImGuiWindow</link> *window)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_struct_im_gui_window">ImGuiWindow</link> * <link linkend="_namespace_im_gui_1acbee71305d643afa7020759bc97feaf2">FindBottomMostVisibleWindowWithinBeginStack</link> (<link linkend="_struct_im_gui_window">ImGuiWindow</link> *window)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a4f83c0a884e07247a00700d3dd3d01e3">SetCurrentFont</link> (<link linkend="_struct_im_font">ImFont</link> *font)</para>
</listitem>
            <listitem><para><link linkend="_struct_im_font">ImFont</link> * <link linkend="_namespace_im_gui_1a8344798d82c6baf9d94f81e445609eb2">GetDefaultFont</link> ()</para>
</listitem>
            <listitem><para><link linkend="_struct_im_draw_list">ImDrawList</link> * <link linkend="_namespace_im_gui_1a9aa9a370e4d66959398a0833db4a7508">GetForegroundDrawList</link> (<link linkend="_struct_im_gui_window">ImGuiWindow</link> *window)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a0074bb825de97c5602d9d9bb2e4d49d4">AddDrawListToDrawDataEx</link> (<link linkend="_struct_im_draw_data">ImDrawData</link> *draw_data, <link linkend="_struct_im_vector">ImVector</link>&lt; <link linkend="_struct_im_draw_list">ImDrawList</link> * &gt; *out_list, <link linkend="_struct_im_draw_list">ImDrawList</link> *draw_list)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a1a611da38fae18a3d1dafcb3228259da">Initialize</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1aeba34069558d4fbcf734a9c92ce3b773">Shutdown</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1aafed9b47752723162308368c01eeffad">UpdateInputEvents</link> (bool trickle_fast_inputs)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a8156f9d63c3184d40e7e303be175b5fb">UpdateHoveredWindowAndCaptureFlags</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1afd03199380411a711c74893434d91258">StartMouseMovingWindow</link> (<link linkend="_struct_im_gui_window">ImGuiWindow</link> *window)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1aa2e0aae7c6deb71ddb9086e9a03adbe7">StartMouseMovingWindowOrNode</link> (<link linkend="_struct_im_gui_window">ImGuiWindow</link> *window, <link linkend="_struct_im_gui_dock_node">ImGuiDockNode</link> *node, bool undock)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a3c60e468d73a0ccd52628f0c82b42fe8">UpdateMouseMovingWindowNewFrame</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a6f56217f28aff3a7cea846e6f44eebff">UpdateMouseMovingWindowEndFrame</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> <link linkend="_namespace_im_gui_1a1e7bb4d83fee6646718773e5746e53ad">AddContextHook</link> (<link linkend="_struct_im_gui_context">ImGuiContext</link> *context, const <link linkend="_struct_im_gui_context_hook">ImGuiContextHook</link> *hook)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1aacced9333540086ce71b1bdc024b6f7d">RemoveContextHook</link> (<link linkend="_struct_im_gui_context">ImGuiContext</link> *context, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> hook_to_remove)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a61ced7f0dd38c604e895400a2e5eeeb2">CallContextHooks</link> (<link linkend="_struct_im_gui_context">ImGuiContext</link> *context, <link linkend="_imgui__internal_8h_1a00ee5484f4006a8b98ed323d1dc37944">ImGuiContextHookType</link> <link linkend="_imgui__impl__opengl3__loader_8h_1a63267399cd2a2ee217572c11d2e54f07">type</link>)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1ac823fa647f6e56e15b06b47f09b33665">TranslateWindowsInViewport</link> (<link linkend="_struct_im_gui_viewport_p">ImGuiViewportP</link> *viewport, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;old_pos, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;new_pos)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a66515f977d52977fb7bf0dc9e9146e73">ScaleWindowsInViewport</link> (<link linkend="_struct_im_gui_viewport_p">ImGuiViewportP</link> *viewport, float scale)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1acea326a9a642943f5f8f2f74fd8fb0e0">DestroyPlatformWindow</link> (<link linkend="_struct_im_gui_viewport_p">ImGuiViewportP</link> *viewport)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1ada7b6ffaa06eb1ef3422766fecce6866">SetWindowViewport</link> (<link linkend="_struct_im_gui_window">ImGuiWindow</link> *window, <link linkend="_struct_im_gui_viewport_p">ImGuiViewportP</link> *viewport)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a518a36249ab67227a13fd01a4236cbe1">SetCurrentViewport</link> (<link linkend="_struct_im_gui_window">ImGuiWindow</link> *window, <link linkend="_struct_im_gui_viewport_p">ImGuiViewportP</link> *viewport)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> const <link linkend="_struct_im_gui_platform_monitor">ImGuiPlatformMonitor</link> * <link linkend="_namespace_im_gui_1a2f6bbca8b37a24999b5d04caa77ea6fd">GetViewportPlatformMonitor</link> (<link linkend="_struct_im_gui_viewport">ImGuiViewport</link> *viewport)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_struct_im_gui_viewport_p">ImGuiViewportP</link> * <link linkend="_namespace_im_gui_1a6fe97772f8b2ccad57157b5e35dc5ddd">FindHoveredViewportFromPlatformWindowStack</link> (const <link linkend="_struct_im_vec2">ImVec2</link> &amp;mouse_platform_pos)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1aee9b660c1d6786c00fc47c71c66eb1eb">MarkIniSettingsDirty</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a6b682344c53a8fc93b08b833021a49ee">MarkIniSettingsDirty</link> (<link linkend="_struct_im_gui_window">ImGuiWindow</link> *window)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a845668cf582865444dd93809f6878d49">ClearIniSettings</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1ade13c9d3114fb2fae235a29a6388495d">AddSettingsHandler</link> (const <link linkend="_struct_im_gui_settings_handler">ImGuiSettingsHandler</link> *handler)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a0f06e3a54023d9cbb778f4c7f559da3a">RemoveSettingsHandler</link> (const char *type_name)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_struct_im_gui_settings_handler">ImGuiSettingsHandler</link> * <link linkend="_namespace_im_gui_1ad9e15440c52f63aa96ef3b3938d566f8">FindSettingsHandler</link> (const char *type_name)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_struct_im_gui_window_settings">ImGuiWindowSettings</link> * <link linkend="_namespace_im_gui_1a2f325a08e833855b408f70a96d5fa064">CreateNewWindowSettings</link> (const char *<link linkend="_imgui__impl__opengl3__loader_8h_1a5c4947d4516dd7cfa3505ce3a648a4ef">name</link>)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_struct_im_gui_window_settings">ImGuiWindowSettings</link> * <link linkend="_namespace_im_gui_1a186a7c51e5dc70e54843c9e9415707e2">FindWindowSettingsByID</link> (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_struct_im_gui_window_settings">ImGuiWindowSettings</link> * <link linkend="_namespace_im_gui_1aa3791d9fe372fb96ae9672c88070385a">FindWindowSettingsByWindow</link> (<link linkend="_struct_im_gui_window">ImGuiWindow</link> *window)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1ac5eec1531ae03a6dc4a90514e1c1afd6">ClearWindowSettings</link> (const char *<link linkend="_imgui__impl__opengl3__loader_8h_1a5c4947d4516dd7cfa3505ce3a648a4ef">name</link>)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a676850197b862c70a447880ae5087895">LocalizeRegisterEntries</link> (const <link linkend="_struct_im_gui_loc_entry">ImGuiLocEntry</link> *entries, int <link linkend="_imgui__impl__opengl3__loader_8h_1a619bc20e8198de3bd3f3d7fc34de66b2">count</link>)</para>
</listitem>
            <listitem><para>const char * <link linkend="_namespace_im_gui_1a0560d8edbeb9985eda5334d2f01a6fad">LocalizeGetMsg</link> (<link linkend="_imgui__internal_8h_1a406a60adaf5a5b3938cb0d755b76502c">ImGuiLocKey</link> key)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a07804fd7663a2358ba4a8f58fd5f8ebc">SetScrollX</link> (<link linkend="_struct_im_gui_window">ImGuiWindow</link> *window, float scroll_x)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a784db31a3a0808cb730fd50d4610b2f3">SetScrollY</link> (<link linkend="_struct_im_gui_window">ImGuiWindow</link> *window, float scroll_y)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a6f14aca8066daf670dc2445c5390ecc4">SetScrollFromPosX</link> (<link linkend="_struct_im_gui_window">ImGuiWindow</link> *window, float local_x, float center_x_ratio)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1abf8364b7d1fe7c512e140ba16ba87c5c">SetScrollFromPosY</link> (<link linkend="_struct_im_gui_window">ImGuiWindow</link> *window, float local_y, float center_y_ratio)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1ab8548752fba9a4fb91a10574e4857da2">ScrollToItem</link> (<link linkend="_imgui__internal_8h_1a3c23ec9366e4bede0fedb065a79dcbc1">ImGuiScrollFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a980dbb73c1e2a1c349b99ab56bca06d9">ScrollToRect</link> (<link linkend="_struct_im_gui_window">ImGuiWindow</link> *window, const <link linkend="_struct_im_rect">ImRect</link> &amp;rect, <link linkend="_imgui__internal_8h_1a3c23ec9366e4bede0fedb065a79dcbc1">ImGuiScrollFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_struct_im_vec2">ImVec2</link> <link linkend="_namespace_im_gui_1a0c9e3a1d81ef0a0c530311beb1d88f7f">ScrollToRectEx</link> (<link linkend="_struct_im_gui_window">ImGuiWindow</link> *window, const <link linkend="_struct_im_rect">ImRect</link> &amp;rect, <link linkend="_imgui__internal_8h_1a3c23ec9366e4bede0fedb065a79dcbc1">ImGuiScrollFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1aebce8a3f6952e9c4520bab4201752ddc">ScrollToBringRectIntoView</link> (<link linkend="_struct_im_gui_window">ImGuiWindow</link> *window, const <link linkend="_struct_im_rect">ImRect</link> &amp;rect)</para>
</listitem>
            <listitem><para><link linkend="_imgui__internal_8h_1a86b8f9e2fd4084fb2112f003070b53fa">ImGuiItemStatusFlags</link> <link linkend="_namespace_im_gui_1a8e43b6bdd1da0ef409a6fc192f448172">GetItemStatusFlags</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui__internal_8h_1abcf9eafab4557e911b2c0d8fe2feeb38">ImGuiItemFlags</link> <link linkend="_namespace_im_gui_1a3c12564b5647365867a57b665a944479">GetItemFlags</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> <link linkend="_namespace_im_gui_1a2577aabfddbb8c092a014cbdcc333204">GetActiveID</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> <link linkend="_namespace_im_gui_1a2657245e3c14385d8caf03e06a8b76aa">GetFocusID</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a27b8ace13a8c421ee8405f0cbebe4ead">SetActiveID</link> (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id, <link linkend="_struct_im_gui_window">ImGuiWindow</link> *window)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a8ad578d7141486ff12b59b0c251234e6">SetFocusID</link> (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id, <link linkend="_struct_im_gui_window">ImGuiWindow</link> *window)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a17ff60ad1e2669130ac38a04d16eb354">ClearActiveID</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> <link linkend="_namespace_im_gui_1ad57aba42e0eb99a7302a614ddbc363c9">GetHoveredID</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1aba1f0c75d6f98702e6b02eb1bc30d915">SetHoveredID</link> (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a85a245c78a9f7c351636bdad6e60c488">KeepAliveID</link> (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a83036681a36fbee2d35b5b57a1ef72e6">MarkItemEdited</link> (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1acff64eb876d279cfe1cc6129ccd19930">PushOverrideID</link> (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> <link linkend="_namespace_im_gui_1ab3bf101308fe641abc549bda537158f5">GetIDWithSeed</link> (const char *str_id_begin, const char *str_id_end, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> seed)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> <link linkend="_namespace_im_gui_1a09e57c148b2877276f130e5279d45303">GetIDWithSeed</link> (int n, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> seed)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1aeeb1ec6ae6548173dbf813e7df538c48">ItemSize</link> (const <link linkend="_struct_im_vec2">ImVec2</link> &amp;<link linkend="_imgui__impl__opengl3__loader_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>, float text_baseline_y=-1.0f)</para>
</listitem>
            <listitem><para><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a1781907647306552d752c21d1ec15d4d">ItemSize</link> (const <link linkend="_struct_im_rect">ImRect</link> &amp;bb, float text_baseline_y=-1.0f)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a5de8ecd4c80efdca1af7329a2a48121c">ItemAdd</link> (const <link linkend="_struct_im_rect">ImRect</link> &amp;bb, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id, const <link linkend="_struct_im_rect">ImRect</link> *nav_bb=NULL, <link linkend="_imgui__internal_8h_1abcf9eafab4557e911b2c0d8fe2feeb38">ImGuiItemFlags</link> extra_flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a1d7304e335dbe35c4d97b67854111ed2">ItemHoverable</link> (const <link linkend="_struct_im_rect">ImRect</link> &amp;bb, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id, <link linkend="_imgui__internal_8h_1abcf9eafab4557e911b2c0d8fe2feeb38">ImGuiItemFlags</link> item_flags)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1ab3095c274afa3c3d73e1d5cae190f469">IsWindowContentHoverable</link> (<link linkend="_struct_im_gui_window">ImGuiWindow</link> *window, <link linkend="_imgui_8h_1a3a8f688665e5ea0bd9700e1251580a2c">ImGuiHoveredFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a7c21c85f5c95aa4ce6c2bd28bb980d44">IsClippedEx</link> (const <link linkend="_struct_im_rect">ImRect</link> &amp;bb, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a06a6c26188e778755bb9aa83f2726533">SetLastItemData</link> (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> item_id, <link linkend="_imgui__internal_8h_1abcf9eafab4557e911b2c0d8fe2feeb38">ImGuiItemFlags</link> in_flags, <link linkend="_imgui__internal_8h_1a86b8f9e2fd4084fb2112f003070b53fa">ImGuiItemStatusFlags</link> status_flags, const <link linkend="_struct_im_rect">ImRect</link> &amp;item_rect)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_struct_im_vec2">ImVec2</link> <link linkend="_namespace_im_gui_1acaef0497f7982dd98bf215e50129cd9b">CalcItemSize</link> (<link linkend="_struct_im_vec2">ImVec2</link> <link linkend="_imgui__impl__opengl3__loader_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>, float default_w, float default_h)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> float <link linkend="_namespace_im_gui_1a66416151e58c34cd02973976de66e0e9">CalcWrapWidthForPos</link> (const <link linkend="_struct_im_vec2">ImVec2</link> &amp;pos, float wrap_pos_x)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a6ec35a6af1a0bbe454d79c2c63b030cc">PushMultiItemsWidths</link> (int components, float width_full)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a876531f43e47df35da37472b0923e11d">IsItemToggledSelection</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_struct_im_vec2">ImVec2</link> <link linkend="_namespace_im_gui_1adc4d9b0d735ffae1f1598c4df038024c">GetContentRegionMaxAbs</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1acb224619be75abaf226282bbdf40f92f">ShrinkWidths</link> (<link linkend="_struct_im_gui_shrink_width_item">ImGuiShrinkWidthItem</link> *items, int <link linkend="_imgui__impl__opengl3__loader_8h_1a619bc20e8198de3bd3f3d7fc34de66b2">count</link>, float width_excess)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1ac7301f6378333f6d17f47823eed9e00a">PushItemFlag</link> (<link linkend="_imgui__internal_8h_1abcf9eafab4557e911b2c0d8fe2feeb38">ImGuiItemFlags</link> option, bool enabled)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1aa93281155e1dd23715dbd384e91edc6b">PopItemFlag</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> const <link linkend="_struct_im_gui_data_var_info">ImGuiDataVarInfo</link> * <link linkend="_namespace_im_gui_1a2eab9d3e74a2b3acd2443a6ec815fa41">GetStyleVarInfo</link> (<link linkend="_imgui_8h_1ac919acabce24faae590e295b424874ca">ImGuiStyleVar</link> idx)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a8d053d2fd46539c5ca83550845e4cecd">LogBegin</link> (<link linkend="_imgui__internal_8h_1ac65915203eef19cd87f2ff1cde435c1e">ImGuiLogType</link> <link linkend="_imgui__impl__opengl3__loader_8h_1a63267399cd2a2ee217572c11d2e54f07">type</link>, int auto_open_depth)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a4dccd4d729cef38c0c542d433dc09480">LogToBuffer</link> (int auto_open_depth=-1)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a7a0d62e33f2236ec2f789e24ca0fb56f">LogRenderedText</link> (const <link linkend="_struct_im_vec2">ImVec2</link> *ref_pos, const char *text, const char *text_end=NULL)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a66bc1e61bff5f2170bcd2d7d071eaa22">LogSetNextTextDecoration</link> (const char *prefix, const char *suffix)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1ac36ecce0443f0b45a48484d85f653ae2">BeginChildEx</link> (const char *<link linkend="_imgui__impl__opengl3__loader_8h_1a5c4947d4516dd7cfa3505ce3a648a4ef">name</link>, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;size_arg, <link linkend="_imgui_8h_1aa08bedfb80be3701d8c8d7b218c5a5d0">ImGuiChildFlags</link> child_flags, <link linkend="_imgui_8h_1a0b8e067ab4f7a818828c8d89e531addc">ImGuiWindowFlags</link> window_flags)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1ac1570338b44e1f1311055db7ae41c47b">OpenPopupEx</link> (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id, <link linkend="_imgui_8h_1af06c83fd0d1f3442139f0a5459b5a18a">ImGuiPopupFlags</link> popup_flags=<link linkend="_imgui_8h_1a555744cd1c43214047697439a08a086eafa4c839530050d037b6825b7d3e00d5f">ImGuiPopupFlags_None</link>)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a0be705dc533a62387dc39ec5c276d2a0">ClosePopupToLevel</link> (int remaining, bool restore_focus_to_window_under_popup)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a0076b153c697cb85e263fcbd59340bce">ClosePopupsOverWindow</link> (<link linkend="_struct_im_gui_window">ImGuiWindow</link> *ref_window, bool restore_focus_to_window_under_popup)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a6321db9d0281af83216ec69f777f63bd">ClosePopupsExceptModals</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1ad6bbd52db52d44eb7e96b882d7ae2c17">IsPopupOpen</link> (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id, <link linkend="_imgui_8h_1af06c83fd0d1f3442139f0a5459b5a18a">ImGuiPopupFlags</link> popup_flags)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a89da3a22300e8293257b6cfdf1b83b7a">BeginPopupEx</link> (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id, <link linkend="_imgui_8h_1a0b8e067ab4f7a818828c8d89e531addc">ImGuiWindowFlags</link> extra_flags)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a18b17a0b20c3f2a16068b84210cfded4">BeginTooltipEx</link> (<link linkend="_imgui__internal_8h_1ad3bdaebce9ed8c9ce2f572ac419ffb71">ImGuiTooltipFlags</link> tooltip_flags, <link linkend="_imgui_8h_1a0b8e067ab4f7a818828c8d89e531addc">ImGuiWindowFlags</link> extra_window_flags)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a2c44a13b5e210dbfc7de98024c25db8e">BeginTooltipHidden</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_struct_im_rect">ImRect</link> <link linkend="_namespace_im_gui_1a7204f5be9c8656e604ab88aa9158513c">GetPopupAllowedExtentRect</link> (<link linkend="_struct_im_gui_window">ImGuiWindow</link> *window)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_struct_im_gui_window">ImGuiWindow</link> * <link linkend="_namespace_im_gui_1a6b905269b079f5e07755db52cc6e52df">GetTopMostPopupModal</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_struct_im_gui_window">ImGuiWindow</link> * <link linkend="_namespace_im_gui_1aa7d414ea51c3150247c49902b292886c">GetTopMostAndVisiblePopupModal</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_struct_im_gui_window">ImGuiWindow</link> * <link linkend="_namespace_im_gui_1a196705a4195b41a57470ef6553cb440c">FindBlockingModal</link> (<link linkend="_struct_im_gui_window">ImGuiWindow</link> *window)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_struct_im_vec2">ImVec2</link> <link linkend="_namespace_im_gui_1a310ff87cbe678e2c632bf1f5577a7fbd">FindBestWindowPosForPopup</link> (<link linkend="_struct_im_gui_window">ImGuiWindow</link> *window)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_struct_im_vec2">ImVec2</link> <link linkend="_namespace_im_gui_1ab4a820eead6cd418d7be66e142bf3478">FindBestWindowPosForPopupEx</link> (const <link linkend="_struct_im_vec2">ImVec2</link> &amp;ref_pos, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;<link linkend="_imgui__impl__opengl3__loader_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>, <link linkend="_imgui_8h_1a874086389bc27cc9647118d22a806403">ImGuiDir</link> *last_dir, const <link linkend="_struct_im_rect">ImRect</link> &amp;r_outer, const <link linkend="_struct_im_rect">ImRect</link> &amp;r_avoid, <link linkend="_imgui__internal_8h_1a9c122103feadc7b225fc21698ff0f4d8">ImGuiPopupPositionPolicy</link> policy)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a4216382dd5ad6c17e183f9f894db2e15">BeginViewportSideBar</link> (const char *<link linkend="_imgui__impl__opengl3__loader_8h_1a5c4947d4516dd7cfa3505ce3a648a4ef">name</link>, <link linkend="_struct_im_gui_viewport">ImGuiViewport</link> *viewport, <link linkend="_imgui_8h_1a874086389bc27cc9647118d22a806403">ImGuiDir</link> dir, float <link linkend="_imgui__impl__opengl3__loader_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>, <link linkend="_imgui_8h_1a0b8e067ab4f7a818828c8d89e531addc">ImGuiWindowFlags</link> window_flags)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a8dc671f87ed281b6445ce6ae4ab25183">BeginMenuEx</link> (const char *label, const char *icon, bool enabled=true)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1ab5e6e4c78805615fb4d26d4918031f9c">MenuItemEx</link> (const char *label, const char *icon, const char *shortcut=NULL, bool selected=false, bool enabled=true)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a6ecb51142fcb72cd19ff002c3a7d8e25">BeginComboPopup</link> (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> popup_id, const <link linkend="_struct_im_rect">ImRect</link> &amp;bb, <link linkend="_imgui_8h_1aae31d1cfbcc55ae20b4122a7149d435e">ImGuiComboFlags</link> flags)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1af01e0208ad7266965d3812a5198411f8">BeginComboPreview</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1aff0228bbaf4d5a217944e00eb56f3714">EndComboPreview</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1ae46a79d836c4b223c7030ea432e3ec15">NavInitWindow</link> (<link linkend="_struct_im_gui_window">ImGuiWindow</link> *window, bool force_reinit)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a51e560cdb17a961810d557df80a4eaaa">NavInitRequestApplyResult</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a3fab98556d11690efd4f7f2fde94968e">NavMoveRequestButNoResultYet</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1aaab3763774b822dca0070fa76924d3ef">NavMoveRequestSubmit</link> (<link linkend="_imgui_8h_1a874086389bc27cc9647118d22a806403">ImGuiDir</link> move_dir, <link linkend="_imgui_8h_1a874086389bc27cc9647118d22a806403">ImGuiDir</link> clip_dir, <link linkend="_imgui__internal_8h_1aff7a453b89555bb074f2fe46a159ac25">ImGuiNavMoveFlags</link> move_flags, <link linkend="_imgui__internal_8h_1a3c23ec9366e4bede0fedb065a79dcbc1">ImGuiScrollFlags</link> scroll_flags)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a25bbd21bce9d49b94168d5b5773558c3">NavMoveRequestForward</link> (<link linkend="_imgui_8h_1a874086389bc27cc9647118d22a806403">ImGuiDir</link> move_dir, <link linkend="_imgui_8h_1a874086389bc27cc9647118d22a806403">ImGuiDir</link> clip_dir, <link linkend="_imgui__internal_8h_1aff7a453b89555bb074f2fe46a159ac25">ImGuiNavMoveFlags</link> move_flags, <link linkend="_imgui__internal_8h_1a3c23ec9366e4bede0fedb065a79dcbc1">ImGuiScrollFlags</link> scroll_flags)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1ad71eb039682bb8e3bb950c67eeec4ed8">NavMoveRequestResolveWithLastItem</link> (<link linkend="_struct_im_gui_nav_item_data">ImGuiNavItemData</link> *<link linkend="_imgui__impl__opengl3__loader_8h_1aa7f56a70231ed8bc64f97aa7c37fcb19">result</link>)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a9ebf95a721cb807d9ee19724f73ed29f">NavMoveRequestResolveWithPastTreeNode</link> (<link linkend="_struct_im_gui_nav_item_data">ImGuiNavItemData</link> *<link linkend="_imgui__impl__opengl3__loader_8h_1aa7f56a70231ed8bc64f97aa7c37fcb19">result</link>, <link linkend="_struct_im_gui_nav_tree_node_data">ImGuiNavTreeNodeData</link> *tree_node_data)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a43326bb080d9fa80327ed81d864d8b8d">NavMoveRequestCancel</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a87c0b18dc173341304a700b096681c51">NavMoveRequestApplyResult</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a95a9a1a5411cccb918fc29a0b0d3f953">NavMoveRequestTryWrapping</link> (<link linkend="_struct_im_gui_window">ImGuiWindow</link> *window, <link linkend="_imgui__internal_8h_1aff7a453b89555bb074f2fe46a159ac25">ImGuiNavMoveFlags</link> move_flags)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a3ea169ace83f149ae2b8c1a6d0f6d457">NavHighlightActivated</link> (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a16348f6e2db5310142fff74eeb315929">NavClearPreferredPosForAxis</link> (<link linkend="_imgui__internal_8h_1a468e54d5ed387abfbf0d1fc1e33ab483">ImGuiAxis</link> axis)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1acb4f5942656f77bb97dfb607f934d90b">NavRestoreHighlightAfterMove</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a5c0c081852a520c006a0b084d0e8b0cb">NavUpdateCurrentWindowIsScrollPushableX</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1aa422c756f467e650d67b4fb1b74ff5a1">SetNavWindow</link> (<link linkend="_struct_im_gui_window">ImGuiWindow</link> *window)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a101d94ec7f8e0a219bbaee58558316eb">SetNavID</link> (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id, <link linkend="_imgui__internal_8h_1afb412215b8327dc2c6af2c19fdca64c6">ImGuiNavLayer</link> nav_layer, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> focus_scope_id, const <link linkend="_struct_im_rect">ImRect</link> &amp;rect_rel)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1ada2736a9b034b93ba877f46577bc5e8b">SetNavFocusScope</link> (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> focus_scope_id)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1ad2df2e91500b9ebd279b825684750bb5">FocusItem</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a155c653da8d562c00e7b4a9b7335c558">ActivateItemByID</link> (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id)</para>
</listitem>
            <listitem><para>bool <link linkend="_namespace_im_gui_1a1e6a2ce7696a25d0dd0cf318e3b48a33">IsNamedKey</link> (<link linkend="_imgui_8h_1aa22ffe36b188427d712447ec465203d4">ImGuiKey</link> key)</para>
</listitem>
            <listitem><para>bool <link linkend="_namespace_im_gui_1a7b5067083f1220902151fad9be98c59d">IsNamedKeyOrModKey</link> (<link linkend="_imgui_8h_1aa22ffe36b188427d712447ec465203d4">ImGuiKey</link> key)</para>
</listitem>
            <listitem><para>bool <link linkend="_namespace_im_gui_1a8737377cd9666008318a3fa66fa943c7">IsLegacyKey</link> (<link linkend="_imgui_8h_1aa22ffe36b188427d712447ec465203d4">ImGuiKey</link> key)</para>
</listitem>
            <listitem><para>bool <link linkend="_namespace_im_gui_1a21498048e9bc00052c395518ba96a6e4">IsKeyboardKey</link> (<link linkend="_imgui_8h_1aa22ffe36b188427d712447ec465203d4">ImGuiKey</link> key)</para>
</listitem>
            <listitem><para>bool <link linkend="_namespace_im_gui_1acbf72e4cb07d326caf3c9b2c29d543d6">IsGamepadKey</link> (<link linkend="_imgui_8h_1aa22ffe36b188427d712447ec465203d4">ImGuiKey</link> key)</para>
</listitem>
            <listitem><para>bool <link linkend="_namespace_im_gui_1a7da544966780a0000f0ad395d98ca63d">IsMouseKey</link> (<link linkend="_imgui_8h_1aa22ffe36b188427d712447ec465203d4">ImGuiKey</link> key)</para>
</listitem>
            <listitem><para>bool <link linkend="_namespace_im_gui_1ac8e09701fd3ff94f49df16ecd6526149">IsAliasKey</link> (<link linkend="_imgui_8h_1aa22ffe36b188427d712447ec465203d4">ImGuiKey</link> key)</para>
</listitem>
            <listitem><para>bool <link linkend="_namespace_im_gui_1a2012dba37c81d25081e47b446fbcd485">IsModKey</link> (<link linkend="_imgui_8h_1aa22ffe36b188427d712447ec465203d4">ImGuiKey</link> key)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a0720c04fed27e0f01b3722a13c8a8762">ImGuiKeyChord</link> <link linkend="_namespace_im_gui_1a5c726fca14508e1f8d644261dbe4b163">FixupKeyChord</link> (<link linkend="_struct_im_gui_context">ImGuiContext</link> *ctx, <link linkend="_imgui_8h_1a0720c04fed27e0f01b3722a13c8a8762">ImGuiKeyChord</link> key_chord)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1aa22ffe36b188427d712447ec465203d4">ImGuiKey</link> <link linkend="_namespace_im_gui_1a0284de01b5647e77a9733f0e0b0437b9">ConvertSingleModFlagToKey</link> (<link linkend="_struct_im_gui_context">ImGuiContext</link> *ctx, <link linkend="_imgui_8h_1aa22ffe36b188427d712447ec465203d4">ImGuiKey</link> key)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_struct_im_gui_key_data">ImGuiKeyData</link> * <link linkend="_namespace_im_gui_1a6d32d70d6beb45537b605508b78216c3">GetKeyData</link> (<link linkend="_struct_im_gui_context">ImGuiContext</link> *ctx, <link linkend="_imgui_8h_1aa22ffe36b188427d712447ec465203d4">ImGuiKey</link> key)</para>
</listitem>
            <listitem><para><link linkend="_struct_im_gui_key_data">ImGuiKeyData</link> * <link linkend="_namespace_im_gui_1aef423d33ae184977d70c75e42bcb0364">GetKeyData</link> (<link linkend="_imgui_8h_1aa22ffe36b188427d712447ec465203d4">ImGuiKey</link> key)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> const char * <link linkend="_namespace_im_gui_1a4711f04593c21dee2ecb1f736c4da981">GetKeyChordName</link> (<link linkend="_imgui_8h_1a0720c04fed27e0f01b3722a13c8a8762">ImGuiKeyChord</link> key_chord)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1aa22ffe36b188427d712447ec465203d4">ImGuiKey</link> <link linkend="_namespace_im_gui_1a25689086f813c9714c4bbd4e3d5e669c">MouseButtonToKey</link> (<link linkend="_imgui_8h_1ac16f674bc3efe8e4459caca9bca6eb1e">ImGuiMouseButton</link> button)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1ad1b3473eaad344022a022acfd45b0f5c">IsMouseDragPastThreshold</link> (<link linkend="_imgui_8h_1ac16f674bc3efe8e4459caca9bca6eb1e">ImGuiMouseButton</link> button, float lock_threshold=-1.0f)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_struct_im_vec2">ImVec2</link> <link linkend="_namespace_im_gui_1a7be7c8eb5bd517b2c7b361f1521b1137">GetKeyMagnitude2d</link> (<link linkend="_imgui_8h_1aa22ffe36b188427d712447ec465203d4">ImGuiKey</link> key_left, <link linkend="_imgui_8h_1aa22ffe36b188427d712447ec465203d4">ImGuiKey</link> key_right, <link linkend="_imgui_8h_1aa22ffe36b188427d712447ec465203d4">ImGuiKey</link> key_up, <link linkend="_imgui_8h_1aa22ffe36b188427d712447ec465203d4">ImGuiKey</link> key_down)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> float <link linkend="_namespace_im_gui_1ad1982b7e2585d1e5aa2bb17976a0bd5d">GetNavTweakPressedAmount</link> (<link linkend="_imgui__internal_8h_1a468e54d5ed387abfbf0d1fc1e33ab483">ImGuiAxis</link> axis)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> int <link linkend="_namespace_im_gui_1ab9804506fa0fe8823f63eadb3043916f">CalcTypematicRepeatAmount</link> (float t0, float t1, float repeat_delay, float repeat_rate)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a1cc0e048762c17bef27b0f403708cc0b">GetTypematicRepeatRate</link> (<link linkend="_imgui__internal_8h_1aa4211ddd58ae8523981eb953a1caf4b7">ImGuiInputFlags</link> flags, float *repeat_delay, float *repeat_rate)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1ae4b35762bf1316a466de15c1f1401853">TeleportMousePos</link> (const <link linkend="_struct_im_vec2">ImVec2</link> &amp;pos)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a5e5b2b1969b119d6932116f28fbd4d53">SetActiveIdUsingAllKeyboardKeys</link> ()</para>
</listitem>
            <listitem><para>bool <link linkend="_namespace_im_gui_1a900c43afe3b59d3844ca4c9ff27ef4f6">IsActiveIdUsingNavDir</link> (<link linkend="_imgui_8h_1a874086389bc27cc9647118d22a806403">ImGuiDir</link> dir)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> <link linkend="_namespace_im_gui_1a3976abb319f95d75fe9f6866f9956701">GetKeyOwner</link> (<link linkend="_imgui_8h_1aa22ffe36b188427d712447ec465203d4">ImGuiKey</link> key)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1ac415798dd69ab045cda84dd14a52c3ea">SetKeyOwner</link> (<link linkend="_imgui_8h_1aa22ffe36b188427d712447ec465203d4">ImGuiKey</link> key, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> owner_id, <link linkend="_imgui__internal_8h_1aa4211ddd58ae8523981eb953a1caf4b7">ImGuiInputFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1ae3060c877778bac84d69f68dabd200c8">SetKeyOwnersForKeyChord</link> (<link linkend="_imgui_8h_1a0720c04fed27e0f01b3722a13c8a8762">ImGuiKeyChord</link> key, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> owner_id, <link linkend="_imgui__internal_8h_1aa4211ddd58ae8523981eb953a1caf4b7">ImGuiInputFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a8776b8c5eabcc7f92f4abe9ce46454f0">SetItemKeyOwner</link> (<link linkend="_imgui_8h_1aa22ffe36b188427d712447ec465203d4">ImGuiKey</link> key, <link linkend="_imgui__internal_8h_1aa4211ddd58ae8523981eb953a1caf4b7">ImGuiInputFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1ad12c5be2f1c691e4e6656524248824fb">TestKeyOwner</link> (<link linkend="_imgui_8h_1aa22ffe36b188427d712447ec465203d4">ImGuiKey</link> key, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> owner_id)</para>
</listitem>
            <listitem><para><link linkend="_struct_im_gui_key_owner_data">ImGuiKeyOwnerData</link> * <link linkend="_namespace_im_gui_1a05ada04953ac91c563334fb0fe934e03">GetKeyOwnerData</link> (<link linkend="_struct_im_gui_context">ImGuiContext</link> *ctx, <link linkend="_imgui_8h_1aa22ffe36b188427d712447ec465203d4">ImGuiKey</link> key)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1ad217907a75adfff08f6dee35feeadaad">IsKeyDown</link> (<link linkend="_imgui_8h_1aa22ffe36b188427d712447ec465203d4">ImGuiKey</link> key, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> owner_id)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a34c2ae88871301f93a396113e8a46ac9">IsKeyPressed</link> (<link linkend="_imgui_8h_1aa22ffe36b188427d712447ec465203d4">ImGuiKey</link> key, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> owner_id, <link linkend="_imgui__internal_8h_1aa4211ddd58ae8523981eb953a1caf4b7">ImGuiInputFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a5b94b4c6c78d7a23d045df6a79ff072b">IsKeyReleased</link> (<link linkend="_imgui_8h_1aa22ffe36b188427d712447ec465203d4">ImGuiKey</link> key, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> owner_id)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a1b1bad6338785c6d1bc85c2730bd485f">IsMouseDown</link> (<link linkend="_imgui_8h_1ac16f674bc3efe8e4459caca9bca6eb1e">ImGuiMouseButton</link> button, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> owner_id)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a268f89a9233099f3de4e628c80863ccc">IsMouseClicked</link> (<link linkend="_imgui_8h_1ac16f674bc3efe8e4459caca9bca6eb1e">ImGuiMouseButton</link> button, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> owner_id, <link linkend="_imgui__internal_8h_1aa4211ddd58ae8523981eb953a1caf4b7">ImGuiInputFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1accd979a6c2ea9738134c30131d95c3b9">IsMouseReleased</link> (<link linkend="_imgui_8h_1ac16f674bc3efe8e4459caca9bca6eb1e">ImGuiMouseButton</link> button, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> owner_id)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1abe4aba05f5a4b4350736586eb1df6e22">IsMouseDoubleClicked</link> (<link linkend="_imgui_8h_1ac16f674bc3efe8e4459caca9bca6eb1e">ImGuiMouseButton</link> button, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> owner_id)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1ac927e43929d43408de2ce53b33411ef9">IsKeyChordPressed</link> (<link linkend="_imgui_8h_1a0720c04fed27e0f01b3722a13c8a8762">ImGuiKeyChord</link> key_chord, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> owner_id, <link linkend="_imgui__internal_8h_1aa4211ddd58ae8523981eb953a1caf4b7">ImGuiInputFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1aa201b41c13f4111fd0720631452331df">SetNextItemShortcut</link> (<link linkend="_imgui_8h_1a0720c04fed27e0f01b3722a13c8a8762">ImGuiKeyChord</link> key_chord)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a79fcd86b36bb86d9bd95c79013b0ad8d">Shortcut</link> (<link linkend="_imgui_8h_1a0720c04fed27e0f01b3722a13c8a8762">ImGuiKeyChord</link> key_chord, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> owner_id=0, <link linkend="_imgui__internal_8h_1aa4211ddd58ae8523981eb953a1caf4b7">ImGuiInputFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a5bfa26bcafad8fae4b4e21e1f0db47e3">SetShortcutRouting</link> (<link linkend="_imgui_8h_1a0720c04fed27e0f01b3722a13c8a8762">ImGuiKeyChord</link> key_chord, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> owner_id, <link linkend="_imgui__internal_8h_1aa4211ddd58ae8523981eb953a1caf4b7">ImGuiInputFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a2d00bcc9bae982fb89d07f2734f6ab36">TestShortcutRouting</link> (<link linkend="_imgui_8h_1a0720c04fed27e0f01b3722a13c8a8762">ImGuiKeyChord</link> key_chord, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> owner_id)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_struct_im_gui_key_routing_data">ImGuiKeyRoutingData</link> * <link linkend="_namespace_im_gui_1a44a24428cdecdfd7825d37e616e5af45">GetShortcutRoutingData</link> (<link linkend="_imgui_8h_1a0720c04fed27e0f01b3722a13c8a8762">ImGuiKeyChord</link> key_chord)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a3b7bcf876b64c28c4eb3868f79728499">DockContextInitialize</link> (<link linkend="_struct_im_gui_context">ImGuiContext</link> *ctx)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a64b653e9346bef8bb6639da54fa71dab">DockContextShutdown</link> (<link linkend="_struct_im_gui_context">ImGuiContext</link> *ctx)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1ada8fcfabcf71d5393827317f9d1d25d7">DockContextClearNodes</link> (<link linkend="_struct_im_gui_context">ImGuiContext</link> *ctx, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> root_id, bool clear_settings_refs)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a6789c5ed2a793129d51cb29ff9865c86">DockContextRebuildNodes</link> (<link linkend="_struct_im_gui_context">ImGuiContext</link> *ctx)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a7f7a9ea28b0557a655c27375eb941a56">DockContextNewFrameUpdateUndocking</link> (<link linkend="_struct_im_gui_context">ImGuiContext</link> *ctx)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a3fd836d2bd3163537d1c36607e93ed6d">DockContextNewFrameUpdateDocking</link> (<link linkend="_struct_im_gui_context">ImGuiContext</link> *ctx)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a255cc11c0b8c4764e86aa47dafff7e8f">DockContextEndFrame</link> (<link linkend="_struct_im_gui_context">ImGuiContext</link> *ctx)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> <link linkend="_namespace_im_gui_1ad16317022ea4095a886903d23e056fcb">DockContextGenNodeID</link> (<link linkend="_struct_im_gui_context">ImGuiContext</link> *ctx)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1aa4adf7f82592b6ec62d34f8150887aed">DockContextQueueDock</link> (<link linkend="_struct_im_gui_context">ImGuiContext</link> *ctx, <link linkend="_struct_im_gui_window">ImGuiWindow</link> *target, <link linkend="_struct_im_gui_dock_node">ImGuiDockNode</link> *target_node, <link linkend="_struct_im_gui_window">ImGuiWindow</link> *payload, <link linkend="_imgui_8h_1a874086389bc27cc9647118d22a806403">ImGuiDir</link> split_dir, float split_ratio, bool split_outer)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1ab69e2b00a8f62bbb626b5dbbb0ecaa46">DockContextQueueUndockWindow</link> (<link linkend="_struct_im_gui_context">ImGuiContext</link> *ctx, <link linkend="_struct_im_gui_window">ImGuiWindow</link> *window)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1af4b53ba05292d975cd4087ecbcbdb067">DockContextQueueUndockNode</link> (<link linkend="_struct_im_gui_context">ImGuiContext</link> *ctx, <link linkend="_struct_im_gui_dock_node">ImGuiDockNode</link> *node)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a8c76fa37695285817c21f42f1be1bcbb">DockContextProcessUndockWindow</link> (<link linkend="_struct_im_gui_context">ImGuiContext</link> *ctx, <link linkend="_struct_im_gui_window">ImGuiWindow</link> *window, bool clear_persistent_docking_ref=true)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1af62559b86338c4d3d1cd80fb90bd7bd6">DockContextProcessUndockNode</link> (<link linkend="_struct_im_gui_context">ImGuiContext</link> *ctx, <link linkend="_struct_im_gui_dock_node">ImGuiDockNode</link> *node)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1afada51f9cda829dc4f7b65ca6818d4cd">DockContextCalcDropPosForDocking</link> (<link linkend="_struct_im_gui_window">ImGuiWindow</link> *target, <link linkend="_struct_im_gui_dock_node">ImGuiDockNode</link> *target_node, <link linkend="_struct_im_gui_window">ImGuiWindow</link> *payload_window, <link linkend="_struct_im_gui_dock_node">ImGuiDockNode</link> *payload_node, <link linkend="_imgui_8h_1a874086389bc27cc9647118d22a806403">ImGuiDir</link> split_dir, bool split_outer, <link linkend="_struct_im_vec2">ImVec2</link> *out_pos)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_struct_im_gui_dock_node">ImGuiDockNode</link> * <link linkend="_namespace_im_gui_1a52be73f2abd2d0320469ba138f7c6d59">DockContextFindNodeByID</link> (<link linkend="_struct_im_gui_context">ImGuiContext</link> *ctx, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a46592395e19aa3aacfccc2222693bec8">DockNodeWindowMenuHandler_Default</link> (<link linkend="_struct_im_gui_context">ImGuiContext</link> *ctx, <link linkend="_struct_im_gui_dock_node">ImGuiDockNode</link> *node, <link linkend="_struct_im_gui_tab_bar">ImGuiTabBar</link> *tab_bar)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a5f0b65db489a18354649d09d4b9f55dc">DockNodeBeginAmendTabBar</link> (<link linkend="_struct_im_gui_dock_node">ImGuiDockNode</link> *node)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a966210ccd2b1d239003f3b5cda67362b">DockNodeEndAmendTabBar</link> ()</para>
</listitem>
            <listitem><para><link linkend="_struct_im_gui_dock_node">ImGuiDockNode</link> * <link linkend="_namespace_im_gui_1ab52284ace3da5320ccc6e29ea8781aaa">DockNodeGetRootNode</link> (<link linkend="_struct_im_gui_dock_node">ImGuiDockNode</link> *node)</para>
</listitem>
            <listitem><para>bool <link linkend="_namespace_im_gui_1a3af79db3155dc0c16602363e83210ff8">DockNodeIsInHierarchyOf</link> (<link linkend="_struct_im_gui_dock_node">ImGuiDockNode</link> *node, <link linkend="_struct_im_gui_dock_node">ImGuiDockNode</link> *parent)</para>
</listitem>
            <listitem><para>int <link linkend="_namespace_im_gui_1a65fa5ced49b0a2b865875627ad93a133">DockNodeGetDepth</link> (const <link linkend="_struct_im_gui_dock_node">ImGuiDockNode</link> *node)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> <link linkend="_namespace_im_gui_1a44aafb1039d43da2fa62296f94129ba6">DockNodeGetWindowMenuButtonId</link> (const <link linkend="_struct_im_gui_dock_node">ImGuiDockNode</link> *node)</para>
</listitem>
            <listitem><para><link linkend="_struct_im_gui_dock_node">ImGuiDockNode</link> * <link linkend="_namespace_im_gui_1a5b2691cb7df9c6ae351fb7a413e48e8c">GetWindowDockNode</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1ae1208499040a30ab6dfd30ca0d14fbc2">GetWindowAlwaysWantOwnTabBar</link> (<link linkend="_struct_im_gui_window">ImGuiWindow</link> *window)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a627bb85e7c0ab597360f63719bfb1e55">BeginDocked</link> (<link linkend="_struct_im_gui_window">ImGuiWindow</link> *window, bool *p_open)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a7a435b1565d4884e42a5ee5667f21a1f">BeginDockableDragDropSource</link> (<link linkend="_struct_im_gui_window">ImGuiWindow</link> *window)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a1725ff3becdb963b97c16d69d4c9f308">BeginDockableDragDropTarget</link> (<link linkend="_struct_im_gui_window">ImGuiWindow</link> *window)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1ac0bc045c65761e287ab5ef99833dcbbc">SetWindowDock</link> (<link linkend="_struct_im_gui_window">ImGuiWindow</link> *window, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> dock_id, <link linkend="_imgui_8h_1aef890d6ac872e12c5804d0b3e4f7f103">ImGuiCond</link> cond)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a8d41ed7aa329857c1834cace2eca60ea">DockBuilderDockWindow</link> (const char *window_name, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> node_id)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_struct_im_gui_dock_node">ImGuiDockNode</link> * <link linkend="_namespace_im_gui_1aad1b35952b7908f6c087df79d0e2a456">DockBuilderGetNode</link> (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> node_id)</para>
</listitem>
            <listitem><para><link linkend="_struct_im_gui_dock_node">ImGuiDockNode</link> * <link linkend="_namespace_im_gui_1acc707e98b3ac6d215576e384a3a0713c">DockBuilderGetCentralNode</link> (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> node_id)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> <link linkend="_namespace_im_gui_1a941b7d9d1f491f778796221031b5e439">DockBuilderAddNode</link> (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> node_id=0, <link linkend="_imgui_8h_1ad2fc6cf2d0116e422921e4ffc1077c6f">ImGuiDockNodeFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1af3346b709d35d9fc7787f8c3a5ce4b52">DockBuilderRemoveNode</link> (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> node_id)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1adccce6b807a47b502671cf1a8bc02f8b">DockBuilderRemoveNodeDockedWindows</link> (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> node_id, bool clear_settings_refs=true)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1ab7bb6828e2ad6934e71d786c44bd37d4">DockBuilderRemoveNodeChildNodes</link> (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> node_id)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1acc42b53112d9234a08ed00cb8e67ed7a">DockBuilderSetNodePos</link> (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> node_id, <link linkend="_struct_im_vec2">ImVec2</link> pos)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1abebea982d306d60aea80862298b938bf">DockBuilderSetNodeSize</link> (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> node_id, <link linkend="_struct_im_vec2">ImVec2</link> <link linkend="_imgui__impl__opengl3__loader_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> <link linkend="_namespace_im_gui_1a0575e1e5da712a0ab28f7c9c41167c1c">DockBuilderSplitNode</link> (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> node_id, <link linkend="_imgui_8h_1a874086389bc27cc9647118d22a806403">ImGuiDir</link> split_dir, float size_ratio_for_node_at_dir, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> *out_id_at_dir, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> *out_id_at_opposite_dir)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1adf707304b4d0759f566bdf584b913815">DockBuilderCopyDockSpace</link> (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> src_dockspace_id, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> dst_dockspace_id, <link linkend="_struct_im_vector">ImVector</link>&lt; const char * &gt; *in_window_remap_pairs)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a938077e82ec2d3c8c020058896a050d0">DockBuilderCopyNode</link> (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> src_node_id, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> dst_node_id, <link linkend="_struct_im_vector">ImVector</link>&lt; <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> &gt; *out_node_remap_pairs)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1ad4262ab8fa2967373913cf5eed4c19f3">DockBuilderCopyWindowSettings</link> (const char *src_name, const char *dst_name)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1ae9e2b4c823afe829715ff7132bc1ffc9">DockBuilderFinish</link> (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> node_id)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1ad10256d914b625cea7494b26c77b84ec">PushFocusScope</link> (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a660bc1ff7f6d971fc4b4236e87409b38">PopFocusScope</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> <link linkend="_namespace_im_gui_1a1bbe318e10866b4a4c445bc16c7f7272">GetCurrentFocusScope</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1adaf08bdf24e9c64c18403702448bee96">IsDragDropActive</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a929a420d3af29051a140d0f36addbcd2">BeginDragDropTargetCustom</link> (const <link linkend="_struct_im_rect">ImRect</link> &amp;bb, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1adae8f94649956a2a717c00dbf81a5df9">ClearDragDrop</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a673042a1ed3eeb3c19781faed83ad4a8">IsDragDropPayloadBeingAccepted</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a243a62fece1096c59442bba21f0aa736">RenderDragDropTargetRect</link> (const <link linkend="_struct_im_rect">ImRect</link> &amp;bb, const <link linkend="_struct_im_rect">ImRect</link> &amp;item_clip_rect)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_struct_im_gui_typing_select_request">ImGuiTypingSelectRequest</link> * <link linkend="_namespace_im_gui_1a5a0ce2f80524c34cfa9f1899e6d6f28d">GetTypingSelectRequest</link> (<link linkend="_imgui__internal_8h_1abe62ecb5234d3ca104d3fb3647c77a8e">ImGuiTypingSelectFlags</link> flags=<link linkend="_imgui__internal_8h_1ad429c1dcfe8d21ea4a7c92f7f466e843a6e66d021bb29780e9a5dffcfa01981b0">ImGuiTypingSelectFlags_None</link>)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> int <link linkend="_namespace_im_gui_1a8650c2ec1a532a5b7d67975716c5a90b">TypingSelectFindMatch</link> (<link linkend="_struct_im_gui_typing_select_request">ImGuiTypingSelectRequest</link> *req, int items_count, const char *(*get_item_name_func)(<link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *, int), <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *user_data, int nav_item_idx)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> int <link linkend="_namespace_im_gui_1a370869a016f66fb90750a72d5f7bcbd2">TypingSelectFindNextSingleCharMatch</link> (<link linkend="_struct_im_gui_typing_select_request">ImGuiTypingSelectRequest</link> *req, int items_count, const char *(*get_item_name_func)(<link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *, int), <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *user_data, int nav_item_idx)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> int <link linkend="_namespace_im_gui_1acb850fb78a02ecd78c256730c8b712aa">TypingSelectFindBestLeadingMatch</link> (<link linkend="_struct_im_gui_typing_select_request">ImGuiTypingSelectRequest</link> *req, int items_count, const char *(*get_item_name_func)(<link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *, int), <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *user_data)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a2451c5a6301b6c1234efc8054b70980b">SetWindowClipRectBeforeSetChannel</link> (<link linkend="_struct_im_gui_window">ImGuiWindow</link> *window, const <link linkend="_struct_im_rect">ImRect</link> &amp;clip_rect)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a303fae66ef07f4f86ab242cf81021060">BeginColumns</link> (const char *str_id, int <link linkend="_imgui__impl__opengl3__loader_8h_1a619bc20e8198de3bd3f3d7fc34de66b2">count</link>, <link linkend="_imgui__internal_8h_1a930931ec4c54582a278a461676df4dda">ImGuiOldColumnFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1af93bed3bce5475fe4d525d744f16aa20">EndColumns</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a54b5cf7f40d092e2959b1df2c8118181">PushColumnClipRect</link> (int column_index)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a39f557bf00d94069a41b0d40bd72c522">PushColumnsBackground</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a27c737fa1fc79164fc7d840e858b1845">PopColumnsBackground</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> <link linkend="_namespace_im_gui_1a432f468da48b9aadd3c5928f1065939c">GetColumnsID</link> (const char *str_id, int <link linkend="_imgui__impl__opengl3__loader_8h_1a619bc20e8198de3bd3f3d7fc34de66b2">count</link>)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_struct_im_gui_old_columns">ImGuiOldColumns</link> * <link linkend="_namespace_im_gui_1af04eb535c152ed14c87940b5d0661c7b">FindOrCreateColumns</link> (<link linkend="_struct_im_gui_window">ImGuiWindow</link> *window, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> float <link linkend="_namespace_im_gui_1a81693b00fc61ae1f7791e5e84108de54">GetColumnOffsetFromNorm</link> (const <link linkend="_struct_im_gui_old_columns">ImGuiOldColumns</link> *columns, float offset_norm)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> float <link linkend="_namespace_im_gui_1ad43f0dd1dbdbb9df814e4b42afe747d0">GetColumnNormFromOffset</link> (const <link linkend="_struct_im_gui_old_columns">ImGuiOldColumns</link> *columns, float <link linkend="_imgui__impl__opengl3__loader_8h_1ae1b92ae085ddef4b1cdca7d749339fb0">offset</link>)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1afa05e82c8b5239452806770e5f9efd70">TableOpenContextMenu</link> (int column_n=-1)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a8f8f11d2ca0e94811ce10a7258283d38">TableSetColumnWidth</link> (int column_n, float <link linkend="_imgui__impl__opengl3__loader_8h_1a6879d830f164725df67adeeabca3ea47">width</link>)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a5db8b6e07ea254b0a63e064a64847b99">TableSetColumnSortDirection</link> (int column_n, <link linkend="_imgui_8h_1ac8994dbafc20fc81077ee64574ab648e">ImGuiSortDirection</link> sort_direction, bool append_to_sort_specs)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> int <link linkend="_namespace_im_gui_1a19e750505235ca98752ccc9b4befd790">TableGetHoveredColumn</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> int <link linkend="_namespace_im_gui_1ad2125ee545d7ab8adb482177a9c29b21">TableGetHoveredRow</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> float <link linkend="_namespace_im_gui_1a5be2ea5c0d97fdd02b0b776412ed9d8d">TableGetHeaderRowHeight</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> float <link linkend="_namespace_im_gui_1a0ca90d6b30ebafeeae2baf45abc09bda">TableGetHeaderAngledMaxLabelWidth</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a6b6e0c511477248e9dd485c359f52eeb">TablePushBackgroundChannel</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a4fe11c430ad1b6597d4ffbde7cdf257e">TablePopBackgroundChannel</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1abedf7bbf79accde2321806dc0beb90b1">TableAngledHeadersRowEx</link> (float angle, float max_label_width=0.0f)</para>
</listitem>
            <listitem><para><link linkend="_struct_im_gui_table">ImGuiTable</link> * <link linkend="_namespace_im_gui_1ae49aeb59a58fc24a9fa27ce7a18f6a12">GetCurrentTable</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_struct_im_gui_table">ImGuiTable</link> * <link linkend="_namespace_im_gui_1a57adce5340eb73285ccf2c8bc81c92bf">TableFindByID</link> (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a28046a30716afeb7738a82a5b19044ca">BeginTableEx</link> (const char *<link linkend="_imgui__impl__opengl3__loader_8h_1a5c4947d4516dd7cfa3505ce3a648a4ef">name</link>, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id, int columns_count, <link linkend="_imgui_8h_1ad3032e379f8aba2cb5c31b05cd40858d">ImGuiTableFlags</link> flags=0, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;outer_size=<link linkend="_struct_im_vec2">ImVec2</link>(0, 0), float inner_width=0.0f)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a41533f5f77df0241f9f4aaa17d01a0d7">TableBeginInitMemory</link> (<link linkend="_struct_im_gui_table">ImGuiTable</link> *table, int columns_count)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1af4446a9e8b44157047d089fe4f0c738d">TableBeginApplyRequests</link> (<link linkend="_struct_im_gui_table">ImGuiTable</link> *table)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1aa15ef562cd5d5166e9774472fc6d10c6">TableSetupDrawChannels</link> (<link linkend="_struct_im_gui_table">ImGuiTable</link> *table)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a890d76a0ec9efc98765c226884e3e32a">TableUpdateLayout</link> (<link linkend="_struct_im_gui_table">ImGuiTable</link> *table)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a339483446800bd4c7d2e4f5683e21de0">TableUpdateBorders</link> (<link linkend="_struct_im_gui_table">ImGuiTable</link> *table)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1aea40bc669cc8c0ef92617df8616d1e61">TableUpdateColumnsWeightFromWidth</link> (<link linkend="_struct_im_gui_table">ImGuiTable</link> *table)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a506d5b52f032c72503c4e87535a3d04d">TableDrawBorders</link> (<link linkend="_struct_im_gui_table">ImGuiTable</link> *table)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1affbabc4a2c721b20ab7106d62be19385">TableDrawDefaultContextMenu</link> (<link linkend="_struct_im_gui_table">ImGuiTable</link> *table, <link linkend="_imgui_8h_1ad3032e379f8aba2cb5c31b05cd40858d">ImGuiTableFlags</link> flags_for_section_to_display)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1ac5ffd2621218c244f701317f9086e6ff">TableBeginContextMenuPopup</link> (<link linkend="_struct_im_gui_table">ImGuiTable</link> *table)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a0bf2259f81cd376b6790fe13dea70a22">TableMergeDrawChannels</link> (<link linkend="_struct_im_gui_table">ImGuiTable</link> *table)</para>
</listitem>
            <listitem><para><link linkend="_struct_im_gui_table_instance_data">ImGuiTableInstanceData</link> * <link linkend="_namespace_im_gui_1aaf5b122b1f088db308b44508c240b05f">TableGetInstanceData</link> (<link linkend="_struct_im_gui_table">ImGuiTable</link> *table, int instance_no)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> <link linkend="_namespace_im_gui_1a54ba0ce0a293a68caf56146811c5305b">TableGetInstanceID</link> (<link linkend="_struct_im_gui_table">ImGuiTable</link> *table, int instance_no)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a8c143be9781a6262c69019c7b6a03f22">TableSortSpecsSanitize</link> (<link linkend="_struct_im_gui_table">ImGuiTable</link> *table)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a045bb5e3e5947c10260a4889b50e3e35">TableSortSpecsBuild</link> (<link linkend="_struct_im_gui_table">ImGuiTable</link> *table)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_imgui_8h_1ac8994dbafc20fc81077ee64574ab648e">ImGuiSortDirection</link> <link linkend="_namespace_im_gui_1a25bb5e856111000a1f898473f190c506">TableGetColumnNextSortDirection</link> (<link linkend="_struct_im_gui_table_column">ImGuiTableColumn</link> *column)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a6eb757220d4d7276577cfadfd056c9fe">TableFixColumnSortDirection</link> (<link linkend="_struct_im_gui_table">ImGuiTable</link> *table, <link linkend="_struct_im_gui_table_column">ImGuiTableColumn</link> *column)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> float <link linkend="_namespace_im_gui_1adb37a5d79b71507de590924cd53e1e62">TableGetColumnWidthAuto</link> (<link linkend="_struct_im_gui_table">ImGuiTable</link> *table, <link linkend="_struct_im_gui_table_column">ImGuiTableColumn</link> *column)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1ac966c7257f3c3e557170d1f1089cb09a">TableBeginRow</link> (<link linkend="_struct_im_gui_table">ImGuiTable</link> *table)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a6bc4ce6f7ff9f8268473f5e538a1181f">TableEndRow</link> (<link linkend="_struct_im_gui_table">ImGuiTable</link> *table)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1ab6578920318c60f3a18daee1d8711103">TableBeginCell</link> (<link linkend="_struct_im_gui_table">ImGuiTable</link> *table, int column_n)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1ae2058909b56d7169e34a6cfefb1ac2f3">TableEndCell</link> (<link linkend="_struct_im_gui_table">ImGuiTable</link> *table)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_struct_im_rect">ImRect</link> <link linkend="_namespace_im_gui_1aa778a80828627fcd199784f4591a97d1">TableGetCellBgRect</link> (const <link linkend="_struct_im_gui_table">ImGuiTable</link> *table, int column_n)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> const char * <link linkend="_namespace_im_gui_1a136f408a27340b058b115fc014867c48">TableGetColumnName</link> (const <link linkend="_struct_im_gui_table">ImGuiTable</link> *table, int column_n)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> <link linkend="_namespace_im_gui_1a8d0d01eaf47b69df551d98e8ce3fc86d">TableGetColumnResizeID</link> (<link linkend="_struct_im_gui_table">ImGuiTable</link> *table, int column_n, int instance_no=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> float <link linkend="_namespace_im_gui_1acd435c37aed7c3aa11eb71a8dee09e78">TableGetMaxColumnWidth</link> (const <link linkend="_struct_im_gui_table">ImGuiTable</link> *table, int column_n)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a7db13485f1945070e9de98facafe7e1d">TableSetColumnWidthAutoSingle</link> (<link linkend="_struct_im_gui_table">ImGuiTable</link> *table, int column_n)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a772b157564e3624de66e0f86b0ed3f37">TableSetColumnWidthAutoAll</link> (<link linkend="_struct_im_gui_table">ImGuiTable</link> *table)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a3fa207dacfbee7ac3c7241dfea4fb638">TableRemove</link> (<link linkend="_struct_im_gui_table">ImGuiTable</link> *table)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1af3cb65f8b45057e34fa7d9447a57eb28">TableGcCompactTransientBuffers</link> (<link linkend="_struct_im_gui_table">ImGuiTable</link> *table)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1ac176c3d1c667f88d2272376e0b141503">TableGcCompactTransientBuffers</link> (<link linkend="_struct_im_gui_table_temp_data">ImGuiTableTempData</link> *table)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a4e0c06857053c7c3fbde16b8fd5bee17">TableGcCompactSettings</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a9dbe18a196cc7e70f84cecfcb3b45c1b">TableLoadSettings</link> (<link linkend="_struct_im_gui_table">ImGuiTable</link> *table)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1aadf0917c8bc98aaab0bf3c7667b19afe">TableSaveSettings</link> (<link linkend="_struct_im_gui_table">ImGuiTable</link> *table)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a068e3709ba63913c45a2c3177f511425">TableResetSettings</link> (<link linkend="_struct_im_gui_table">ImGuiTable</link> *table)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_struct_im_gui_table_settings">ImGuiTableSettings</link> * <link linkend="_namespace_im_gui_1a4824b64a0052e57fdb17c90331fb39cd">TableGetBoundSettings</link> (<link linkend="_struct_im_gui_table">ImGuiTable</link> *table)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a49786e01457877baef3eb8c01eca38d1">TableSettingsAddSettingsHandler</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_struct_im_gui_table_settings">ImGuiTableSettings</link> * <link linkend="_namespace_im_gui_1a627a6a9580dc916a0a273afc16cefc19">TableSettingsCreate</link> (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id, int columns_count)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_struct_im_gui_table_settings">ImGuiTableSettings</link> * <link linkend="_namespace_im_gui_1a8884e5118f923137c19aee0d84a438c9">TableSettingsFindByID</link> (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id)</para>
</listitem>
            <listitem><para><link linkend="_struct_im_gui_tab_bar">ImGuiTabBar</link> * <link linkend="_namespace_im_gui_1ad8f0e963cfe312a1b643801c55ee411d">GetCurrentTabBar</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1ae630dd2237aa12e9a306af817d8996c3">BeginTabBarEx</link> (<link linkend="_struct_im_gui_tab_bar">ImGuiTabBar</link> *tab_bar, const <link linkend="_struct_im_rect">ImRect</link> &amp;bb, <link linkend="_imgui_8h_1a60ced774e9c7a4f73c41ef4feb91a30a">ImGuiTabBarFlags</link> flags)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_struct_im_gui_tab_item">ImGuiTabItem</link> * <link linkend="_namespace_im_gui_1a892525a74a6206eabbeb851071b3119a">TabBarFindTabByID</link> (<link linkend="_struct_im_gui_tab_bar">ImGuiTabBar</link> *tab_bar, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> tab_id)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_struct_im_gui_tab_item">ImGuiTabItem</link> * <link linkend="_namespace_im_gui_1a4b0b18645ef7466d671c788b69dd538c">TabBarFindTabByOrder</link> (<link linkend="_struct_im_gui_tab_bar">ImGuiTabBar</link> *tab_bar, int order)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_struct_im_gui_tab_item">ImGuiTabItem</link> * <link linkend="_namespace_im_gui_1a5e1bfc506e7bd0f71ec85d8c69672d3d">TabBarFindMostRecentlySelectedTabForActiveWindow</link> (<link linkend="_struct_im_gui_tab_bar">ImGuiTabBar</link> *tab_bar)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_struct_im_gui_tab_item">ImGuiTabItem</link> * <link linkend="_namespace_im_gui_1a8c17479417a20abecbb65f822d5f4677">TabBarGetCurrentTab</link> (<link linkend="_struct_im_gui_tab_bar">ImGuiTabBar</link> *tab_bar)</para>
</listitem>
            <listitem><para>int <link linkend="_namespace_im_gui_1ab09f008d445dd058ed21cf46041ce9bd">TabBarGetTabOrder</link> (<link linkend="_struct_im_gui_tab_bar">ImGuiTabBar</link> *tab_bar, <link linkend="_struct_im_gui_tab_item">ImGuiTabItem</link> *tab)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> const char * <link linkend="_namespace_im_gui_1a5ad2340bc5e4f8b0f8a77e8dc5621531">TabBarGetTabName</link> (<link linkend="_struct_im_gui_tab_bar">ImGuiTabBar</link> *tab_bar, <link linkend="_struct_im_gui_tab_item">ImGuiTabItem</link> *tab)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1ad351241dc857097a48c74669249b3c04">TabBarAddTab</link> (<link linkend="_struct_im_gui_tab_bar">ImGuiTabBar</link> *tab_bar, <link linkend="_imgui_8h_1aec9b231c0bca6ab9afc507ccfe60d872">ImGuiTabItemFlags</link> tab_flags, <link linkend="_struct_im_gui_window">ImGuiWindow</link> *window)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a3340d8c07dca35527b618288f091a0f7">TabBarRemoveTab</link> (<link linkend="_struct_im_gui_tab_bar">ImGuiTabBar</link> *tab_bar, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> tab_id)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1ac2d6de29959e0be692d15e4cefce5929">TabBarCloseTab</link> (<link linkend="_struct_im_gui_tab_bar">ImGuiTabBar</link> *tab_bar, <link linkend="_struct_im_gui_tab_item">ImGuiTabItem</link> *tab)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a6808a631d32de769e33eaac85ff3d85c">TabBarQueueFocus</link> (<link linkend="_struct_im_gui_tab_bar">ImGuiTabBar</link> *tab_bar, <link linkend="_struct_im_gui_tab_item">ImGuiTabItem</link> *tab)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1afe20b51ba36c0404fa50edff0d039739">TabBarQueueReorder</link> (<link linkend="_struct_im_gui_tab_bar">ImGuiTabBar</link> *tab_bar, <link linkend="_struct_im_gui_tab_item">ImGuiTabItem</link> *tab, int <link linkend="_imgui__impl__opengl3__loader_8h_1ae1b92ae085ddef4b1cdca7d749339fb0">offset</link>)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a71f399cebfd6cf108c545cc691d77248">TabBarQueueReorderFromMousePos</link> (<link linkend="_struct_im_gui_tab_bar">ImGuiTabBar</link> *tab_bar, <link linkend="_struct_im_gui_tab_item">ImGuiTabItem</link> *tab, <link linkend="_struct_im_vec2">ImVec2</link> mouse_pos)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1aabf7c33f50ff3dc01b14fb19578252ee">TabBarProcessReorder</link> (<link linkend="_struct_im_gui_tab_bar">ImGuiTabBar</link> *tab_bar)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a4e0986fc689e7855cd9a9099dc87dac5">TabItemEx</link> (<link linkend="_struct_im_gui_tab_bar">ImGuiTabBar</link> *tab_bar, const char *label, bool *p_open, <link linkend="_imgui_8h_1aec9b231c0bca6ab9afc507ccfe60d872">ImGuiTabItemFlags</link> flags, <link linkend="_struct_im_gui_window">ImGuiWindow</link> *docked_window)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_struct_im_vec2">ImVec2</link> <link linkend="_namespace_im_gui_1aa6e4bacb44f42ff99c11420d099b1dc2">TabItemCalcSize</link> (const char *label, bool has_close_button_or_unsaved_marker)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_struct_im_vec2">ImVec2</link> <link linkend="_namespace_im_gui_1aaead36381d3cb7ae186cd23fc32f8a88">TabItemCalcSize</link> (<link linkend="_struct_im_gui_window">ImGuiWindow</link> *window)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a87fc45357f733cb2a378e098d2855243">TabItemBackground</link> (<link linkend="_struct_im_draw_list">ImDrawList</link> *draw_list, const <link linkend="_struct_im_rect">ImRect</link> &amp;bb, <link linkend="_imgui_8h_1aec9b231c0bca6ab9afc507ccfe60d872">ImGuiTabItemFlags</link> flags, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1abbdb2619721c7ecaca3fb03d9d905003">TabItemLabelAndCloseButton</link> (<link linkend="_struct_im_draw_list">ImDrawList</link> *draw_list, const <link linkend="_struct_im_rect">ImRect</link> &amp;bb, <link linkend="_imgui_8h_1aec9b231c0bca6ab9afc507ccfe60d872">ImGuiTabItemFlags</link> flags, <link linkend="_struct_im_vec2">ImVec2</link> frame_padding, const char *label, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> tab_id, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> close_button_id, bool is_contents_visible, bool *out_just_closed, bool *out_text_clipped)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a9971ce57f2a288ac3a12df886c5550d1">RenderText</link> (<link linkend="_struct_im_vec2">ImVec2</link> pos, const char *text, const char *text_end=NULL, bool hide_text_after_hash=true)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1aa483b40f6899e1b289b4bf6c2673d1d2">RenderTextWrapped</link> (<link linkend="_struct_im_vec2">ImVec2</link> pos, const char *text, const char *text_end, float wrap_width)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1ab362eafae794c7364a6b96ea06f38eb9">RenderTextClipped</link> (const <link linkend="_struct_im_vec2">ImVec2</link> &amp;pos_min, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;pos_max, const char *text, const char *text_end, const <link linkend="_struct_im_vec2">ImVec2</link> *text_size_if_known, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;align=<link linkend="_struct_im_vec2">ImVec2</link>(0, 0), const <link linkend="_struct_im_rect">ImRect</link> *clip_rect=NULL)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a6ff0aaef091d39b0e2e2f6afeb647b34">RenderTextClippedEx</link> (<link linkend="_struct_im_draw_list">ImDrawList</link> *draw_list, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;pos_min, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;pos_max, const char *text, const char *text_end, const <link linkend="_struct_im_vec2">ImVec2</link> *text_size_if_known, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;align=<link linkend="_struct_im_vec2">ImVec2</link>(0, 0), const <link linkend="_struct_im_rect">ImRect</link> *clip_rect=NULL)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a029bab9f4602be86178307b168975a6d">RenderTextEllipsis</link> (<link linkend="_struct_im_draw_list">ImDrawList</link> *draw_list, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;pos_min, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;pos_max, float clip_max_x, float ellipsis_max_x, const char *text, const char *text_end, const <link linkend="_struct_im_vec2">ImVec2</link> *text_size_if_known)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a621ba649568ede3939d4f10d83b86d04">RenderFrame</link> (<link linkend="_struct_im_vec2">ImVec2</link> p_min, <link linkend="_struct_im_vec2">ImVec2</link> p_max, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> fill_col, bool <link linkend="_imgui__impl__opengl3__loader_8h_1a04bf50a0ceff267d0040a99e545d74e9">border</link>=true, float rounding=0.0f)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1adc76239c2006e66f8dab7638529a763d">RenderFrameBorder</link> (<link linkend="_struct_im_vec2">ImVec2</link> p_min, <link linkend="_struct_im_vec2">ImVec2</link> p_max, float rounding=0.0f)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a1c7b45570a114af08b0c2e16a7acceae">RenderColorRectWithAlphaCheckerboard</link> (<link linkend="_struct_im_draw_list">ImDrawList</link> *draw_list, <link linkend="_struct_im_vec2">ImVec2</link> p_min, <link linkend="_struct_im_vec2">ImVec2</link> p_max, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> fill_col, float grid_step, <link linkend="_struct_im_vec2">ImVec2</link> grid_off, float rounding=0.0f, <link linkend="_imgui_8h_1af2ef7e1341558a1d39aa244c1257780a">ImDrawFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1add2e040b97eeb0857dc7d02876b07b72">RenderNavHighlight</link> (const <link linkend="_struct_im_rect">ImRect</link> &amp;bb, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id, <link linkend="_imgui__internal_8h_1a8c2855ba575756109c607c10697bcccd">ImGuiNavHighlightFlags</link> flags=<link linkend="_imgui__internal_8h_1a55ae92b6fb7a0edbe4814f6e261d9e26a6f47e567193290259dd85fdcade51ee6">ImGuiNavHighlightFlags_None</link>)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> const char * <link linkend="_namespace_im_gui_1a7671e1dbc803a31b06081b52a771d83f">FindRenderedTextEnd</link> (const char *text, const char *text_end=NULL)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1ade001ee6028075c9c1e2bd3f0395b920">RenderMouseCursor</link> (<link linkend="_struct_im_vec2">ImVec2</link> pos, float scale, <link linkend="_imgui_8h_1a9223d6c82bb5d12c2eab5f829ca520ef">ImGuiMouseCursor</link> mouse_cursor, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col_fill, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col_border, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col_shadow)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a7ec12551caa737505087c80e38b94937">RenderArrow</link> (<link linkend="_struct_im_draw_list">ImDrawList</link> *draw_list, <link linkend="_struct_im_vec2">ImVec2</link> pos, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col, <link linkend="_imgui_8h_1a874086389bc27cc9647118d22a806403">ImGuiDir</link> dir, float scale=1.0f)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a46189f75b2e25d595f1e71060d2a2633">RenderBullet</link> (<link linkend="_struct_im_draw_list">ImDrawList</link> *draw_list, <link linkend="_struct_im_vec2">ImVec2</link> pos, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a32d6e6c359b59df1e4f9517d65e443b8">RenderCheckMark</link> (<link linkend="_struct_im_draw_list">ImDrawList</link> *draw_list, <link linkend="_struct_im_vec2">ImVec2</link> pos, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col, float sz)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1af1ea568bffa58ec26100de3bf60af5f2">RenderArrowPointingAt</link> (<link linkend="_struct_im_draw_list">ImDrawList</link> *draw_list, <link linkend="_struct_im_vec2">ImVec2</link> pos, <link linkend="_struct_im_vec2">ImVec2</link> half_sz, <link linkend="_imgui_8h_1a874086389bc27cc9647118d22a806403">ImGuiDir</link> direction, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a128c5f634a3e33612c17568d1ef1045c">RenderArrowDockMenu</link> (<link linkend="_struct_im_draw_list">ImDrawList</link> *draw_list, <link linkend="_struct_im_vec2">ImVec2</link> p_min, float sz, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1af311762331bda4508b25e05f6afc7f45">RenderRectFilledRangeH</link> (<link linkend="_struct_im_draw_list">ImDrawList</link> *draw_list, const <link linkend="_struct_im_rect">ImRect</link> &amp;rect, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col, float x_start_norm, float x_end_norm, float rounding)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a3579615f926c34c5de220f655d535d61">RenderRectFilledWithHole</link> (<link linkend="_struct_im_draw_list">ImDrawList</link> *draw_list, const <link linkend="_struct_im_rect">ImRect</link> &amp;outer, const <link linkend="_struct_im_rect">ImRect</link> &amp;inner, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col, float rounding)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_imgui_8h_1af2ef7e1341558a1d39aa244c1257780a">ImDrawFlags</link> <link linkend="_namespace_im_gui_1a98d32cee83e1357a9a4abbd823712a38">CalcRoundingFlagsForRectInRect</link> (const <link linkend="_struct_im_rect">ImRect</link> &amp;r_in, const <link linkend="_struct_im_rect">ImRect</link> &amp;r_outer, float threshold)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1aae6420fec03511fd478d9108f31e6b5f">TextEx</link> (const char *text, const char *text_end=NULL, <link linkend="_imgui__internal_8h_1af5a78082b7812985fff78923206b7488">ImGuiTextFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1ae479220c66b039874c6e4c9e9b22849f">ButtonEx</link> (const char *label, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;size_arg=<link linkend="_struct_im_vec2">ImVec2</link>(0, 0), <link linkend="_imgui_8h_1a990fae518aa1d95f571ee40989de4c22">ImGuiButtonFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1ab05ee8e53f29fbb84942a494f2ac3292">ArrowButtonEx</link> (const char *str_id, <link linkend="_imgui_8h_1a874086389bc27cc9647118d22a806403">ImGuiDir</link> dir, <link linkend="_struct_im_vec2">ImVec2</link> size_arg, <link linkend="_imgui_8h_1a990fae518aa1d95f571ee40989de4c22">ImGuiButtonFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1aa696e652d6c161dadfd12c4392d6b8ed">ImageButtonEx</link> (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id, <link linkend="_imgui_8h_1a364f4447ecbc4ca176145ccff9db6286">ImTextureID</link> texture_id, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;image_size, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;uv0, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;uv1, const <link linkend="_struct_im_vec4">ImVec4</link> &amp;bg_col, const <link linkend="_struct_im_vec4">ImVec4</link> &amp;tint_col, <link linkend="_imgui_8h_1a990fae518aa1d95f571ee40989de4c22">ImGuiButtonFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1acd77978447d71b3113ad084dfde1fe18">SeparatorEx</link> (<link linkend="_imgui__internal_8h_1a5bfe5a88609ebcdf61cfee4e2fabf9a8">ImGuiSeparatorFlags</link> flags, float thickness=1.0f)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a14e42bfa66f05d0ae2304e27ee1fb2b3">SeparatorTextEx</link> (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id, const char *label, const char *label_end, float extra_width)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a120a7714cd7e6e8f51aab7c2d56370bb">CheckboxFlags</link> (const char *label, <link linkend="_imgui_8h_1a83a52dabbef5da589af659d12e6c3f7e">ImS64</link> *flags, <link linkend="_imgui_8h_1a83a52dabbef5da589af659d12e6c3f7e">ImS64</link> flags_value)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a9e717a280425b2507c933d2ae2be0a16">CheckboxFlags</link> (const char *label, <link linkend="_imgui_8h_1a6875b9978368bbd5cf7e9b967e22eea4">ImU64</link> *flags, <link linkend="_imgui_8h_1a6875b9978368bbd5cf7e9b967e22eea4">ImU64</link> flags_value)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a4f6da873474094ce131edd2dcda98551">CloseButton</link> (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;pos)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a203922bc5a7de6d291093dafafe3502c">CollapseButton</link> (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;pos, <link linkend="_struct_im_gui_dock_node">ImGuiDockNode</link> *dock_node)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a54a5006faded850f626ab20bd34aea9e">Scrollbar</link> (<link linkend="_imgui__internal_8h_1a468e54d5ed387abfbf0d1fc1e33ab483">ImGuiAxis</link> axis)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a35eab777db4f6cb0d5242fd6968dab73">ScrollbarEx</link> (const <link linkend="_struct_im_rect">ImRect</link> &amp;bb, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id, <link linkend="_imgui__internal_8h_1a468e54d5ed387abfbf0d1fc1e33ab483">ImGuiAxis</link> axis, <link linkend="_imgui_8h_1a83a52dabbef5da589af659d12e6c3f7e">ImS64</link> *p_scroll_v, <link linkend="_imgui_8h_1a83a52dabbef5da589af659d12e6c3f7e">ImS64</link> avail_v, <link linkend="_imgui_8h_1a83a52dabbef5da589af659d12e6c3f7e">ImS64</link> contents_v, <link linkend="_imgui_8h_1af2ef7e1341558a1d39aa244c1257780a">ImDrawFlags</link> flags)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_struct_im_rect">ImRect</link> <link linkend="_namespace_im_gui_1ab0be56f97f06487343342a8d99261409">GetWindowScrollbarRect</link> (<link linkend="_struct_im_gui_window">ImGuiWindow</link> *window, <link linkend="_imgui__internal_8h_1a468e54d5ed387abfbf0d1fc1e33ab483">ImGuiAxis</link> axis)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> <link linkend="_namespace_im_gui_1a426c9b60bf8cd3d887ba50366a2612df">GetWindowScrollbarID</link> (<link linkend="_struct_im_gui_window">ImGuiWindow</link> *window, <link linkend="_imgui__internal_8h_1a468e54d5ed387abfbf0d1fc1e33ab483">ImGuiAxis</link> axis)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> <link linkend="_namespace_im_gui_1a22041ad222e2b5c86773d70d47078fa3">GetWindowResizeCornerID</link> (<link linkend="_struct_im_gui_window">ImGuiWindow</link> *window, int n)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> <link linkend="_namespace_im_gui_1aed2c39ff4f7790fe03b4d9b2893d4ef4">GetWindowResizeBorderID</link> (<link linkend="_struct_im_gui_window">ImGuiWindow</link> *window, <link linkend="_imgui_8h_1a874086389bc27cc9647118d22a806403">ImGuiDir</link> dir)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a65a4f18b1bc8ce0f351687922089f374">ButtonBehavior</link> (const <link linkend="_struct_im_rect">ImRect</link> &amp;bb, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id, bool *out_hovered, bool *out_held, <link linkend="_imgui_8h_1a990fae518aa1d95f571ee40989de4c22">ImGuiButtonFlags</link> flags=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a03fd8ebf820fd67eccfa0ee037df2d0c">DragBehavior</link> (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id, <link linkend="_imgui_8h_1a4cfa8697a3d76722fff83eb18922e9d5">ImGuiDataType</link> data_type, <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *p_v, float v_speed, const <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *p_min, const <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *p_max, const char *<link linkend="_imgui__impl__opengl3__loader_8h_1a1e3b09934060e9d373139c3557730d37">format</link>, <link linkend="_imgui_8h_1a50cc3e3e4beb155e2186f8c1dc057e18">ImGuiSliderFlags</link> flags)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1af8d5d2cfa55221448e55e51b1abcfe93">SliderBehavior</link> (const <link linkend="_struct_im_rect">ImRect</link> &amp;bb, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id, <link linkend="_imgui_8h_1a4cfa8697a3d76722fff83eb18922e9d5">ImGuiDataType</link> data_type, <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *p_v, const <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *p_min, const <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *p_max, const char *<link linkend="_imgui__impl__opengl3__loader_8h_1a1e3b09934060e9d373139c3557730d37">format</link>, <link linkend="_imgui_8h_1a50cc3e3e4beb155e2186f8c1dc057e18">ImGuiSliderFlags</link> flags, <link linkend="_struct_im_rect">ImRect</link> *out_grab_bb)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a285913cd915ee715cd6a804e1b83814c">SplitterBehavior</link> (const <link linkend="_struct_im_rect">ImRect</link> &amp;bb, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id, <link linkend="_imgui__internal_8h_1a468e54d5ed387abfbf0d1fc1e33ab483">ImGuiAxis</link> axis, float *size1, float *size2, float min_size1, float min_size2, float hover_extend=0.0f, float hover_visibility_delay=0.0f, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> bg_col=0)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a918eabf70d288e93b2519ee1eac2c0b4">TreeNodeBehavior</link> (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id, <link linkend="_imgui_8h_1a0588fdd10c59b49a0159484fe9ec4564">ImGuiTreeNodeFlags</link> flags, const char *label, const char *label_end=NULL)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1ad3c4846b9f47fc66556333fe52406ffb">TreePushOverrideID</link> (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1ad27861dfbbbef294034215acb3834125">TreeNodeSetOpen</link> (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id, bool open)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a75b8642d7b115fa42a211bc31f395665">TreeNodeUpdateNextOpen</link> (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id, <link linkend="_imgui_8h_1a0588fdd10c59b49a0159484fe9ec4564">ImGuiTreeNodeFlags</link> flags)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1adbd8ae0488e54787d2857296281cdf2d">SetNextItemSelectionUserData</link> (<link linkend="_imgui__internal_8h_1a1e0ff3187164b75255989a2e0541703b">ImGuiSelectionUserData</link> selection_user_data)</para>
</listitem>
            <listitem><para>template&lt;typename T , typename SIGNED_T , typename FLOAT_T &gt; </para><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> float <link linkend="_namespace_im_gui_1a9419b0ce18eb927db258d308d8c02a7e">ScaleRatioFromValueT</link> (<link linkend="_imgui_8h_1a4cfa8697a3d76722fff83eb18922e9d5">ImGuiDataType</link> data_type, T v, T v_min, T v_max, bool is_logarithmic, float logarithmic_zero_epsilon, float zero_deadzone_size)</para>
</listitem>
            <listitem><para>template&lt;typename T , typename SIGNED_T , typename FLOAT_T &gt; </para><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> T <link linkend="_namespace_im_gui_1a1c3679262e23e28b9e71f1d237826156">ScaleValueFromRatioT</link> (<link linkend="_imgui_8h_1a4cfa8697a3d76722fff83eb18922e9d5">ImGuiDataType</link> data_type, float t, T v_min, T v_max, bool is_logarithmic, float logarithmic_zero_epsilon, float zero_deadzone_size)</para>
</listitem>
            <listitem><para>template&lt;typename T , typename SIGNED_T , typename FLOAT_T &gt; </para><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1aa777ee3801f15acc2f81a131843039ae">DragBehaviorT</link> (<link linkend="_imgui_8h_1a4cfa8697a3d76722fff83eb18922e9d5">ImGuiDataType</link> data_type, T *v, float v_speed, T v_min, T v_max, const char *<link linkend="_imgui__impl__opengl3__loader_8h_1a1e3b09934060e9d373139c3557730d37">format</link>, <link linkend="_imgui_8h_1a50cc3e3e4beb155e2186f8c1dc057e18">ImGuiSliderFlags</link> flags)</para>
</listitem>
            <listitem><para>template&lt;typename T , typename SIGNED_T , typename FLOAT_T &gt; </para><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1ad0247a8c67e80cc038c1918ef3a75b80">SliderBehaviorT</link> (const <link linkend="_struct_im_rect">ImRect</link> &amp;bb, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id, <link linkend="_imgui_8h_1a4cfa8697a3d76722fff83eb18922e9d5">ImGuiDataType</link> data_type, T *v, T v_min, T v_max, const char *<link linkend="_imgui__impl__opengl3__loader_8h_1a1e3b09934060e9d373139c3557730d37">format</link>, <link linkend="_imgui_8h_1a50cc3e3e4beb155e2186f8c1dc057e18">ImGuiSliderFlags</link> flags, <link linkend="_struct_im_rect">ImRect</link> *out_grab_bb)</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> T <link linkend="_namespace_im_gui_1ace887ae2de27d34ee7300a0bf63768a7">RoundScalarWithFormatT</link> (const char *<link linkend="_imgui__impl__opengl3__loader_8h_1a1e3b09934060e9d373139c3557730d37">format</link>, <link linkend="_imgui_8h_1a4cfa8697a3d76722fff83eb18922e9d5">ImGuiDataType</link> data_type, T v)</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a7d9caed9bd337c54cf2a9dbdf913db26">CheckboxFlagsT</link> (const char *label, T *flags, T flags_value)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> const <link linkend="_struct_im_gui_data_type_info">ImGuiDataTypeInfo</link> * <link linkend="_namespace_im_gui_1a5b25ed1443e5a28d5a5725892e896578">DataTypeGetInfo</link> (<link linkend="_imgui_8h_1a4cfa8697a3d76722fff83eb18922e9d5">ImGuiDataType</link> data_type)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> int <link linkend="_namespace_im_gui_1a5fda8e22d0e4721940aefcb7232b1f82">DataTypeFormatString</link> (char *buf, int buf_size, <link linkend="_imgui_8h_1a4cfa8697a3d76722fff83eb18922e9d5">ImGuiDataType</link> data_type, const <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *p_data, const char *<link linkend="_imgui__impl__opengl3__loader_8h_1a1e3b09934060e9d373139c3557730d37">format</link>)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1ad8428ae139bf4e90fda66ab60476a13c">DataTypeApplyOp</link> (<link linkend="_imgui_8h_1a4cfa8697a3d76722fff83eb18922e9d5">ImGuiDataType</link> data_type, int op, <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *output, const <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *arg_1, const <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *arg_2)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a9f41fa3efd7fbe96e20bad82ff5bdbbc">DataTypeApplyFromText</link> (const char *buf, <link linkend="_imgui_8h_1a4cfa8697a3d76722fff83eb18922e9d5">ImGuiDataType</link> data_type, <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *p_data, const char *<link linkend="_imgui__impl__opengl3__loader_8h_1a1e3b09934060e9d373139c3557730d37">format</link>)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> int <link linkend="_namespace_im_gui_1aa859c7a74393669eb8418a82b5b174e7">DataTypeCompare</link> (<link linkend="_imgui_8h_1a4cfa8697a3d76722fff83eb18922e9d5">ImGuiDataType</link> data_type, const <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *arg_1, const <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *arg_2)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1adf9cbe8f8af33cba51b481e9b99cca1a">DataTypeClamp</link> (<link linkend="_imgui_8h_1a4cfa8697a3d76722fff83eb18922e9d5">ImGuiDataType</link> data_type, <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *p_data, const <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *p_min, const <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *p_max)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1af89af17ecc11653f25fea1e50e195de6">InputTextEx</link> (const char *label, const char *hint, char *buf, int buf_size, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;size_arg, <link linkend="_imgui_8h_1a7d2c6153a6b9b5d3178ce82434ac9fb8">ImGuiInputTextFlags</link> flags, <link linkend="_imgui_8h_1a65fd2b568a62c9aa2a28a8a13eb65ad7">ImGuiInputTextCallback</link> callback=NULL, <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *user_data=NULL)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1aad9419cf6e296c668807e3af4bfd62bb">InputTextDeactivateHook</link> (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1ae85def71d2fcf5409035b583b315964e">TempInputText</link> (const <link linkend="_struct_im_rect">ImRect</link> &amp;bb, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id, const char *label, char *buf, int buf_size, <link linkend="_imgui_8h_1a7d2c6153a6b9b5d3178ce82434ac9fb8">ImGuiInputTextFlags</link> flags)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1a392fed3e7db2a75abf217bf84c6abce9">TempInputScalar</link> (const <link linkend="_struct_im_rect">ImRect</link> &amp;bb, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id, const char *label, <link linkend="_imgui_8h_1a4cfa8697a3d76722fff83eb18922e9d5">ImGuiDataType</link> data_type, <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *p_data, const char *<link linkend="_imgui__impl__opengl3__loader_8h_1a1e3b09934060e9d373139c3557730d37">format</link>, const <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *p_clamp_min=NULL, const <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *p_clamp_max=NULL)</para>
</listitem>
            <listitem><para>bool <link linkend="_namespace_im_gui_1a4e5c8dd9a681f3b8f8f36b07d84ae0e5">TempInputIsActive</link> (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id)</para>
</listitem>
            <listitem><para><link linkend="_struct_im_gui_input_text_state">ImGuiInputTextState</link> * <link linkend="_namespace_im_gui_1a93881467b5800a52508dda7ce32cf875">GetInputTextState</link> (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1afad90b366b6471e3b13175c0ebeb26c8">ColorTooltip</link> (const char *text, const float *col, <link linkend="_imgui_8h_1a6b2d5e95adc38f22c021252189f669c6">ImGuiColorEditFlags</link> flags)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a6bfb117816d669f8704e5d0c0c0795fe">ColorEditOptionsPopup</link> (const float *col, <link linkend="_imgui_8h_1a6b2d5e95adc38f22c021252189f669c6">ImGuiColorEditFlags</link> flags)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a6d112eeb6d8ffdebbc9d9a8c66babbee">ColorPickerOptionsPopup</link> (const float *ref_col, <link linkend="_imgui_8h_1a6b2d5e95adc38f22c021252189f669c6">ImGuiColorEditFlags</link> flags)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> int <link linkend="_namespace_im_gui_1afb3147b9a00e396e0b11a1bfe24b8f42">PlotEx</link> (<link linkend="_imgui__internal_8h_1a9d5efcdd8895aa3544f1e8ce366c2728">ImGuiPlotType</link> plot_type, const char *label, float(*values_getter)(<link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *<link linkend="_imgui__impl__opengl3__loader_8h_1abd87654504355b4c1bb002dcb1d4d16a">data</link>, int idx), <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *<link linkend="_imgui__impl__opengl3__loader_8h_1abd87654504355b4c1bb002dcb1d4d16a">data</link>, int values_count, int values_offset, const char *overlay_text, float scale_min, float scale_max, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;size_arg)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1acd137f6ee31f657e539eaa7e62f4f28a">ShadeVertsLinearColorGradientKeepAlpha</link> (<link linkend="_struct_im_draw_list">ImDrawList</link> *draw_list, int vert_start_idx, int vert_end_idx, <link linkend="_struct_im_vec2">ImVec2</link> gradient_p0, <link linkend="_struct_im_vec2">ImVec2</link> gradient_p1, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col0, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col1)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a676637659ec4291b07f386454840b58a">ShadeVertsLinearUV</link> (<link linkend="_struct_im_draw_list">ImDrawList</link> *draw_list, int vert_start_idx, int vert_end_idx, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;a, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;b, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;uv_a, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;uv_b, bool clamp)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a88fb69f1ac18ffb7925aa1c77fb7c37c">ShadeVertsTransformPos</link> (<link linkend="_struct_im_draw_list">ImDrawList</link> *draw_list, int vert_start_idx, int vert_end_idx, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;pivot_in, float cos_a, float sin_a, const <link linkend="_struct_im_vec2">ImVec2</link> &amp;pivot_out)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1aab0d052a1581fddc1cc2d9d981f487c0">GcCompactTransientMiscBuffers</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a8386015888f38f2a33528ccbb34bd49d">GcCompactTransientWindowBuffers</link> (<link linkend="_struct_im_gui_window">ImGuiWindow</link> *window)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1ad70feca33961fb47a8074074a8da2f80">GcAwakeTransientWindowBuffers</link> (<link linkend="_struct_im_gui_window">ImGuiWindow</link> *window)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1aaa66ae54a7078d4e14d957b85571f6d0">DebugLog</link> (const char *fmt,...) <link linkend="_imgui_8h_1a1251c2f9ddac0873dbad8181bd82c9f1">IM_FMTARGS</link>(1)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1afa024e012e162b5a7904b848e1d8d92e">DebugLogV</link> (const char *fmt, va_list args) <link linkend="_imgui_8h_1a047693beb7f899f5deab1e20202016b3">IM_FMTLIST</link>(1)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1af81dc8d88fa2e5d0996163993f90ccf8">DebugAllocHook</link> (<link linkend="_struct_im_gui_debug_alloc_info">ImGuiDebugAllocInfo</link> *info, int frame_count, <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *ptr, size_t <link linkend="_imgui__impl__opengl3__loader_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1aaeda60ee2c0b5c2b3f397b237c9928f3">ErrorCheckEndFrameRecover</link> (<link linkend="_imgui__internal_8h_1af128655e687b027c18655e3bfde4b11e">ImGuiErrorLogCallback</link> log_callback, <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *user_data=NULL)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a945392cbf05b9434df8ec3630b10e01a">ErrorCheckEndWindowRecover</link> (<link linkend="_imgui__internal_8h_1af128655e687b027c18655e3bfde4b11e">ImGuiErrorLogCallback</link> log_callback, <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *user_data=NULL)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1ad5832500c14abd9e76e376b82701385b">ErrorCheckUsingSetCursorPosToExtendParentBoundaries</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1acb408b735302ddd3868a564ff48ccada">DebugDrawCursorPos</link> (<link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col=<link linkend="_imgui_8h_1a123bd4e23eb51ac9dced93eab78c4456">IM_COL32</link>(255, 0, 0, 255))</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1ab713aeb3cce417a0967e4c3ccb13ddac">DebugDrawLineExtents</link> (<link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col=<link linkend="_imgui_8h_1a123bd4e23eb51ac9dced93eab78c4456">IM_COL32</link>(255, 0, 0, 255))</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1acdcfb1608a3e75c4700427f81c0a52ac">DebugDrawItemRect</link> (<link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col=<link linkend="_imgui_8h_1a123bd4e23eb51ac9dced93eab78c4456">IM_COL32</link>(255, 0, 0, 255))</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a5fcfd58a344ca39b4575074c009f0767">DebugLocateItem</link> (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> target_id)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a76cc1722d10c66a7d5bb7e794487a0aa">DebugLocateItemOnHover</link> (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> target_id)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1ae8ab0d7dfc90af8e82db3ed9e7829219">DebugLocateItemResolveWithLastItem</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1ace738067ae44f9c202fed48a443608d9">DebugBreakClearData</link> ()</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool <link linkend="_namespace_im_gui_1ac2e737b701b4d252a54006a4c4214928">DebugBreakButton</link> (const char *label, const char *description_of_location)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a6f2a211be11756216a881936bc6d9aab">DebugBreakButtonTooltip</link> (bool keyboard_only, const char *description_of_location)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a5487269f4cb9fb809fd3e797411ed2d7">DebugHookIdInfo</link> (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id, <link linkend="_imgui_8h_1a4cfa8697a3d76722fff83eb18922e9d5">ImGuiDataType</link> data_type, const <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *data_id, const <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *data_id_end)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a68c10eb20be9c419d00f2b5a9dfa6a38">DebugNodeColumns</link> (<link linkend="_struct_im_gui_old_columns">ImGuiOldColumns</link> *columns)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a8600f7b1f9b18926fb00837e56d2b3cd">DebugNodeDockNode</link> (<link linkend="_struct_im_gui_dock_node">ImGuiDockNode</link> *node, const char *label)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1af7b5e35566da44ac1ea8a7e1b9d9d574">DebugNodeDrawList</link> (<link linkend="_struct_im_gui_window">ImGuiWindow</link> *window, <link linkend="_struct_im_gui_viewport_p">ImGuiViewportP</link> *viewport, const <link linkend="_struct_im_draw_list">ImDrawList</link> *draw_list, const char *label)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a24c6abd61c6da9610cbfbb46c0db828b">DebugNodeDrawCmdShowMeshAndBoundingBox</link> (<link linkend="_struct_im_draw_list">ImDrawList</link> *out_draw_list, const <link linkend="_struct_im_draw_list">ImDrawList</link> *draw_list, const <link linkend="_struct_im_draw_cmd">ImDrawCmd</link> *draw_cmd, bool show_mesh, bool show_aabb)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1ae0207d60728f7e6a47dbcd1d7d84e3cb">DebugNodeFont</link> (<link linkend="_struct_im_font">ImFont</link> *font)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1ad57d7756b61feecb86a3f25dc2a526f3">DebugNodeFontGlyph</link> (<link linkend="_struct_im_font">ImFont</link> *font, const <link linkend="_struct_im_font_glyph">ImFontGlyph</link> *glyph)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a8e1aae1a79042976013f36d7f2e7ee70">DebugNodeStorage</link> (<link linkend="_struct_im_gui_storage">ImGuiStorage</link> *storage, const char *label)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1ac5f1a2b50c26c83d3df78d94e95f0bd0">DebugNodeTabBar</link> (<link linkend="_struct_im_gui_tab_bar">ImGuiTabBar</link> *tab_bar, const char *label)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1ae944ffc599add73d6f3220165475ffd8">DebugNodeTable</link> (<link linkend="_struct_im_gui_table">ImGuiTable</link> *table)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a476f5fea6e50fae946a366567da7f89f">DebugNodeTableSettings</link> (<link linkend="_struct_im_gui_table_settings">ImGuiTableSettings</link> *settings)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1ab85df47e899ab32dbdd5089f40e3802f">DebugNodeInputTextState</link> (<link linkend="_struct_im_gui_input_text_state">ImGuiInputTextState</link> *state)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a1a1cf844de2c29d4221fefd7553bc6fa">DebugNodeTypingSelectState</link> (<link linkend="_struct_im_gui_typing_select_state">ImGuiTypingSelectState</link> *state)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1afcb602554925c5409977f0fb39f77e5d">DebugNodeWindow</link> (<link linkend="_struct_im_gui_window">ImGuiWindow</link> *window, const char *label)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1ad843ddd00b2e6f8182c2bac52bcd9bdc">DebugNodeWindowSettings</link> (<link linkend="_struct_im_gui_window_settings">ImGuiWindowSettings</link> *settings)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a8c2ed9f140c90d8eaca1e2cfd8f46142">DebugNodeWindowsList</link> (<link linkend="_struct_im_vector">ImVector</link>&lt; <link linkend="_struct_im_gui_window">ImGuiWindow</link> * &gt; *windows, const char *label)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a0fc8019faf3a1aec25b554384ad9e506">DebugNodeWindowsListByBeginStackParent</link> (<link linkend="_struct_im_gui_window">ImGuiWindow</link> **windows, int windows_size, <link linkend="_struct_im_gui_window">ImGuiWindow</link> *parent_in_begin_stack)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1aa5e5f50f28c04a26264c0943c7281171">DebugNodeViewport</link> (<link linkend="_struct_im_gui_viewport_p">ImGuiViewportP</link> *viewport)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1a1355ddf2e5435da21acf2a9944b52ab4">DebugRenderKeyboardPreview</link> (<link linkend="_struct_im_draw_list">ImDrawList</link> *draw_list)</para>
</listitem>
            <listitem><para><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1af7de4b5c98ba30dbadce44e1f1066ba8">DebugRenderViewportThumbnail</link> (<link linkend="_struct_im_draw_list">ImDrawList</link> *draw_list, <link linkend="_struct_im_gui_viewport_p">ImGuiViewportP</link> *viewport, const <link linkend="_struct_im_rect">ImRect</link> &amp;bb)</para>
</listitem>
            <listitem><para><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> <link linkend="_namespace_im_gui_1ae75ca4e359488f5cfcb5c0169f9e75c5">SetItemUsingMouseWheel</link> ()</para>
</listitem>
            <listitem><para>bool <link linkend="_namespace_im_gui_1a22cc50485aad6da8a3a4e156b500ed4a">TreeNodeBehaviorIsOpen</link> (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id, <link linkend="_imgui_8h_1a0588fdd10c59b49a0159484fe9ec4564">ImGuiTreeNodeFlags</link> flags=0)</para>
</listitem>
            <listitem><para>bool <link linkend="_namespace_im_gui_1aa4c4806c81aef3abe125b209f19d4a2b">IsKeyPressedMap</link> (<link linkend="_imgui_8h_1aa22ffe36b188427d712447ec465203d4">ImGuiKey</link> key, bool repeat=true)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Variables    </title>
        <itemizedlist>
            <listitem><para>const <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> <link linkend="_namespace_im_gui_1aa7a318e32bff29010e015a15ab6b6067">IMGUI_VIEWPORT_DEFAULT_ID</link> = 0x11111111</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Function Documentation</title>
<anchor xml:id="_namespace_im_gui_1a5e0dac39e249bf50e2ae96dc4a97cb18"/><section>
    <title>AcceptDragDropPayload()</title>
<indexterm><primary>AcceptDragDropPayload</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>AcceptDragDropPayload</secondary></indexterm>
<para><computeroutput>const <link linkend="_struct_im_gui_payload">ImGuiPayload</link> * ImGui::AcceptDragDropPayload (const char * type, <link linkend="_imgui_8h_1a4e54f95ded29d2584125d116df22e430">ImGuiDragDropFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a155c653da8d562c00e7b4a9b7335c558"/><section>
    <title>ActivateItemByID()</title>
<indexterm><primary>ActivateItemByID</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>ActivateItemByID</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::ActivateItemByID (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a1e7bb4d83fee6646718773e5746e53ad"/><section>
    <title>AddContextHook()</title>
<indexterm><primary>AddContextHook</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>AddContextHook</secondary></indexterm>
<para><computeroutput><link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> ImGui::AddContextHook (<link linkend="_struct_im_gui_context">ImGuiContext</link> * context, const <link linkend="_struct_im_gui_context_hook">ImGuiContextHook</link> * hook)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a0074bb825de97c5602d9d9bb2e4d49d4"/><section>
    <title>AddDrawListToDrawDataEx()</title>
<indexterm><primary>AddDrawListToDrawDataEx</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>AddDrawListToDrawDataEx</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::AddDrawListToDrawDataEx (<link linkend="_struct_im_draw_data">ImDrawData</link> * draw_data, <link linkend="_struct_im_vector">ImVector</link>&lt; <link linkend="_struct_im_draw_list">ImDrawList</link> * &gt; * out_list, <link linkend="_struct_im_draw_list">ImDrawList</link> * draw_list)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ade13c9d3114fb2fae235a29a6388495d"/><section>
    <title>AddSettingsHandler()</title>
<indexterm><primary>AddSettingsHandler</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>AddSettingsHandler</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::AddSettingsHandler (const <link linkend="_struct_im_gui_settings_handler">ImGuiSettingsHandler</link> * handler)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ae14be3a3bec106de7c91aaa2a9a558a1"/><section>
    <title>AlignTextToFramePadding()</title>
<indexterm><primary>AlignTextToFramePadding</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>AlignTextToFramePadding</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::AlignTextToFramePadding ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ad2bc397a02d5e4b8a14360d89abc6242"/><section>
    <title>ArrowButton()</title>
<indexterm><primary>ArrowButton</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>ArrowButton</secondary></indexterm>
<para><computeroutput>bool ImGui::ArrowButton (const char * str_id, <link linkend="_imgui_8h_1a874086389bc27cc9647118d22a806403">ImGuiDir</link> dir)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ab05ee8e53f29fbb84942a494f2ac3292"/><section>
    <title>ArrowButtonEx()</title>
<indexterm><primary>ArrowButtonEx</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>ArrowButtonEx</secondary></indexterm>
<para><computeroutput>bool ImGui::ArrowButtonEx (const char * str_id, <link linkend="_imgui_8h_1a874086389bc27cc9647118d22a806403">ImGuiDir</link> dir, <link linkend="_struct_im_vec2">ImVec2</link> size_arg, <link linkend="_imgui_8h_1a990fae518aa1d95f571ee40989de4c22">ImGuiButtonFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a581e58db0bc930bafa4a5d23093a2b99"/><section>
    <title>Begin()</title>
<indexterm><primary>Begin</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>Begin</secondary></indexterm>
<para><computeroutput>bool ImGui::Begin (const char * name, bool * p_open = <computeroutput>NULL</computeroutput>
, <link linkend="_imgui_8h_1a0b8e067ab4f7a818828c8d89e531addc">ImGuiWindowFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aebac8b07ee9ea0e452c98813a3e907c3"/><section>
    <title>BeginChild()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>BeginChild</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>BeginChild</secondary></indexterm>
<para><computeroutput>bool ImGui::BeginChild (const char * str_id, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; size = <computeroutput><link linkend="_struct_im_vec2">ImVec2</link>(0,&#160;0)</computeroutput>
, <link linkend="_imgui_8h_1aa08bedfb80be3701d8c8d7b218c5a5d0">ImGuiChildFlags</link> child_flags = <computeroutput>0</computeroutput>
, <link linkend="_imgui_8h_1a0b8e067ab4f7a818828c8d89e531addc">ImGuiWindowFlags</link> window_flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a3824e63145d50dd477deec2c7edf5c5a"/><section>
    <title>BeginChild()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>BeginChild</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>BeginChild</secondary></indexterm>
<para><computeroutput>bool ImGui::BeginChild (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; size = <computeroutput><link linkend="_struct_im_vec2">ImVec2</link>(0,&#160;0)</computeroutput>
, <link linkend="_imgui_8h_1aa08bedfb80be3701d8c8d7b218c5a5d0">ImGuiChildFlags</link> child_flags = <computeroutput>0</computeroutput>
, <link linkend="_imgui_8h_1a0b8e067ab4f7a818828c8d89e531addc">ImGuiWindowFlags</link> window_flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ac36ecce0443f0b45a48484d85f653ae2"/><section>
    <title>BeginChildEx()</title>
<indexterm><primary>BeginChildEx</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>BeginChildEx</secondary></indexterm>
<para><computeroutput>bool ImGui::BeginChildEx (const char * name, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; size_arg, <link linkend="_imgui_8h_1aa08bedfb80be3701d8c8d7b218c5a5d0">ImGuiChildFlags</link> child_flags, <link linkend="_imgui_8h_1a0b8e067ab4f7a818828c8d89e531addc">ImGuiWindowFlags</link> window_flags)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a303fae66ef07f4f86ab242cf81021060"/><section>
    <title>BeginColumns()</title>
<indexterm><primary>BeginColumns</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>BeginColumns</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::BeginColumns (const char * str_id, int count, <link linkend="_imgui__internal_8h_1a930931ec4c54582a278a461676df4dda">ImGuiOldColumnFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aa895095bdc7a2907375c555e245575ea"/><section>
    <title>BeginCombo()</title>
<indexterm><primary>BeginCombo</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>BeginCombo</secondary></indexterm>
<para><computeroutput>bool ImGui::BeginCombo (const char * label, const char * preview_value, <link linkend="_imgui_8h_1aae31d1cfbcc55ae20b4122a7149d435e">ImGuiComboFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a6ecb51142fcb72cd19ff002c3a7d8e25"/><section>
    <title>BeginComboPopup()</title>
<indexterm><primary>BeginComboPopup</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>BeginComboPopup</secondary></indexterm>
<para><computeroutput>bool ImGui::BeginComboPopup (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> popup_id, const <link linkend="_struct_im_rect">ImRect</link> &amp; bb, <link linkend="_imgui_8h_1aae31d1cfbcc55ae20b4122a7149d435e">ImGuiComboFlags</link> flags)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1af01e0208ad7266965d3812a5198411f8"/><section>
    <title>BeginComboPreview()</title>
<indexterm><primary>BeginComboPreview</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>BeginComboPreview</secondary></indexterm>
<para><computeroutput>bool ImGui::BeginComboPreview ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ae90e9a26f01d0d45f6bf7ca720d170d1"/><section>
    <title>BeginDisabled()</title>
<indexterm><primary>BeginDisabled</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>BeginDisabled</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::BeginDisabled (bool disabled = <computeroutput>true</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a7a435b1565d4884e42a5ee5667f21a1f"/><section>
    <title>BeginDockableDragDropSource()</title>
<indexterm><primary>BeginDockableDragDropSource</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>BeginDockableDragDropSource</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::BeginDockableDragDropSource (<link linkend="_struct_im_gui_window">ImGuiWindow</link> * window)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a1725ff3becdb963b97c16d69d4c9f308"/><section>
    <title>BeginDockableDragDropTarget()</title>
<indexterm><primary>BeginDockableDragDropTarget</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>BeginDockableDragDropTarget</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::BeginDockableDragDropTarget (<link linkend="_struct_im_gui_window">ImGuiWindow</link> * window)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a627bb85e7c0ab597360f63719bfb1e55"/><section>
    <title>BeginDocked()</title>
<indexterm><primary>BeginDocked</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>BeginDocked</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::BeginDocked (<link linkend="_struct_im_gui_window">ImGuiWindow</link> * window, bool * p_open)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ac2609b0f034d3bcd8d70d26df8694eaa"/><section>
    <title>BeginDragDropSource()</title>
<indexterm><primary>BeginDragDropSource</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>BeginDragDropSource</secondary></indexterm>
<para><computeroutput>bool ImGui::BeginDragDropSource (<link linkend="_imgui_8h_1a4e54f95ded29d2584125d116df22e430">ImGuiDragDropFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ac42384c3181406bbd0f3f4f77a73c7ed"/><section>
    <title>BeginDragDropTarget()</title>
<indexterm><primary>BeginDragDropTarget</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>BeginDragDropTarget</secondary></indexterm>
<para><computeroutput>bool ImGui::BeginDragDropTarget ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a929a420d3af29051a140d0f36addbcd2"/><section>
    <title>BeginDragDropTargetCustom()</title>
<indexterm><primary>BeginDragDropTargetCustom</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>BeginDragDropTargetCustom</secondary></indexterm>
<para><computeroutput>bool ImGui::BeginDragDropTargetCustom (const <link linkend="_struct_im_rect">ImRect</link> &amp; bb, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a42407e196b7ed2a8755bff28aae9805f"/><section>
    <title>BeginGroup()</title>
<indexterm><primary>BeginGroup</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>BeginGroup</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::BeginGroup ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a0557ed1d3f89dcb5d25311bf3099ddf5"/><section>
    <title>BeginItemTooltip()</title>
<indexterm><primary>BeginItemTooltip</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>BeginItemTooltip</secondary></indexterm>
<para><computeroutput>bool ImGui::BeginItemTooltip ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a2f37c541760a39c189ebdd86c15b60d9"/><section>
    <title>BeginListBox()</title>
<indexterm><primary>BeginListBox</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>BeginListBox</secondary></indexterm>
<para><computeroutput>bool ImGui::BeginListBox (const char * label, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; size = <computeroutput><link linkend="_struct_im_vec2">ImVec2</link>(0,&#160;0)</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a55cb9cfb9865204ac6fb21c965784f78"/><section>
    <title>BeginMainMenuBar()</title>
<indexterm><primary>BeginMainMenuBar</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>BeginMainMenuBar</secondary></indexterm>
<para><computeroutput>bool ImGui::BeginMainMenuBar ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a1e55711a21f97d5dff919d697d3a7201"/><section>
    <title>BeginMenu()</title>
<indexterm><primary>BeginMenu</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>BeginMenu</secondary></indexterm>
<para><computeroutput>bool ImGui::BeginMenu (const char * label, bool enabled = <computeroutput>true</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a4852dff802922163fc747e2e0df5b88f"/><section>
    <title>BeginMenuBar()</title>
<indexterm><primary>BeginMenuBar</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>BeginMenuBar</secondary></indexterm>
<para><computeroutput>bool ImGui::BeginMenuBar ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a8dc671f87ed281b6445ce6ae4ab25183"/><section>
    <title>BeginMenuEx()</title>
<indexterm><primary>BeginMenuEx</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>BeginMenuEx</secondary></indexterm>
<para><computeroutput>bool ImGui::BeginMenuEx (const char * label, const char * icon, bool enabled = <computeroutput>true</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a10e213926d8ca212266bc5fbded1e026"/><section>
    <title>BeginPopup()</title>
<indexterm><primary>BeginPopup</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>BeginPopup</secondary></indexterm>
<para><computeroutput>bool ImGui::BeginPopup (const char * str_id, <link linkend="_imgui_8h_1a0b8e067ab4f7a818828c8d89e531addc">ImGuiWindowFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a440894c8c00495d5cc01529f4504fca9"/><section>
    <title>BeginPopupContextItem()</title>
<indexterm><primary>BeginPopupContextItem</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>BeginPopupContextItem</secondary></indexterm>
<para><computeroutput>bool ImGui::BeginPopupContextItem (const char * str_id = <computeroutput>NULL</computeroutput>
, <link linkend="_imgui_8h_1af06c83fd0d1f3442139f0a5459b5a18a">ImGuiPopupFlags</link> popup_flags = <computeroutput>1</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a6758a456204101a9c4a660da4cfba2c9"/><section>
    <title>BeginPopupContextVoid()</title>
<indexterm><primary>BeginPopupContextVoid</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>BeginPopupContextVoid</secondary></indexterm>
<para><computeroutput>bool ImGui::BeginPopupContextVoid (const char * str_id = <computeroutput>NULL</computeroutput>
, <link linkend="_imgui_8h_1af06c83fd0d1f3442139f0a5459b5a18a">ImGuiPopupFlags</link> popup_flags = <computeroutput>1</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aef8b2c0baa27bd5c68f676aaf14ed946"/><section>
    <title>BeginPopupContextWindow()</title>
<indexterm><primary>BeginPopupContextWindow</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>BeginPopupContextWindow</secondary></indexterm>
<para><computeroutput>bool ImGui::BeginPopupContextWindow (const char * str_id = <computeroutput>NULL</computeroutput>
, <link linkend="_imgui_8h_1af06c83fd0d1f3442139f0a5459b5a18a">ImGuiPopupFlags</link> popup_flags = <computeroutput>1</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a89da3a22300e8293257b6cfdf1b83b7a"/><section>
    <title>BeginPopupEx()</title>
<indexterm><primary>BeginPopupEx</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>BeginPopupEx</secondary></indexterm>
<para><computeroutput>bool ImGui::BeginPopupEx (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id, <link linkend="_imgui_8h_1a0b8e067ab4f7a818828c8d89e531addc">ImGuiWindowFlags</link> extra_flags)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a6d840f615c198c2342968f733fda11b3"/><section>
    <title>BeginPopupModal()</title>
<indexterm><primary>BeginPopupModal</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>BeginPopupModal</secondary></indexterm>
<para><computeroutput>bool ImGui::BeginPopupModal (const char * name, bool * p_open = <computeroutput>NULL</computeroutput>
, <link linkend="_imgui_8h_1a0b8e067ab4f7a818828c8d89e531addc">ImGuiWindowFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ab930db04eeff13f78ae76382c52db7eb"/><section>
    <title>BeginTabBar()</title>
<indexterm><primary>BeginTabBar</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>BeginTabBar</secondary></indexterm>
<para><computeroutput>bool ImGui::BeginTabBar (const char * str_id, <link linkend="_imgui_8h_1a60ced774e9c7a4f73c41ef4feb91a30a">ImGuiTabBarFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ae630dd2237aa12e9a306af817d8996c3"/><section>
    <title>BeginTabBarEx()</title>
<indexterm><primary>BeginTabBarEx</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>BeginTabBarEx</secondary></indexterm>
<para><computeroutput>bool ImGui::BeginTabBarEx (<link linkend="_struct_im_gui_tab_bar">ImGuiTabBar</link> * tab_bar, const <link linkend="_struct_im_rect">ImRect</link> &amp; bb, <link linkend="_imgui_8h_1a60ced774e9c7a4f73c41ef4feb91a30a">ImGuiTabBarFlags</link> flags)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a4cee1ccc9018a298cfff90a704bde8ca"/><section>
    <title>BeginTabItem()</title>
<indexterm><primary>BeginTabItem</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>BeginTabItem</secondary></indexterm>
<para><computeroutput>bool ImGui::BeginTabItem (const char * label, bool * p_open = <computeroutput>NULL</computeroutput>
, <link linkend="_imgui_8h_1aec9b231c0bca6ab9afc507ccfe60d872">ImGuiTabItemFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a04ee4f6866b8e10b98008e7f19d35796"/><section>
    <title>BeginTable()</title>
<indexterm><primary>BeginTable</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>BeginTable</secondary></indexterm>
<para><computeroutput>bool ImGui::BeginTable (const char * str_id, int column, <link linkend="_imgui_8h_1ad3032e379f8aba2cb5c31b05cd40858d">ImGuiTableFlags</link> flags = <computeroutput>0</computeroutput>
, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; outer_size = <computeroutput><link linkend="_struct_im_vec2">ImVec2</link>(0.0f,&#160;0.0f)</computeroutput>
, float inner_width = <computeroutput>0.0f</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a28046a30716afeb7738a82a5b19044ca"/><section>
    <title>BeginTableEx()</title>
<indexterm><primary>BeginTableEx</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>BeginTableEx</secondary></indexterm>
<para><computeroutput>bool ImGui::BeginTableEx (const char * name, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id, int columns_count, <link linkend="_imgui_8h_1ad3032e379f8aba2cb5c31b05cd40858d">ImGuiTableFlags</link> flags = <computeroutput>0</computeroutput>
, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; outer_size = <computeroutput><link linkend="_struct_im_vec2">ImVec2</link>(0,&#160;0)</computeroutput>
, float inner_width = <computeroutput>0.0f</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a0609fbb218702a720c383c87d0c545a2"/><section>
    <title>BeginTooltip()</title>
<indexterm><primary>BeginTooltip</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>BeginTooltip</secondary></indexterm>
<para><computeroutput>bool ImGui::BeginTooltip ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a18b17a0b20c3f2a16068b84210cfded4"/><section>
    <title>BeginTooltipEx()</title>
<indexterm><primary>BeginTooltipEx</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>BeginTooltipEx</secondary></indexterm>
<para><computeroutput>bool ImGui::BeginTooltipEx (<link linkend="_imgui__internal_8h_1ad3bdaebce9ed8c9ce2f572ac419ffb71">ImGuiTooltipFlags</link> tooltip_flags, <link linkend="_imgui_8h_1a0b8e067ab4f7a818828c8d89e531addc">ImGuiWindowFlags</link> extra_window_flags)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a2c44a13b5e210dbfc7de98024c25db8e"/><section>
    <title>BeginTooltipHidden()</title>
<indexterm><primary>BeginTooltipHidden</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>BeginTooltipHidden</secondary></indexterm>
<para><computeroutput>bool ImGui::BeginTooltipHidden ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a4216382dd5ad6c17e183f9f894db2e15"/><section>
    <title>BeginViewportSideBar()</title>
<indexterm><primary>BeginViewportSideBar</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>BeginViewportSideBar</secondary></indexterm>
<para><computeroutput>bool ImGui::BeginViewportSideBar (const char * name, <link linkend="_struct_im_gui_viewport">ImGuiViewport</link> * viewport, <link linkend="_imgui_8h_1a874086389bc27cc9647118d22a806403">ImGuiDir</link> dir, float size, <link linkend="_imgui_8h_1a0b8e067ab4f7a818828c8d89e531addc">ImGuiWindowFlags</link> window_flags)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a34d2363f631f1df5ab1a2a131ab98fa7"/><section>
    <title>BringWindowToDisplayBack()</title>
<indexterm><primary>BringWindowToDisplayBack</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>BringWindowToDisplayBack</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::BringWindowToDisplayBack (<link linkend="_struct_im_gui_window">ImGuiWindow</link> * window)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a8cae2f7a08f820a8d5349d1964603b20"/><section>
    <title>BringWindowToDisplayBehind()</title>
<indexterm><primary>BringWindowToDisplayBehind</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>BringWindowToDisplayBehind</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::BringWindowToDisplayBehind (<link linkend="_struct_im_gui_window">ImGuiWindow</link> * window, <link linkend="_struct_im_gui_window">ImGuiWindow</link> * above_window)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a1f7b95f36d03751c928af7b1b745e959"/><section>
    <title>BringWindowToDisplayFront()</title>
<indexterm><primary>BringWindowToDisplayFront</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>BringWindowToDisplayFront</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::BringWindowToDisplayFront (<link linkend="_struct_im_gui_window">ImGuiWindow</link> * window)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1affe95a2dc969f0d15fbd4b588c94ac1a"/><section>
    <title>BringWindowToFocusFront()</title>
<indexterm><primary>BringWindowToFocusFront</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>BringWindowToFocusFront</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::BringWindowToFocusFront (<link linkend="_struct_im_gui_window">ImGuiWindow</link> * window)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ae2d22212681556d2c2398dfd152f3121"/><section>
    <title>Bullet()</title>
<indexterm><primary>Bullet</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>Bullet</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::Bullet ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1af8d34d563b17c683943a0fa7bf5807bc"/><section>
    <title>BulletText()</title>
<indexterm><primary>BulletText</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>BulletText</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::BulletText (const char * fmt,  ...)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1af8f4b5e96c745e205974857f9a584583"/><section>
    <title>BulletTextV()</title>
<indexterm><primary>BulletTextV</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>BulletTextV</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::BulletTextV (const char * fmt, va_list args)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a38094c568ce398db5a3abb9d3ac92030"/><section>
    <title>Button()</title>
<indexterm><primary>Button</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>Button</secondary></indexterm>
<para><computeroutput>bool ImGui::Button (const char * label, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; size = <computeroutput><link linkend="_struct_im_vec2">ImVec2</link>(0,&#160;0)</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a65a4f18b1bc8ce0f351687922089f374"/><section>
    <title>ButtonBehavior()</title>
<indexterm><primary>ButtonBehavior</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>ButtonBehavior</secondary></indexterm>
<para><computeroutput>bool ImGui::ButtonBehavior (const <link linkend="_struct_im_rect">ImRect</link> &amp; bb, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id, bool * out_hovered, bool * out_held, <link linkend="_imgui_8h_1a990fae518aa1d95f571ee40989de4c22">ImGuiButtonFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ae479220c66b039874c6e4c9e9b22849f"/><section>
    <title>ButtonEx()</title>
<indexterm><primary>ButtonEx</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>ButtonEx</secondary></indexterm>
<para><computeroutput>bool ImGui::ButtonEx (const char * label, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; size_arg = <computeroutput><link linkend="_struct_im_vec2">ImVec2</link>(0,&#160;0)</computeroutput>
, <link linkend="_imgui_8h_1a990fae518aa1d95f571ee40989de4c22">ImGuiButtonFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1acaef0497f7982dd98bf215e50129cd9b"/><section>
    <title>CalcItemSize()</title>
<indexterm><primary>CalcItemSize</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>CalcItemSize</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_vec2">ImVec2</link> ImGui::CalcItemSize (<link linkend="_struct_im_vec2">ImVec2</link> size, float default_w, float default_h)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ab3b3ba92ebd8bca4a552dd93321a1994"/><section>
    <title>CalcItemWidth()</title>
<indexterm><primary>CalcItemWidth</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>CalcItemWidth</secondary></indexterm>
<para><computeroutput>float ImGui::CalcItemWidth ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a98d32cee83e1357a9a4abbd823712a38"/><section>
    <title>CalcRoundingFlagsForRectInRect()</title>
<indexterm><primary>CalcRoundingFlagsForRectInRect</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>CalcRoundingFlagsForRectInRect</secondary></indexterm>
<para><computeroutput><link linkend="_imgui_8h_1af2ef7e1341558a1d39aa244c1257780a">ImDrawFlags</link> ImGui::CalcRoundingFlagsForRectInRect (const <link linkend="_struct_im_rect">ImRect</link> &amp; r_in, const <link linkend="_struct_im_rect">ImRect</link> &amp; r_outer, float threshold)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a848b9db6cc4a186751c0ecebcaadc33b"/><section>
    <title>CalcTextSize()</title>
<indexterm><primary>CalcTextSize</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>CalcTextSize</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_vec2">ImVec2</link> ImGui::CalcTextSize (const char * text, const char * text_end = <computeroutput>NULL</computeroutput>
, bool hide_text_after_double_hash = <computeroutput>false</computeroutput>
, float wrap_width = <computeroutput>-1.0f</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ab9804506fa0fe8823f63eadb3043916f"/><section>
    <title>CalcTypematicRepeatAmount()</title>
<indexterm><primary>CalcTypematicRepeatAmount</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>CalcTypematicRepeatAmount</secondary></indexterm>
<para><computeroutput>int ImGui::CalcTypematicRepeatAmount (float t0, float t1, float repeat_delay, float repeat_rate)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aa306c009063e86091ed61d80d4d231f6"/><section>
    <title>CalcWindowNextAutoFitSize()</title>
<indexterm><primary>CalcWindowNextAutoFitSize</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>CalcWindowNextAutoFitSize</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_vec2">ImVec2</link> ImGui::CalcWindowNextAutoFitSize (<link linkend="_struct_im_gui_window">ImGuiWindow</link> * window)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a66416151e58c34cd02973976de66e0e9"/><section>
    <title>CalcWrapWidthForPos()</title>
<indexterm><primary>CalcWrapWidthForPos</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>CalcWrapWidthForPos</secondary></indexterm>
<para><computeroutput>float ImGui::CalcWrapWidthForPos (const <link linkend="_struct_im_vec2">ImVec2</link> &amp; pos, float wrap_pos_x)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a61ced7f0dd38c604e895400a2e5eeeb2"/><section>
    <title>CallContextHooks()</title>
<indexterm><primary>CallContextHooks</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>CallContextHooks</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::CallContextHooks (<link linkend="_struct_im_gui_context">ImGuiContext</link> * context, <link linkend="_imgui__internal_8h_1a00ee5484f4006a8b98ed323d1dc37944">ImGuiContextHookType</link> type)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a57d73c1d0ef807fef734d91024092027"/><section>
    <title>Checkbox()</title>
<indexterm><primary>Checkbox</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>Checkbox</secondary></indexterm>
<para><computeroutput>bool ImGui::Checkbox (const char * label, bool * v)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a120a7714cd7e6e8f51aab7c2d56370bb"/><section>
    <title>CheckboxFlags()<computeroutput>[1/4]</computeroutput></title>
<indexterm><primary>CheckboxFlags</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>CheckboxFlags</secondary></indexterm>
<para><computeroutput>bool ImGui::CheckboxFlags (const char * label, <link linkend="_imgui_8h_1a83a52dabbef5da589af659d12e6c3f7e">ImS64</link> * flags, <link linkend="_imgui_8h_1a83a52dabbef5da589af659d12e6c3f7e">ImS64</link> flags_value)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a9e717a280425b2507c933d2ae2be0a16"/><section>
    <title>CheckboxFlags()<computeroutput>[2/4]</computeroutput></title>
<indexterm><primary>CheckboxFlags</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>CheckboxFlags</secondary></indexterm>
<para><computeroutput>bool ImGui::CheckboxFlags (const char * label, <link linkend="_imgui_8h_1a6875b9978368bbd5cf7e9b967e22eea4">ImU64</link> * flags, <link linkend="_imgui_8h_1a6875b9978368bbd5cf7e9b967e22eea4">ImU64</link> flags_value)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ab40105d09d9fa234721901da6e196a65"/><section>
    <title>CheckboxFlags()<computeroutput>[3/4]</computeroutput></title>
<indexterm><primary>CheckboxFlags</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>CheckboxFlags</secondary></indexterm>
<para><computeroutput>bool ImGui::CheckboxFlags (const char * label, int * flags, int flags_value)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aeca400dcf5a82c312b3e669d2fe6e88d"/><section>
    <title>CheckboxFlags()<computeroutput>[4/4]</computeroutput></title>
<indexterm><primary>CheckboxFlags</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>CheckboxFlags</secondary></indexterm>
<para><computeroutput>bool ImGui::CheckboxFlags (const char * label, unsigned int * flags, unsigned int flags_value)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a7d9caed9bd337c54cf2a9dbdf913db26"/><section>
    <title>CheckboxFlagsT()</title>
<indexterm><primary>CheckboxFlagsT</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>CheckboxFlagsT</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool ImGui::CheckboxFlagsT (const char * label, T * flags, T flags_value)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a17ff60ad1e2669130ac38a04d16eb354"/><section>
    <title>ClearActiveID()</title>
<indexterm><primary>ClearActiveID</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>ClearActiveID</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::ClearActiveID ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1adae8f94649956a2a717c00dbf81a5df9"/><section>
    <title>ClearDragDrop()</title>
<indexterm><primary>ClearDragDrop</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>ClearDragDrop</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::ClearDragDrop ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a845668cf582865444dd93809f6878d49"/><section>
    <title>ClearIniSettings()</title>
<indexterm><primary>ClearIniSettings</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>ClearIniSettings</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::ClearIniSettings ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ac5eec1531ae03a6dc4a90514e1c1afd6"/><section>
    <title>ClearWindowSettings()</title>
<indexterm><primary>ClearWindowSettings</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>ClearWindowSettings</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::ClearWindowSettings (const char * name)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a4f6da873474094ce131edd2dcda98551"/><section>
    <title>CloseButton()</title>
<indexterm><primary>CloseButton</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>CloseButton</secondary></indexterm>
<para><computeroutput>bool ImGui::CloseButton (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; pos)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aeaec6479834db7918260fc082107f90b"/><section>
    <title>CloseCurrentPopup()</title>
<indexterm><primary>CloseCurrentPopup</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>CloseCurrentPopup</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::CloseCurrentPopup ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a6321db9d0281af83216ec69f777f63bd"/><section>
    <title>ClosePopupsExceptModals()</title>
<indexterm><primary>ClosePopupsExceptModals</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>ClosePopupsExceptModals</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::ClosePopupsExceptModals ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a0076b153c697cb85e263fcbd59340bce"/><section>
    <title>ClosePopupsOverWindow()</title>
<indexterm><primary>ClosePopupsOverWindow</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>ClosePopupsOverWindow</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::ClosePopupsOverWindow (<link linkend="_struct_im_gui_window">ImGuiWindow</link> * ref_window, bool restore_focus_to_window_under_popup)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a0be705dc533a62387dc39ec5c276d2a0"/><section>
    <title>ClosePopupToLevel()</title>
<indexterm><primary>ClosePopupToLevel</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>ClosePopupToLevel</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::ClosePopupToLevel (int remaining, bool restore_focus_to_window_under_popup)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a203922bc5a7de6d291093dafafe3502c"/><section>
    <title>CollapseButton()</title>
<indexterm><primary>CollapseButton</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>CollapseButton</secondary></indexterm>
<para><computeroutput>bool ImGui::CollapseButton (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; pos, <link linkend="_struct_im_gui_dock_node">ImGuiDockNode</link> * dock_node)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a4d6e6e7a5ace0e5dbee3ea1926ddf049"/><section>
    <title>CollapsingHeader()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>CollapsingHeader</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>CollapsingHeader</secondary></indexterm>
<para><computeroutput>bool ImGui::CollapsingHeader (const char * label, bool * p_visible, <link linkend="_imgui_8h_1a0588fdd10c59b49a0159484fe9ec4564">ImGuiTreeNodeFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ab52f9e08698c9d64abb05b98f5355146"/><section>
    <title>CollapsingHeader()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>CollapsingHeader</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>CollapsingHeader</secondary></indexterm>
<para><computeroutput>bool ImGui::CollapsingHeader (const char * label, <link linkend="_imgui_8h_1a0588fdd10c59b49a0159484fe9ec4564">ImGuiTreeNodeFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ae2d7c8f37726810753d71d480f0af7f0"/><section>
    <title>ColorButton()</title>
<indexterm><primary>ColorButton</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>ColorButton</secondary></indexterm>
<para><computeroutput>bool ImGui::ColorButton (const char * desc_id, const <link linkend="_struct_im_vec4">ImVec4</link> &amp; col, <link linkend="_imgui_8h_1a6b2d5e95adc38f22c021252189f669c6">ImGuiColorEditFlags</link> flags = <computeroutput>0</computeroutput>
, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; size = <computeroutput><link linkend="_struct_im_vec2">ImVec2</link>(0,&#160;0)</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1abe2691de0b1a71c774ab24cc91564a94"/><section>
    <title>ColorConvertFloat4ToU32()</title>
<indexterm><primary>ColorConvertFloat4ToU32</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>ColorConvertFloat4ToU32</secondary></indexterm>
<para><computeroutput><link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> ImGui::ColorConvertFloat4ToU32 (const <link linkend="_struct_im_vec4">ImVec4</link> &amp; in)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a074427678b3e56378b7dcdefa4c8b5c7"/><section>
    <title>ColorConvertHSVtoRGB()</title>
<indexterm><primary>ColorConvertHSVtoRGB</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>ColorConvertHSVtoRGB</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::ColorConvertHSVtoRGB (float h, float s, float v, float &amp; out_r, float &amp; out_g, float &amp; out_b)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aaed5ed34aaaa02b61cbb67598c0ad9ca"/><section>
    <title>ColorConvertRGBtoHSV()</title>
<indexterm><primary>ColorConvertRGBtoHSV</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>ColorConvertRGBtoHSV</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::ColorConvertRGBtoHSV (float r, float g, float b, float &amp; out_h, float &amp; out_s, float &amp; out_v)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a74df648cad381b5ad979c3609b7f4b2a"/><section>
    <title>ColorConvertU32ToFloat4()</title>
<indexterm><primary>ColorConvertU32ToFloat4</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>ColorConvertU32ToFloat4</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_vec4">ImVec4</link> ImGui::ColorConvertU32ToFloat4 (<link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> in)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a5afe76ba1c91f07363e40396e7df656e"/><section>
    <title>ColorEdit3()</title>
<indexterm><primary>ColorEdit3</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>ColorEdit3</secondary></indexterm>
<para><computeroutput>bool ImGui::ColorEdit3 (const char * label, float col[3], <link linkend="_imgui_8h_1a6b2d5e95adc38f22c021252189f669c6">ImGuiColorEditFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ac3f45e2aa0b1d591cc8a2cdf8b566a45"/><section>
    <title>ColorEdit4()</title>
<indexterm><primary>ColorEdit4</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>ColorEdit4</secondary></indexterm>
<para><computeroutput>bool ImGui::ColorEdit4 (const char * label, float col[4], <link linkend="_imgui_8h_1a6b2d5e95adc38f22c021252189f669c6">ImGuiColorEditFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a6bfb117816d669f8704e5d0c0c0795fe"/><section>
    <title>ColorEditOptionsPopup()</title>
<indexterm><primary>ColorEditOptionsPopup</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>ColorEditOptionsPopup</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::ColorEditOptionsPopup (const float * col, <link linkend="_imgui_8h_1a6b2d5e95adc38f22c021252189f669c6">ImGuiColorEditFlags</link> flags)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a2a2a98cb9a17b18702be6b954670b388"/><section>
    <title>ColorPicker3()</title>
<indexterm><primary>ColorPicker3</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>ColorPicker3</secondary></indexterm>
<para><computeroutput>bool ImGui::ColorPicker3 (const char * label, float col[3], <link linkend="_imgui_8h_1a6b2d5e95adc38f22c021252189f669c6">ImGuiColorEditFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a3d5aae9e0a14aa051d5a799abbe97b32"/><section>
    <title>ColorPicker4()</title>
<indexterm><primary>ColorPicker4</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>ColorPicker4</secondary></indexterm>
<para><computeroutput>bool ImGui::ColorPicker4 (const char * label, float col[4], <link linkend="_imgui_8h_1a6b2d5e95adc38f22c021252189f669c6">ImGuiColorEditFlags</link> flags = <computeroutput>0</computeroutput>
, const float * ref_col = <computeroutput>NULL</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a6d112eeb6d8ffdebbc9d9a8c66babbee"/><section>
    <title>ColorPickerOptionsPopup()</title>
<indexterm><primary>ColorPickerOptionsPopup</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>ColorPickerOptionsPopup</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::ColorPickerOptionsPopup (const float * ref_col, <link linkend="_imgui_8h_1a6b2d5e95adc38f22c021252189f669c6">ImGuiColorEditFlags</link> flags)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1afad90b366b6471e3b13175c0ebeb26c8"/><section>
    <title>ColorTooltip()</title>
<indexterm><primary>ColorTooltip</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>ColorTooltip</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::ColorTooltip (const char * text, const float * col, <link linkend="_imgui_8h_1a6b2d5e95adc38f22c021252189f669c6">ImGuiColorEditFlags</link> flags)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a0e2889956542527c4039b6b8bf5c2a38"/><section>
    <title>Columns()</title>
<indexterm><primary>Columns</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>Columns</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::Columns (int count = <computeroutput>1</computeroutput>
, const char * id = <computeroutput>NULL</computeroutput>
, bool border = <computeroutput>true</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1accd9f50f53a08e6bd0afbf54a1209572"/><section>
    <title>Combo()<computeroutput>[1/4]</computeroutput></title>
<indexterm><primary>Combo</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>Combo</secondary></indexterm>
<para><computeroutput><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool ImGui::Combo (const char * label, int * current_item, bool(*)(<link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *user_data, int idx, const char **out_text) old_callback, <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * user_data, int items_count, int popup_max_height_in_items = <computeroutput>-1</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ad530c65e7cdfaf03f4e9b2f4e3fed8fc"/><section>
    <title>Combo()<computeroutput>[2/4]</computeroutput></title>
<indexterm><primary>Combo</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>Combo</secondary></indexterm>
<para><computeroutput>bool ImGui::Combo (const char * label, int * current_item, const char *(*)(<link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *user_data, int idx) getter, <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * user_data, int items_count, int popup_max_height_in_items = <computeroutput>-1</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aa2979368da5b9e98d368449b36d166b2"/><section>
    <title>Combo()<computeroutput>[3/4]</computeroutput></title>
<indexterm><primary>Combo</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>Combo</secondary></indexterm>
<para><computeroutput>bool ImGui::Combo (const char * label, int * current_item, const char *const items[], int items_count, int popup_max_height_in_items = <computeroutput>-1</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ab982779804105fdc57355868ab531cad"/><section>
    <title>Combo()<computeroutput>[4/4]</computeroutput></title>
<indexterm><primary>Combo</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>Combo</secondary></indexterm>
<para><computeroutput>bool ImGui::Combo (const char * label, int * current_item, const char * items_separated_by_zeros, int popup_max_height_in_items = <computeroutput>-1</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a0284de01b5647e77a9733f0e0b0437b9"/><section>
    <title>ConvertSingleModFlagToKey()</title>
<indexterm><primary>ConvertSingleModFlagToKey</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>ConvertSingleModFlagToKey</secondary></indexterm>
<para><computeroutput><link linkend="_imgui_8h_1aa22ffe36b188427d712447ec465203d4">ImGuiKey</link> ImGui::ConvertSingleModFlagToKey (<link linkend="_struct_im_gui_context">ImGuiContext</link> * ctx, <link linkend="_imgui_8h_1aa22ffe36b188427d712447ec465203d4">ImGuiKey</link> key)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a4ff6c9ad05a0eba37ce1b5ff1607810a"/><section>
    <title>CreateContext()</title>
<indexterm><primary>CreateContext</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>CreateContext</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_gui_context">ImGuiContext</link> * ImGui::CreateContext (<link linkend="_struct_im_font_atlas">ImFontAtlas</link> * shared_font_atlas = <computeroutput>NULL</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a2f325a08e833855b408f70a96d5fa064"/><section>
    <title>CreateNewWindowSettings()</title>
<indexterm><primary>CreateNewWindowSettings</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>CreateNewWindowSettings</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_gui_window_settings">ImGuiWindowSettings</link> * ImGui::CreateNewWindowSettings (const char * name)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a9f41fa3efd7fbe96e20bad82ff5bdbbc"/><section>
    <title>DataTypeApplyFromText()</title>
<indexterm><primary>DataTypeApplyFromText</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DataTypeApplyFromText</secondary></indexterm>
<para><computeroutput>bool ImGui::DataTypeApplyFromText (const char * buf, <link linkend="_imgui_8h_1a4cfa8697a3d76722fff83eb18922e9d5">ImGuiDataType</link> data_type, <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * p_data, const char * format)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ad8428ae139bf4e90fda66ab60476a13c"/><section>
    <title>DataTypeApplyOp()</title>
<indexterm><primary>DataTypeApplyOp</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DataTypeApplyOp</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::DataTypeApplyOp (<link linkend="_imgui_8h_1a4cfa8697a3d76722fff83eb18922e9d5">ImGuiDataType</link> data_type, int op, <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * output, const <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * arg_1, const <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * arg_2)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1adf9cbe8f8af33cba51b481e9b99cca1a"/><section>
    <title>DataTypeClamp()</title>
<indexterm><primary>DataTypeClamp</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DataTypeClamp</secondary></indexterm>
<para><computeroutput>bool ImGui::DataTypeClamp (<link linkend="_imgui_8h_1a4cfa8697a3d76722fff83eb18922e9d5">ImGuiDataType</link> data_type, <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * p_data, const <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * p_min, const <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * p_max)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aa859c7a74393669eb8418a82b5b174e7"/><section>
    <title>DataTypeCompare()</title>
<indexterm><primary>DataTypeCompare</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DataTypeCompare</secondary></indexterm>
<para><computeroutput>int ImGui::DataTypeCompare (<link linkend="_imgui_8h_1a4cfa8697a3d76722fff83eb18922e9d5">ImGuiDataType</link> data_type, const <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * arg_1, const <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * arg_2)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a5fda8e22d0e4721940aefcb7232b1f82"/><section>
    <title>DataTypeFormatString()</title>
<indexterm><primary>DataTypeFormatString</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DataTypeFormatString</secondary></indexterm>
<para><computeroutput>int ImGui::DataTypeFormatString (char * buf, int buf_size, <link linkend="_imgui_8h_1a4cfa8697a3d76722fff83eb18922e9d5">ImGuiDataType</link> data_type, const <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * p_data, const char * format)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a5b25ed1443e5a28d5a5725892e896578"/><section>
    <title>DataTypeGetInfo()</title>
<indexterm><primary>DataTypeGetInfo</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DataTypeGetInfo</secondary></indexterm>
<para><computeroutput>const <link linkend="_struct_im_gui_data_type_info">ImGuiDataTypeInfo</link> * ImGui::DataTypeGetInfo (<link linkend="_imgui_8h_1a4cfa8697a3d76722fff83eb18922e9d5">ImGuiDataType</link> data_type)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1af81dc8d88fa2e5d0996163993f90ccf8"/><section>
    <title>DebugAllocHook()</title>
<indexterm><primary>DebugAllocHook</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DebugAllocHook</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::DebugAllocHook (<link linkend="_struct_im_gui_debug_alloc_info">ImGuiDebugAllocInfo</link> * info, int frame_count, <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * ptr, size_t size)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ac2e737b701b4d252a54006a4c4214928"/><section>
    <title>DebugBreakButton()</title>
<indexterm><primary>DebugBreakButton</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DebugBreakButton</secondary></indexterm>
<para><computeroutput>bool ImGui::DebugBreakButton (const char * label, const char * description_of_location)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a6f2a211be11756216a881936bc6d9aab"/><section>
    <title>DebugBreakButtonTooltip()</title>
<indexterm><primary>DebugBreakButtonTooltip</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DebugBreakButtonTooltip</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::DebugBreakButtonTooltip (bool keyboard_only, const char * description_of_location)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ace738067ae44f9c202fed48a443608d9"/><section>
    <title>DebugBreakClearData()</title>
<indexterm><primary>DebugBreakClearData</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DebugBreakClearData</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::DebugBreakClearData ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a9fcc162a6de03ea6ad95457718b0683d"/><section>
    <title>DebugCheckVersionAndDataLayout()</title>
<indexterm><primary>DebugCheckVersionAndDataLayout</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DebugCheckVersionAndDataLayout</secondary></indexterm>
<para><computeroutput>bool ImGui::DebugCheckVersionAndDataLayout (const char * version_str, size_t sz_io, size_t sz_style, size_t sz_vec2, size_t sz_vec4, size_t sz_drawvert, size_t sz_drawidx)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1acb408b735302ddd3868a564ff48ccada"/><section>
    <title>DebugDrawCursorPos()</title>
<indexterm><primary>DebugDrawCursorPos</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DebugDrawCursorPos</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::DebugDrawCursorPos (<link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col = <computeroutput><link linkend="_imgui_8h_1a123bd4e23eb51ac9dced93eab78c4456">IM_COL32</link>(255,&#160;0,&#160;0,&#160;255)</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1acdcfb1608a3e75c4700427f81c0a52ac"/><section>
    <title>DebugDrawItemRect()</title>
<indexterm><primary>DebugDrawItemRect</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DebugDrawItemRect</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::DebugDrawItemRect (<link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col = <computeroutput><link linkend="_imgui_8h_1a123bd4e23eb51ac9dced93eab78c4456">IM_COL32</link>(255,&#160;0,&#160;0,&#160;255)</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ab713aeb3cce417a0967e4c3ccb13ddac"/><section>
    <title>DebugDrawLineExtents()</title>
<indexterm><primary>DebugDrawLineExtents</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DebugDrawLineExtents</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::DebugDrawLineExtents (<link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col = <computeroutput><link linkend="_imgui_8h_1a123bd4e23eb51ac9dced93eab78c4456">IM_COL32</link>(255,&#160;0,&#160;0,&#160;255)</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1afd4250e2c2f662451c9c4e9d5ab70562"/><section>
    <title>DebugFlashStyleColor()</title>
<indexterm><primary>DebugFlashStyleColor</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DebugFlashStyleColor</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::DebugFlashStyleColor (<link linkend="_imgui_8h_1a1b0467ec582e731ae6292fef726fb5fe">ImGuiCol</link> idx)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a5487269f4cb9fb809fd3e797411ed2d7"/><section>
    <title>DebugHookIdInfo()</title>
<indexterm><primary>DebugHookIdInfo</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DebugHookIdInfo</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::DebugHookIdInfo (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id, <link linkend="_imgui_8h_1a4cfa8697a3d76722fff83eb18922e9d5">ImGuiDataType</link> data_type, const <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * data_id, const <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * data_id_end)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a5fcfd58a344ca39b4575074c009f0767"/><section>
    <title>DebugLocateItem()</title>
<indexterm><primary>DebugLocateItem</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DebugLocateItem</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::DebugLocateItem (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> target_id)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a76cc1722d10c66a7d5bb7e794487a0aa"/><section>
    <title>DebugLocateItemOnHover()</title>
<indexterm><primary>DebugLocateItemOnHover</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DebugLocateItemOnHover</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::DebugLocateItemOnHover (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> target_id)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ae8ab0d7dfc90af8e82db3ed9e7829219"/><section>
    <title>DebugLocateItemResolveWithLastItem()</title>
<indexterm><primary>DebugLocateItemResolveWithLastItem</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DebugLocateItemResolveWithLastItem</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::DebugLocateItemResolveWithLastItem ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aaa66ae54a7078d4e14d957b85571f6d0"/><section>
    <title>DebugLog()</title>
<indexterm><primary>DebugLog</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DebugLog</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::DebugLog (const char * fmt,  ...)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1afa024e012e162b5a7904b848e1d8d92e"/><section>
    <title>DebugLogV()</title>
<indexterm><primary>DebugLogV</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DebugLogV</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::DebugLogV (const char * fmt, va_list args)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a68c10eb20be9c419d00f2b5a9dfa6a38"/><section>
    <title>DebugNodeColumns()</title>
<indexterm><primary>DebugNodeColumns</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DebugNodeColumns</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::DebugNodeColumns (<link linkend="_struct_im_gui_old_columns">ImGuiOldColumns</link> * columns)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a8600f7b1f9b18926fb00837e56d2b3cd"/><section>
    <title>DebugNodeDockNode()</title>
<indexterm><primary>DebugNodeDockNode</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DebugNodeDockNode</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::DebugNodeDockNode (<link linkend="_struct_im_gui_dock_node">ImGuiDockNode</link> * node, const char * label)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a24c6abd61c6da9610cbfbb46c0db828b"/><section>
    <title>DebugNodeDrawCmdShowMeshAndBoundingBox()</title>
<indexterm><primary>DebugNodeDrawCmdShowMeshAndBoundingBox</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DebugNodeDrawCmdShowMeshAndBoundingBox</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::DebugNodeDrawCmdShowMeshAndBoundingBox (<link linkend="_struct_im_draw_list">ImDrawList</link> * out_draw_list, const <link linkend="_struct_im_draw_list">ImDrawList</link> * draw_list, const <link linkend="_struct_im_draw_cmd">ImDrawCmd</link> * draw_cmd, bool show_mesh, bool show_aabb)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1af7b5e35566da44ac1ea8a7e1b9d9d574"/><section>
    <title>DebugNodeDrawList()</title>
<indexterm><primary>DebugNodeDrawList</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DebugNodeDrawList</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::DebugNodeDrawList (<link linkend="_struct_im_gui_window">ImGuiWindow</link> * window, <link linkend="_struct_im_gui_viewport_p">ImGuiViewportP</link> * viewport, const <link linkend="_struct_im_draw_list">ImDrawList</link> * draw_list, const char * label)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ae0207d60728f7e6a47dbcd1d7d84e3cb"/><section>
    <title>DebugNodeFont()</title>
<indexterm><primary>DebugNodeFont</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DebugNodeFont</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::DebugNodeFont (<link linkend="_struct_im_font">ImFont</link> * font)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ad57d7756b61feecb86a3f25dc2a526f3"/><section>
    <title>DebugNodeFontGlyph()</title>
<indexterm><primary>DebugNodeFontGlyph</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DebugNodeFontGlyph</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::DebugNodeFontGlyph (<link linkend="_struct_im_font">ImFont</link> * font, const <link linkend="_struct_im_font_glyph">ImFontGlyph</link> * glyph)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ab85df47e899ab32dbdd5089f40e3802f"/><section>
    <title>DebugNodeInputTextState()</title>
<indexterm><primary>DebugNodeInputTextState</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DebugNodeInputTextState</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::DebugNodeInputTextState (<link linkend="_struct_im_gui_input_text_state">ImGuiInputTextState</link> * state)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a8e1aae1a79042976013f36d7f2e7ee70"/><section>
    <title>DebugNodeStorage()</title>
<indexterm><primary>DebugNodeStorage</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DebugNodeStorage</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::DebugNodeStorage (<link linkend="_struct_im_gui_storage">ImGuiStorage</link> * storage, const char * label)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ac5f1a2b50c26c83d3df78d94e95f0bd0"/><section>
    <title>DebugNodeTabBar()</title>
<indexterm><primary>DebugNodeTabBar</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DebugNodeTabBar</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::DebugNodeTabBar (<link linkend="_struct_im_gui_tab_bar">ImGuiTabBar</link> * tab_bar, const char * label)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ae944ffc599add73d6f3220165475ffd8"/><section>
    <title>DebugNodeTable()</title>
<indexterm><primary>DebugNodeTable</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DebugNodeTable</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::DebugNodeTable (<link linkend="_struct_im_gui_table">ImGuiTable</link> * table)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a476f5fea6e50fae946a366567da7f89f"/><section>
    <title>DebugNodeTableSettings()</title>
<indexterm><primary>DebugNodeTableSettings</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DebugNodeTableSettings</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::DebugNodeTableSettings (<link linkend="_struct_im_gui_table_settings">ImGuiTableSettings</link> * settings)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a1a1cf844de2c29d4221fefd7553bc6fa"/><section>
    <title>DebugNodeTypingSelectState()</title>
<indexterm><primary>DebugNodeTypingSelectState</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DebugNodeTypingSelectState</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::DebugNodeTypingSelectState (<link linkend="_struct_im_gui_typing_select_state">ImGuiTypingSelectState</link> * state)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aa5e5f50f28c04a26264c0943c7281171"/><section>
    <title>DebugNodeViewport()</title>
<indexterm><primary>DebugNodeViewport</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DebugNodeViewport</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::DebugNodeViewport (<link linkend="_struct_im_gui_viewport_p">ImGuiViewportP</link> * viewport)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1afcb602554925c5409977f0fb39f77e5d"/><section>
    <title>DebugNodeWindow()</title>
<indexterm><primary>DebugNodeWindow</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DebugNodeWindow</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::DebugNodeWindow (<link linkend="_struct_im_gui_window">ImGuiWindow</link> * window, const char * label)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ad843ddd00b2e6f8182c2bac52bcd9bdc"/><section>
    <title>DebugNodeWindowSettings()</title>
<indexterm><primary>DebugNodeWindowSettings</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DebugNodeWindowSettings</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::DebugNodeWindowSettings (<link linkend="_struct_im_gui_window_settings">ImGuiWindowSettings</link> * settings)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a8c2ed9f140c90d8eaca1e2cfd8f46142"/><section>
    <title>DebugNodeWindowsList()</title>
<indexterm><primary>DebugNodeWindowsList</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DebugNodeWindowsList</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::DebugNodeWindowsList (<link linkend="_struct_im_vector">ImVector</link>&lt; <link linkend="_struct_im_gui_window">ImGuiWindow</link> * &gt; * windows, const char * label)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a0fc8019faf3a1aec25b554384ad9e506"/><section>
    <title>DebugNodeWindowsListByBeginStackParent()</title>
<indexterm><primary>DebugNodeWindowsListByBeginStackParent</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DebugNodeWindowsListByBeginStackParent</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::DebugNodeWindowsListByBeginStackParent (<link linkend="_struct_im_gui_window">ImGuiWindow</link> ** windows, int windows_size, <link linkend="_struct_im_gui_window">ImGuiWindow</link> * parent_in_begin_stack)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a1355ddf2e5435da21acf2a9944b52ab4"/><section>
    <title>DebugRenderKeyboardPreview()</title>
<indexterm><primary>DebugRenderKeyboardPreview</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DebugRenderKeyboardPreview</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::DebugRenderKeyboardPreview (<link linkend="_struct_im_draw_list">ImDrawList</link> * draw_list)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1af7de4b5c98ba30dbadce44e1f1066ba8"/><section>
    <title>DebugRenderViewportThumbnail()</title>
<indexterm><primary>DebugRenderViewportThumbnail</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DebugRenderViewportThumbnail</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::DebugRenderViewportThumbnail (<link linkend="_struct_im_draw_list">ImDrawList</link> * draw_list, <link linkend="_struct_im_gui_viewport_p">ImGuiViewportP</link> * viewport, const <link linkend="_struct_im_rect">ImRect</link> &amp; bb)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1abb29f1f359c62a224ad5320734035e05"/><section>
    <title>DebugStartItemPicker()</title>
<indexterm><primary>DebugStartItemPicker</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DebugStartItemPicker</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::DebugStartItemPicker ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a326f0badd138d1dea078a31b0e8dd685"/><section>
    <title>DebugTextEncoding()</title>
<indexterm><primary>DebugTextEncoding</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DebugTextEncoding</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::DebugTextEncoding (const char * text)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ab9132deece575023170cd8e681d0581d"/><section>
    <title>DestroyContext()</title>
<indexterm><primary>DestroyContext</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DestroyContext</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::DestroyContext (<link linkend="_struct_im_gui_context">ImGuiContext</link> * ctx = <computeroutput>NULL</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1acea326a9a642943f5f8f2f74fd8fb0e0"/><section>
    <title>DestroyPlatformWindow()</title>
<indexterm><primary>DestroyPlatformWindow</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DestroyPlatformWindow</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::DestroyPlatformWindow (<link linkend="_struct_im_gui_viewport_p">ImGuiViewportP</link> * viewport)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aec24353cab7c663fbb44f1e6d8b50ead"/><section>
    <title>DestroyPlatformWindows()</title>
<indexterm><primary>DestroyPlatformWindows</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DestroyPlatformWindows</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::DestroyPlatformWindows ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a941b7d9d1f491f778796221031b5e439"/><section>
    <title>DockBuilderAddNode()</title>
<indexterm><primary>DockBuilderAddNode</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DockBuilderAddNode</secondary></indexterm>
<para><computeroutput><link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> ImGui::DockBuilderAddNode (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> node_id = <computeroutput>0</computeroutput>
, <link linkend="_imgui_8h_1ad2fc6cf2d0116e422921e4ffc1077c6f">ImGuiDockNodeFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1adf707304b4d0759f566bdf584b913815"/><section>
    <title>DockBuilderCopyDockSpace()</title>
<indexterm><primary>DockBuilderCopyDockSpace</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DockBuilderCopyDockSpace</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::DockBuilderCopyDockSpace (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> src_dockspace_id, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> dst_dockspace_id, <link linkend="_struct_im_vector">ImVector</link>&lt; const char * &gt; * in_window_remap_pairs)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a938077e82ec2d3c8c020058896a050d0"/><section>
    <title>DockBuilderCopyNode()</title>
<indexterm><primary>DockBuilderCopyNode</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DockBuilderCopyNode</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::DockBuilderCopyNode (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> src_node_id, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> dst_node_id, <link linkend="_struct_im_vector">ImVector</link>&lt; <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> &gt; * out_node_remap_pairs)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ad4262ab8fa2967373913cf5eed4c19f3"/><section>
    <title>DockBuilderCopyWindowSettings()</title>
<indexterm><primary>DockBuilderCopyWindowSettings</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DockBuilderCopyWindowSettings</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::DockBuilderCopyWindowSettings (const char * src_name, const char * dst_name)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a8d41ed7aa329857c1834cace2eca60ea"/><section>
    <title>DockBuilderDockWindow()</title>
<indexterm><primary>DockBuilderDockWindow</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DockBuilderDockWindow</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::DockBuilderDockWindow (const char * window_name, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> node_id)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ae9e2b4c823afe829715ff7132bc1ffc9"/><section>
    <title>DockBuilderFinish()</title>
<indexterm><primary>DockBuilderFinish</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DockBuilderFinish</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::DockBuilderFinish (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> node_id)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1acc707e98b3ac6d215576e384a3a0713c"/><section>
    <title>DockBuilderGetCentralNode()</title>
<indexterm><primary>DockBuilderGetCentralNode</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DockBuilderGetCentralNode</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_gui_dock_node">ImGuiDockNode</link> * ImGui::DockBuilderGetCentralNode (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> node_id)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aad1b35952b7908f6c087df79d0e2a456"/><section>
    <title>DockBuilderGetNode()</title>
<indexterm><primary>DockBuilderGetNode</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DockBuilderGetNode</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_gui_dock_node">ImGuiDockNode</link> * ImGui::DockBuilderGetNode (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> node_id)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1af3346b709d35d9fc7787f8c3a5ce4b52"/><section>
    <title>DockBuilderRemoveNode()</title>
<indexterm><primary>DockBuilderRemoveNode</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DockBuilderRemoveNode</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::DockBuilderRemoveNode (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> node_id)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ab7bb6828e2ad6934e71d786c44bd37d4"/><section>
    <title>DockBuilderRemoveNodeChildNodes()</title>
<indexterm><primary>DockBuilderRemoveNodeChildNodes</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DockBuilderRemoveNodeChildNodes</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::DockBuilderRemoveNodeChildNodes (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> node_id)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1adccce6b807a47b502671cf1a8bc02f8b"/><section>
    <title>DockBuilderRemoveNodeDockedWindows()</title>
<indexterm><primary>DockBuilderRemoveNodeDockedWindows</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DockBuilderRemoveNodeDockedWindows</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::DockBuilderRemoveNodeDockedWindows (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> node_id, bool clear_settings_refs = <computeroutput>true</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1acc42b53112d9234a08ed00cb8e67ed7a"/><section>
    <title>DockBuilderSetNodePos()</title>
<indexterm><primary>DockBuilderSetNodePos</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DockBuilderSetNodePos</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::DockBuilderSetNodePos (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> node_id, <link linkend="_struct_im_vec2">ImVec2</link> pos)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1abebea982d306d60aea80862298b938bf"/><section>
    <title>DockBuilderSetNodeSize()</title>
<indexterm><primary>DockBuilderSetNodeSize</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DockBuilderSetNodeSize</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::DockBuilderSetNodeSize (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> node_id, <link linkend="_struct_im_vec2">ImVec2</link> size)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a0575e1e5da712a0ab28f7c9c41167c1c"/><section>
    <title>DockBuilderSplitNode()</title>
<indexterm><primary>DockBuilderSplitNode</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DockBuilderSplitNode</secondary></indexterm>
<para><computeroutput><link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> ImGui::DockBuilderSplitNode (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> node_id, <link linkend="_imgui_8h_1a874086389bc27cc9647118d22a806403">ImGuiDir</link> split_dir, float size_ratio_for_node_at_dir, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> * out_id_at_dir, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> * out_id_at_opposite_dir)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1afada51f9cda829dc4f7b65ca6818d4cd"/><section>
    <title>DockContextCalcDropPosForDocking()</title>
<indexterm><primary>DockContextCalcDropPosForDocking</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DockContextCalcDropPosForDocking</secondary></indexterm>
<para><computeroutput>bool ImGui::DockContextCalcDropPosForDocking (<link linkend="_struct_im_gui_window">ImGuiWindow</link> * target, <link linkend="_struct_im_gui_dock_node">ImGuiDockNode</link> * target_node, <link linkend="_struct_im_gui_window">ImGuiWindow</link> * payload_window, <link linkend="_struct_im_gui_dock_node">ImGuiDockNode</link> * payload_node, <link linkend="_imgui_8h_1a874086389bc27cc9647118d22a806403">ImGuiDir</link> split_dir, bool split_outer, <link linkend="_struct_im_vec2">ImVec2</link> * out_pos)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ada8fcfabcf71d5393827317f9d1d25d7"/><section>
    <title>DockContextClearNodes()</title>
<indexterm><primary>DockContextClearNodes</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DockContextClearNodes</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::DockContextClearNodes (<link linkend="_struct_im_gui_context">ImGuiContext</link> * ctx, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> root_id, bool clear_settings_refs)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a255cc11c0b8c4764e86aa47dafff7e8f"/><section>
    <title>DockContextEndFrame()</title>
<indexterm><primary>DockContextEndFrame</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DockContextEndFrame</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::DockContextEndFrame (<link linkend="_struct_im_gui_context">ImGuiContext</link> * ctx)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a52be73f2abd2d0320469ba138f7c6d59"/><section>
    <title>DockContextFindNodeByID()</title>
<indexterm><primary>DockContextFindNodeByID</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DockContextFindNodeByID</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_gui_dock_node">ImGuiDockNode</link> * ImGui::DockContextFindNodeByID (<link linkend="_struct_im_gui_context">ImGuiContext</link> * ctx, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ad16317022ea4095a886903d23e056fcb"/><section>
    <title>DockContextGenNodeID()</title>
<indexterm><primary>DockContextGenNodeID</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DockContextGenNodeID</secondary></indexterm>
<para><computeroutput><link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> ImGui::DockContextGenNodeID (<link linkend="_struct_im_gui_context">ImGuiContext</link> * ctx)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a3b7bcf876b64c28c4eb3868f79728499"/><section>
    <title>DockContextInitialize()</title>
<indexterm><primary>DockContextInitialize</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DockContextInitialize</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::DockContextInitialize (<link linkend="_struct_im_gui_context">ImGuiContext</link> * ctx)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a3fd836d2bd3163537d1c36607e93ed6d"/><section>
    <title>DockContextNewFrameUpdateDocking()</title>
<indexterm><primary>DockContextNewFrameUpdateDocking</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DockContextNewFrameUpdateDocking</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::DockContextNewFrameUpdateDocking (<link linkend="_struct_im_gui_context">ImGuiContext</link> * ctx)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a7f7a9ea28b0557a655c27375eb941a56"/><section>
    <title>DockContextNewFrameUpdateUndocking()</title>
<indexterm><primary>DockContextNewFrameUpdateUndocking</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DockContextNewFrameUpdateUndocking</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::DockContextNewFrameUpdateUndocking (<link linkend="_struct_im_gui_context">ImGuiContext</link> * ctx)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1af62559b86338c4d3d1cd80fb90bd7bd6"/><section>
    <title>DockContextProcessUndockNode()</title>
<indexterm><primary>DockContextProcessUndockNode</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DockContextProcessUndockNode</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::DockContextProcessUndockNode (<link linkend="_struct_im_gui_context">ImGuiContext</link> * ctx, <link linkend="_struct_im_gui_dock_node">ImGuiDockNode</link> * node)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a8c76fa37695285817c21f42f1be1bcbb"/><section>
    <title>DockContextProcessUndockWindow()</title>
<indexterm><primary>DockContextProcessUndockWindow</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DockContextProcessUndockWindow</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::DockContextProcessUndockWindow (<link linkend="_struct_im_gui_context">ImGuiContext</link> * ctx, <link linkend="_struct_im_gui_window">ImGuiWindow</link> * window, bool clear_persistent_docking_ref = <computeroutput>true</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aa4adf7f82592b6ec62d34f8150887aed"/><section>
    <title>DockContextQueueDock()</title>
<indexterm><primary>DockContextQueueDock</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DockContextQueueDock</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::DockContextQueueDock (<link linkend="_struct_im_gui_context">ImGuiContext</link> * ctx, <link linkend="_struct_im_gui_window">ImGuiWindow</link> * target, <link linkend="_struct_im_gui_dock_node">ImGuiDockNode</link> * target_node, <link linkend="_struct_im_gui_window">ImGuiWindow</link> * payload, <link linkend="_imgui_8h_1a874086389bc27cc9647118d22a806403">ImGuiDir</link> split_dir, float split_ratio, bool split_outer)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1af4b53ba05292d975cd4087ecbcbdb067"/><section>
    <title>DockContextQueueUndockNode()</title>
<indexterm><primary>DockContextQueueUndockNode</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DockContextQueueUndockNode</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::DockContextQueueUndockNode (<link linkend="_struct_im_gui_context">ImGuiContext</link> * ctx, <link linkend="_struct_im_gui_dock_node">ImGuiDockNode</link> * node)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ab69e2b00a8f62bbb626b5dbbb0ecaa46"/><section>
    <title>DockContextQueueUndockWindow()</title>
<indexterm><primary>DockContextQueueUndockWindow</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DockContextQueueUndockWindow</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::DockContextQueueUndockWindow (<link linkend="_struct_im_gui_context">ImGuiContext</link> * ctx, <link linkend="_struct_im_gui_window">ImGuiWindow</link> * window)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a6789c5ed2a793129d51cb29ff9865c86"/><section>
    <title>DockContextRebuildNodes()</title>
<indexterm><primary>DockContextRebuildNodes</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DockContextRebuildNodes</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::DockContextRebuildNodes (<link linkend="_struct_im_gui_context">ImGuiContext</link> * ctx)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a64b653e9346bef8bb6639da54fa71dab"/><section>
    <title>DockContextShutdown()</title>
<indexterm><primary>DockContextShutdown</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DockContextShutdown</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::DockContextShutdown (<link linkend="_struct_im_gui_context">ImGuiContext</link> * ctx)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a5f0b65db489a18354649d09d4b9f55dc"/><section>
    <title>DockNodeBeginAmendTabBar()</title>
<indexterm><primary>DockNodeBeginAmendTabBar</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DockNodeBeginAmendTabBar</secondary></indexterm>
<para><computeroutput>bool ImGui::DockNodeBeginAmendTabBar (<link linkend="_struct_im_gui_dock_node">ImGuiDockNode</link> * node)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a966210ccd2b1d239003f3b5cda67362b"/><section>
    <title>DockNodeEndAmendTabBar()</title>
<indexterm><primary>DockNodeEndAmendTabBar</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DockNodeEndAmendTabBar</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::DockNodeEndAmendTabBar ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a65fa5ced49b0a2b865875627ad93a133"/><section>
    <title>DockNodeGetDepth()</title>
<indexterm><primary>DockNodeGetDepth</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DockNodeGetDepth</secondary></indexterm>
<para><computeroutput>int ImGui::DockNodeGetDepth (const <link linkend="_struct_im_gui_dock_node">ImGuiDockNode</link> * node)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ab52284ace3da5320ccc6e29ea8781aaa"/><section>
    <title>DockNodeGetRootNode()</title>
<indexterm><primary>DockNodeGetRootNode</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DockNodeGetRootNode</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_gui_dock_node">ImGuiDockNode</link> * ImGui::DockNodeGetRootNode (<link linkend="_struct_im_gui_dock_node">ImGuiDockNode</link> * node)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a44aafb1039d43da2fa62296f94129ba6"/><section>
    <title>DockNodeGetWindowMenuButtonId()</title>
<indexterm><primary>DockNodeGetWindowMenuButtonId</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DockNodeGetWindowMenuButtonId</secondary></indexterm>
<para><computeroutput><link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> ImGui::DockNodeGetWindowMenuButtonId (const <link linkend="_struct_im_gui_dock_node">ImGuiDockNode</link> * node)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a3af79db3155dc0c16602363e83210ff8"/><section>
    <title>DockNodeIsInHierarchyOf()</title>
<indexterm><primary>DockNodeIsInHierarchyOf</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DockNodeIsInHierarchyOf</secondary></indexterm>
<para><computeroutput>bool ImGui::DockNodeIsInHierarchyOf (<link linkend="_struct_im_gui_dock_node">ImGuiDockNode</link> * node, <link linkend="_struct_im_gui_dock_node">ImGuiDockNode</link> * parent)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a46592395e19aa3aacfccc2222693bec8"/><section>
    <title>DockNodeWindowMenuHandler_Default()</title>
<indexterm><primary>DockNodeWindowMenuHandler_Default</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DockNodeWindowMenuHandler_Default</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::DockNodeWindowMenuHandler_Default (<link linkend="_struct_im_gui_context">ImGuiContext</link> * ctx, <link linkend="_struct_im_gui_dock_node">ImGuiDockNode</link> * node, <link linkend="_struct_im_gui_tab_bar">ImGuiTabBar</link> * tab_bar)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aacc87878f9d14939bfbbaa2f719e910e"/><section>
    <title>DockSpace()</title>
<indexterm><primary>DockSpace</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DockSpace</secondary></indexterm>
<para><computeroutput><link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> ImGui::DockSpace (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; size = <computeroutput><link linkend="_struct_im_vec2">ImVec2</link>(0,&#160;0)</computeroutput>
, <link linkend="_imgui_8h_1ad2fc6cf2d0116e422921e4ffc1077c6f">ImGuiDockNodeFlags</link> flags = <computeroutput>0</computeroutput>
, const <link linkend="_struct_im_gui_window_class">ImGuiWindowClass</link> * window_class = <computeroutput>NULL</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1add238564557f1af2f3de8d0ec02e4a1c"/><section>
    <title>DockSpaceOverViewport()</title>
<indexterm><primary>DockSpaceOverViewport</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DockSpaceOverViewport</secondary></indexterm>
<para><computeroutput><link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> ImGui::DockSpaceOverViewport (const <link linkend="_struct_im_gui_viewport">ImGuiViewport</link> * viewport = <computeroutput>NULL</computeroutput>
, <link linkend="_imgui_8h_1ad2fc6cf2d0116e422921e4ffc1077c6f">ImGuiDockNodeFlags</link> flags = <computeroutput>0</computeroutput>
, const <link linkend="_struct_im_gui_window_class">ImGuiWindowClass</link> * window_class = <computeroutput>NULL</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a03fd8ebf820fd67eccfa0ee037df2d0c"/><section>
    <title>DragBehavior()</title>
<indexterm><primary>DragBehavior</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DragBehavior</secondary></indexterm>
<para><computeroutput>bool ImGui::DragBehavior (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id, <link linkend="_imgui_8h_1a4cfa8697a3d76722fff83eb18922e9d5">ImGuiDataType</link> data_type, <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * p_v, float v_speed, const <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * p_min, const <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * p_max, const char * format, <link linkend="_imgui_8h_1a50cc3e3e4beb155e2186f8c1dc057e18">ImGuiSliderFlags</link> flags)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aa777ee3801f15acc2f81a131843039ae"/><section>
    <title>DragBehaviorT()</title>
<indexterm><primary>DragBehaviorT</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DragBehaviorT</secondary></indexterm>
<computeroutput>template&lt;typename T , typename SIGNED_T , typename FLOAT_T &gt; </computeroutput><para><computeroutput><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool ImGui::DragBehaviorT (<link linkend="_imgui_8h_1a4cfa8697a3d76722fff83eb18922e9d5">ImGuiDataType</link> data_type, T * v, float v_speed, T v_min, T v_max, const char * format, <link linkend="_imgui_8h_1a50cc3e3e4beb155e2186f8c1dc057e18">ImGuiSliderFlags</link> flags)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aab1b20e7bf98aa7bbdb26f8cd3ad91e6"/><section>
    <title>DragFloat()</title>
<indexterm><primary>DragFloat</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DragFloat</secondary></indexterm>
<para><computeroutput>bool ImGui::DragFloat (const char * label, float * v, float v_speed = <computeroutput>1.0f</computeroutput>
, float v_min = <computeroutput>0.0f</computeroutput>
, float v_max = <computeroutput>0.0f</computeroutput>
, const char * format = <computeroutput>&quot;%.3f&quot;</computeroutput>
, <link linkend="_imgui_8h_1a50cc3e3e4beb155e2186f8c1dc057e18">ImGuiSliderFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1afc9ce10d78534a5c186cee0b337f7471"/><section>
    <title>DragFloat2()</title>
<indexterm><primary>DragFloat2</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DragFloat2</secondary></indexterm>
<para><computeroutput>bool ImGui::DragFloat2 (const char * label, float v[2], float v_speed = <computeroutput>1.0f</computeroutput>
, float v_min = <computeroutput>0.0f</computeroutput>
, float v_max = <computeroutput>0.0f</computeroutput>
, const char * format = <computeroutput>&quot;%.3f&quot;</computeroutput>
, <link linkend="_imgui_8h_1a50cc3e3e4beb155e2186f8c1dc057e18">ImGuiSliderFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a5ffcbb0240077cf2f300960db3c0a3d7"/><section>
    <title>DragFloat3()</title>
<indexterm><primary>DragFloat3</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DragFloat3</secondary></indexterm>
<para><computeroutput>bool ImGui::DragFloat3 (const char * label, float v[3], float v_speed = <computeroutput>1.0f</computeroutput>
, float v_min = <computeroutput>0.0f</computeroutput>
, float v_max = <computeroutput>0.0f</computeroutput>
, const char * format = <computeroutput>&quot;%.3f&quot;</computeroutput>
, <link linkend="_imgui_8h_1a50cc3e3e4beb155e2186f8c1dc057e18">ImGuiSliderFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a43e4508fb0c6a82cf6d78a645965dd57"/><section>
    <title>DragFloat4()</title>
<indexterm><primary>DragFloat4</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DragFloat4</secondary></indexterm>
<para><computeroutput>bool ImGui::DragFloat4 (const char * label, float v[4], float v_speed = <computeroutput>1.0f</computeroutput>
, float v_min = <computeroutput>0.0f</computeroutput>
, float v_max = <computeroutput>0.0f</computeroutput>
, const char * format = <computeroutput>&quot;%.3f&quot;</computeroutput>
, <link linkend="_imgui_8h_1a50cc3e3e4beb155e2186f8c1dc057e18">ImGuiSliderFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aa6bfd93ead5c47e84b66185da88b8e8c"/><section>
    <title>DragFloatRange2()</title>
<indexterm><primary>DragFloatRange2</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DragFloatRange2</secondary></indexterm>
<para><computeroutput>bool ImGui::DragFloatRange2 (const char * label, float * v_current_min, float * v_current_max, float v_speed = <computeroutput>1.0f</computeroutput>
, float v_min = <computeroutput>0.0f</computeroutput>
, float v_max = <computeroutput>0.0f</computeroutput>
, const char * format = <computeroutput>&quot;%.3f&quot;</computeroutput>
, const char * format_max = <computeroutput>NULL</computeroutput>
, <link linkend="_imgui_8h_1a50cc3e3e4beb155e2186f8c1dc057e18">ImGuiSliderFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a3714db739ae51fc75601d7fad234a58b"/><section>
    <title>DragInt()</title>
<indexterm><primary>DragInt</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DragInt</secondary></indexterm>
<para><computeroutput>bool ImGui::DragInt (const char * label, int * v, float v_speed = <computeroutput>1.0f</computeroutput>
, int v_min = <computeroutput>0</computeroutput>
, int v_max = <computeroutput>0</computeroutput>
, const char * format = <computeroutput>&quot;%d&quot;</computeroutput>
, <link linkend="_imgui_8h_1a50cc3e3e4beb155e2186f8c1dc057e18">ImGuiSliderFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a56e3ba8164b0b78b46f01a3a2f7fe00b"/><section>
    <title>DragInt2()</title>
<indexterm><primary>DragInt2</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DragInt2</secondary></indexterm>
<para><computeroutput>bool ImGui::DragInt2 (const char * label, int v[2], float v_speed = <computeroutput>1.0f</computeroutput>
, int v_min = <computeroutput>0</computeroutput>
, int v_max = <computeroutput>0</computeroutput>
, const char * format = <computeroutput>&quot;%d&quot;</computeroutput>
, <link linkend="_imgui_8h_1a50cc3e3e4beb155e2186f8c1dc057e18">ImGuiSliderFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1af4be377242ba2480b28b116390af7261"/><section>
    <title>DragInt3()</title>
<indexterm><primary>DragInt3</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DragInt3</secondary></indexterm>
<para><computeroutput>bool ImGui::DragInt3 (const char * label, int v[3], float v_speed = <computeroutput>1.0f</computeroutput>
, int v_min = <computeroutput>0</computeroutput>
, int v_max = <computeroutput>0</computeroutput>
, const char * format = <computeroutput>&quot;%d&quot;</computeroutput>
, <link linkend="_imgui_8h_1a50cc3e3e4beb155e2186f8c1dc057e18">ImGuiSliderFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a5d75e4d3263272f22eb2001652397e55"/><section>
    <title>DragInt4()</title>
<indexterm><primary>DragInt4</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DragInt4</secondary></indexterm>
<para><computeroutput>bool ImGui::DragInt4 (const char * label, int v[4], float v_speed = <computeroutput>1.0f</computeroutput>
, int v_min = <computeroutput>0</computeroutput>
, int v_max = <computeroutput>0</computeroutput>
, const char * format = <computeroutput>&quot;%d&quot;</computeroutput>
, <link linkend="_imgui_8h_1a50cc3e3e4beb155e2186f8c1dc057e18">ImGuiSliderFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a27a0380e0480671c7cd854dd7bfc6bd1"/><section>
    <title>DragIntRange2()</title>
<indexterm><primary>DragIntRange2</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DragIntRange2</secondary></indexterm>
<para><computeroutput>bool ImGui::DragIntRange2 (const char * label, int * v_current_min, int * v_current_max, float v_speed = <computeroutput>1.0f</computeroutput>
, int v_min = <computeroutput>0</computeroutput>
, int v_max = <computeroutput>0</computeroutput>
, const char * format = <computeroutput>&quot;%d&quot;</computeroutput>
, const char * format_max = <computeroutput>NULL</computeroutput>
, <link linkend="_imgui_8h_1a50cc3e3e4beb155e2186f8c1dc057e18">ImGuiSliderFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a17d8926e8f44a6d00575b12081c51fe0"/><section>
    <title>DragScalar()</title>
<indexterm><primary>DragScalar</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DragScalar</secondary></indexterm>
<para><computeroutput>bool ImGui::DragScalar (const char * label, <link linkend="_imgui_8h_1a4cfa8697a3d76722fff83eb18922e9d5">ImGuiDataType</link> data_type, <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * p_data, float v_speed = <computeroutput>1.0f</computeroutput>
, const <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * p_min = <computeroutput>NULL</computeroutput>
, const <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * p_max = <computeroutput>NULL</computeroutput>
, const char * format = <computeroutput>NULL</computeroutput>
, <link linkend="_imgui_8h_1a50cc3e3e4beb155e2186f8c1dc057e18">ImGuiSliderFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a1265d2b30ced1fca909e26c8f718fcbd"/><section>
    <title>DragScalarN()</title>
<indexterm><primary>DragScalarN</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>DragScalarN</secondary></indexterm>
<para><computeroutput>bool ImGui::DragScalarN (const char * label, <link linkend="_imgui_8h_1a4cfa8697a3d76722fff83eb18922e9d5">ImGuiDataType</link> data_type, <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * p_data, int components, float v_speed = <computeroutput>1.0f</computeroutput>
, const <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * p_min = <computeroutput>NULL</computeroutput>
, const <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * p_max = <computeroutput>NULL</computeroutput>
, const char * format = <computeroutput>NULL</computeroutput>
, <link linkend="_imgui_8h_1a50cc3e3e4beb155e2186f8c1dc057e18">ImGuiSliderFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a8b0fb07113251301ff897b8578a53f34"/><section>
    <title>Dummy()</title>
<indexterm><primary>Dummy</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>Dummy</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::Dummy (const <link linkend="_struct_im_vec2">ImVec2</link> &amp; size)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a5479d93794a004c67ceb6d13f37c8254"/><section>
    <title>End()</title>
<indexterm><primary>End</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>End</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::End ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1af8de559a88c1442d6df8c1b04c86e997"/><section>
    <title>EndChild()</title>
<indexterm><primary>EndChild</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>EndChild</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::EndChild ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1af93bed3bce5475fe4d525d744f16aa20"/><section>
    <title>EndColumns()</title>
<indexterm><primary>EndColumns</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>EndColumns</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::EndColumns ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a63434692d7de278875c7ea0143fbe6e4"/><section>
    <title>EndCombo()</title>
<indexterm><primary>EndCombo</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>EndCombo</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::EndCombo ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aff0228bbaf4d5a217944e00eb56f3714"/><section>
    <title>EndComboPreview()</title>
<indexterm><primary>EndComboPreview</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>EndComboPreview</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::EndComboPreview ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a9e6088c6c690ddff1302b6e42b380733"/><section>
    <title>EndDisabled()</title>
<indexterm><primary>EndDisabled</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>EndDisabled</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::EndDisabled ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a02f225fefff2a046038ed99ab20606da"/><section>
    <title>EndDragDropSource()</title>
<indexterm><primary>EndDragDropSource</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>EndDragDropSource</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::EndDragDropSource ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ae8313266214728f86c2cb7cb30a30e89"/><section>
    <title>EndDragDropTarget()</title>
<indexterm><primary>EndDragDropTarget</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>EndDragDropTarget</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::EndDragDropTarget ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a246c37da45e88a12ade440a0feacb4ee"/><section>
    <title>EndFrame()</title>
<indexterm><primary>EndFrame</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>EndFrame</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::EndFrame ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a05fc97fc64f28a55486087f503d9a622"/><section>
    <title>EndGroup()</title>
<indexterm><primary>EndGroup</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>EndGroup</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::EndGroup ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a6a1b63d9b66bb934d995c279ac02daff"/><section>
    <title>EndListBox()</title>
<indexterm><primary>EndListBox</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>EndListBox</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::EndListBox ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ab92f330c808546b340eb7bdf7e5f7c95"/><section>
    <title>EndMainMenuBar()</title>
<indexterm><primary>EndMainMenuBar</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>EndMainMenuBar</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::EndMainMenuBar ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a1448a5a4e8c431c15f991e9255c0df95"/><section>
    <title>EndMenu()</title>
<indexterm><primary>EndMenu</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>EndMenu</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::EndMenu ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aa226265c140eb6ee375c5b9abc69c4fc"/><section>
    <title>EndMenuBar()</title>
<indexterm><primary>EndMenuBar</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>EndMenuBar</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::EndMenuBar ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aa6a9b5696f2ea7eed7683425fc77b8f2"/><section>
    <title>EndPopup()</title>
<indexterm><primary>EndPopup</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>EndPopup</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::EndPopup ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a864b8ece257d4e30569f0349752ad928"/><section>
    <title>EndTabBar()</title>
<indexterm><primary>EndTabBar</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>EndTabBar</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::EndTabBar ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a42abffd6af88c1362535514925e1358b"/><section>
    <title>EndTabItem()</title>
<indexterm><primary>EndTabItem</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>EndTabItem</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::EndTabItem ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a9c70aaa6464c2e51e6f3342da133ada1"/><section>
    <title>EndTable()</title>
<indexterm><primary>EndTable</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>EndTable</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::EndTable ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ac8d75c160cfdf43d512f773ca133a1c6"/><section>
    <title>EndTooltip()</title>
<indexterm><primary>EndTooltip</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>EndTooltip</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::EndTooltip ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aaeda60ee2c0b5c2b3f397b237c9928f3"/><section>
    <title>ErrorCheckEndFrameRecover()</title>
<indexterm><primary>ErrorCheckEndFrameRecover</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>ErrorCheckEndFrameRecover</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::ErrorCheckEndFrameRecover (<link linkend="_imgui__internal_8h_1af128655e687b027c18655e3bfde4b11e">ImGuiErrorLogCallback</link> log_callback, <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * user_data = <computeroutput>NULL</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a945392cbf05b9434df8ec3630b10e01a"/><section>
    <title>ErrorCheckEndWindowRecover()</title>
<indexterm><primary>ErrorCheckEndWindowRecover</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>ErrorCheckEndWindowRecover</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::ErrorCheckEndWindowRecover (<link linkend="_imgui__internal_8h_1af128655e687b027c18655e3bfde4b11e">ImGuiErrorLogCallback</link> log_callback, <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * user_data = <computeroutput>NULL</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ad5832500c14abd9e76e376b82701385b"/><section>
    <title>ErrorCheckUsingSetCursorPosToExtendParentBoundaries()</title>
<indexterm><primary>ErrorCheckUsingSetCursorPosToExtendParentBoundaries</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>ErrorCheckUsingSetCursorPosToExtendParentBoundaries</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::ErrorCheckUsingSetCursorPosToExtendParentBoundaries ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a310ff87cbe678e2c632bf1f5577a7fbd"/><section>
    <title>FindBestWindowPosForPopup()</title>
<indexterm><primary>FindBestWindowPosForPopup</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>FindBestWindowPosForPopup</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_vec2">ImVec2</link> ImGui::FindBestWindowPosForPopup (<link linkend="_struct_im_gui_window">ImGuiWindow</link> * window)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ab4a820eead6cd418d7be66e142bf3478"/><section>
    <title>FindBestWindowPosForPopupEx()</title>
<indexterm><primary>FindBestWindowPosForPopupEx</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>FindBestWindowPosForPopupEx</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_vec2">ImVec2</link> ImGui::FindBestWindowPosForPopupEx (const <link linkend="_struct_im_vec2">ImVec2</link> &amp; ref_pos, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; size, <link linkend="_imgui_8h_1a874086389bc27cc9647118d22a806403">ImGuiDir</link> * last_dir, const <link linkend="_struct_im_rect">ImRect</link> &amp; r_outer, const <link linkend="_struct_im_rect">ImRect</link> &amp; r_avoid, <link linkend="_imgui__internal_8h_1a9c122103feadc7b225fc21698ff0f4d8">ImGuiPopupPositionPolicy</link> policy)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a196705a4195b41a57470ef6553cb440c"/><section>
    <title>FindBlockingModal()</title>
<indexterm><primary>FindBlockingModal</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>FindBlockingModal</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_gui_window">ImGuiWindow</link> * ImGui::FindBlockingModal (<link linkend="_struct_im_gui_window">ImGuiWindow</link> * window)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1acbee71305d643afa7020759bc97feaf2"/><section>
    <title>FindBottomMostVisibleWindowWithinBeginStack()</title>
<indexterm><primary>FindBottomMostVisibleWindowWithinBeginStack</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>FindBottomMostVisibleWindowWithinBeginStack</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_gui_window">ImGuiWindow</link> * ImGui::FindBottomMostVisibleWindowWithinBeginStack (<link linkend="_struct_im_gui_window">ImGuiWindow</link> * window)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a6fe97772f8b2ccad57157b5e35dc5ddd"/><section>
    <title>FindHoveredViewportFromPlatformWindowStack()</title>
<indexterm><primary>FindHoveredViewportFromPlatformWindowStack</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>FindHoveredViewportFromPlatformWindowStack</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_gui_viewport_p">ImGuiViewportP</link> * ImGui::FindHoveredViewportFromPlatformWindowStack (const <link linkend="_struct_im_vec2">ImVec2</link> &amp; mouse_platform_pos)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1af04eb535c152ed14c87940b5d0661c7b"/><section>
    <title>FindOrCreateColumns()</title>
<indexterm><primary>FindOrCreateColumns</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>FindOrCreateColumns</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_gui_old_columns">ImGuiOldColumns</link> * ImGui::FindOrCreateColumns (<link linkend="_struct_im_gui_window">ImGuiWindow</link> * window, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a7671e1dbc803a31b06081b52a771d83f"/><section>
    <title>FindRenderedTextEnd()</title>
<indexterm><primary>FindRenderedTextEnd</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>FindRenderedTextEnd</secondary></indexterm>
<para><computeroutput>const char * ImGui::FindRenderedTextEnd (const char * text, const char * text_end = <computeroutput>NULL</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ad9e15440c52f63aa96ef3b3938d566f8"/><section>
    <title>FindSettingsHandler()</title>
<indexterm><primary>FindSettingsHandler</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>FindSettingsHandler</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_gui_settings_handler">ImGuiSettingsHandler</link> * ImGui::FindSettingsHandler (const char * type_name)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a19f511dec79b1d152da3cd6667bb3856"/><section>
    <title>FindViewportByID()</title>
<indexterm><primary>FindViewportByID</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>FindViewportByID</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_gui_viewport">ImGuiViewport</link> * ImGui::FindViewportByID (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a53bee8c14cf414a6df4177945ef8cec0"/><section>
    <title>FindViewportByPlatformHandle()</title>
<indexterm><primary>FindViewportByPlatformHandle</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>FindViewportByPlatformHandle</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_gui_viewport">ImGuiViewport</link> * ImGui::FindViewportByPlatformHandle (<link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * platform_handle)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a82204d8800dc3a072ddbcbd2aecc48ac"/><section>
    <title>FindWindowByID()</title>
<indexterm><primary>FindWindowByID</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>FindWindowByID</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_gui_window">ImGuiWindow</link> * ImGui::FindWindowByID (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1abca25f22c02e73d5eb2e9c72c4557813"/><section>
    <title>FindWindowByName()</title>
<indexterm><primary>FindWindowByName</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>FindWindowByName</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_gui_window">ImGuiWindow</link> * ImGui::FindWindowByName (const char * name)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1acc8dfbe9f52370fe2b95f6c948ba113e"/><section>
    <title>FindWindowDisplayIndex()</title>
<indexterm><primary>FindWindowDisplayIndex</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>FindWindowDisplayIndex</secondary></indexterm>
<para><computeroutput>int ImGui::FindWindowDisplayIndex (<link linkend="_struct_im_gui_window">ImGuiWindow</link> * window)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a186a7c51e5dc70e54843c9e9415707e2"/><section>
    <title>FindWindowSettingsByID()</title>
<indexterm><primary>FindWindowSettingsByID</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>FindWindowSettingsByID</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_gui_window_settings">ImGuiWindowSettings</link> * ImGui::FindWindowSettingsByID (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aa3791d9fe372fb96ae9672c88070385a"/><section>
    <title>FindWindowSettingsByWindow()</title>
<indexterm><primary>FindWindowSettingsByWindow</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>FindWindowSettingsByWindow</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_gui_window_settings">ImGuiWindowSettings</link> * ImGui::FindWindowSettingsByWindow (<link linkend="_struct_im_gui_window">ImGuiWindow</link> * window)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a5c726fca14508e1f8d644261dbe4b163"/><section>
    <title>FixupKeyChord()</title>
<indexterm><primary>FixupKeyChord</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>FixupKeyChord</secondary></indexterm>
<para><computeroutput><link linkend="_imgui_8h_1a0720c04fed27e0f01b3722a13c8a8762">ImGuiKeyChord</link> ImGui::FixupKeyChord (<link linkend="_struct_im_gui_context">ImGuiContext</link> * ctx, <link linkend="_imgui_8h_1a0720c04fed27e0f01b3722a13c8a8762">ImGuiKeyChord</link> key_chord)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ad2df2e91500b9ebd279b825684750bb5"/><section>
    <title>FocusItem()</title>
<indexterm><primary>FocusItem</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>FocusItem</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::FocusItem ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aa97e87e96c05eb3e91aa96fa68b13a2a"/><section>
    <title>FocusTopMostWindowUnderOne()</title>
<indexterm><primary>FocusTopMostWindowUnderOne</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>FocusTopMostWindowUnderOne</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::FocusTopMostWindowUnderOne (<link linkend="_struct_im_gui_window">ImGuiWindow</link> * under_this_window, <link linkend="_struct_im_gui_window">ImGuiWindow</link> * ignore_window, <link linkend="_struct_im_gui_viewport">ImGuiViewport</link> * filter_viewport, <link linkend="_imgui__internal_8h_1a980fa6fddcd4eef108d84d0e22b571a2">ImGuiFocusRequestFlags</link> flags)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a27aa6f2f3aa11778c6d023b1b223f262"/><section>
    <title>FocusWindow()</title>
<indexterm><primary>FocusWindow</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>FocusWindow</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::FocusWindow (<link linkend="_struct_im_gui_window">ImGuiWindow</link> * window, <link linkend="_imgui__internal_8h_1a980fa6fddcd4eef108d84d0e22b571a2">ImGuiFocusRequestFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ad70feca33961fb47a8074074a8da2f80"/><section>
    <title>GcAwakeTransientWindowBuffers()</title>
<indexterm><primary>GcAwakeTransientWindowBuffers</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GcAwakeTransientWindowBuffers</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::GcAwakeTransientWindowBuffers (<link linkend="_struct_im_gui_window">ImGuiWindow</link> * window)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aab0d052a1581fddc1cc2d9d981f487c0"/><section>
    <title>GcCompactTransientMiscBuffers()</title>
<indexterm><primary>GcCompactTransientMiscBuffers</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GcCompactTransientMiscBuffers</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::GcCompactTransientMiscBuffers ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a8386015888f38f2a33528ccbb34bd49d"/><section>
    <title>GcCompactTransientWindowBuffers()</title>
<indexterm><primary>GcCompactTransientWindowBuffers</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GcCompactTransientWindowBuffers</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::GcCompactTransientWindowBuffers (<link linkend="_struct_im_gui_window">ImGuiWindow</link> * window)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a2577aabfddbb8c092a014cbdcc333204"/><section>
    <title>GetActiveID()</title>
<indexterm><primary>GetActiveID</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetActiveID</secondary></indexterm>
<para><computeroutput><link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> ImGui::GetActiveID ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a855f163c9a30e8af87aa9c56a3478b0e"/><section>
    <title>GetAllocatorFunctions()</title>
<indexterm><primary>GetAllocatorFunctions</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetAllocatorFunctions</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::GetAllocatorFunctions (<link linkend="_imgui_8h_1a18581d9ce5ad374685c32a08d9c00659">ImGuiMemAllocFunc</link> * p_alloc_func, <link linkend="_imgui_8h_1ad6abffbb2b01431575aad8400461d11f">ImGuiMemFreeFunc</link> * p_free_func, <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ** p_user_data)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ab361971e8b198a11c6ece6b49cf03647"/><section>
    <title>GetBackgroundDrawList()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>GetBackgroundDrawList</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetBackgroundDrawList</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_draw_list">ImDrawList</link> * ImGui::GetBackgroundDrawList ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ab9cfddd372e40f8cb35806d8ee2a23dc"/><section>
    <title>GetBackgroundDrawList()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>GetBackgroundDrawList</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetBackgroundDrawList</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_draw_list">ImDrawList</link> * ImGui::GetBackgroundDrawList (<link linkend="_struct_im_gui_viewport">ImGuiViewport</link> * viewport)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a11837daee819fd90e17d80ab1eef1f99"/><section>
    <title>GetClipboardText()</title>
<indexterm><primary>GetClipboardText</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetClipboardText</secondary></indexterm>
<para><computeroutput>const char * ImGui::GetClipboardText ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ac701752365ddd58cecc1956fc62921a8"/><section>
    <title>GetColorU32()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>GetColorU32</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetColorU32</secondary></indexterm>
<para><computeroutput><link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> ImGui::GetColorU32 (const <link linkend="_struct_im_vec4">ImVec4</link> &amp; col)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a0de2d9bd347d9866511eb8d014e62556"/><section>
    <title>GetColorU32()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>GetColorU32</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetColorU32</secondary></indexterm>
<para><computeroutput><link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> ImGui::GetColorU32 (<link linkend="_imgui_8h_1a1b0467ec582e731ae6292fef726fb5fe">ImGuiCol</link> idx, float alpha_mul = <computeroutput>1.0f</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ae1b28fefd853a96e40c7d626d4a030db"/><section>
    <title>GetColorU32()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>GetColorU32</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetColorU32</secondary></indexterm>
<para><computeroutput><link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> ImGui::GetColorU32 (<link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col, float alpha_mul = <computeroutput>1.0f</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1acc31f8eea4fcfb86edeb3ac12d82fc05"/><section>
    <title>GetColumnIndex()</title>
<indexterm><primary>GetColumnIndex</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetColumnIndex</secondary></indexterm>
<para><computeroutput>int ImGui::GetColumnIndex ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ad43f0dd1dbdbb9df814e4b42afe747d0"/><section>
    <title>GetColumnNormFromOffset()</title>
<indexterm><primary>GetColumnNormFromOffset</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetColumnNormFromOffset</secondary></indexterm>
<para><computeroutput>float ImGui::GetColumnNormFromOffset (const <link linkend="_struct_im_gui_old_columns">ImGuiOldColumns</link> * columns, float offset)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a79c22e9c5c208b6c9534a273be71a9e6"/><section>
    <title>GetColumnOffset()</title>
<indexterm><primary>GetColumnOffset</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetColumnOffset</secondary></indexterm>
<para><computeroutput>float ImGui::GetColumnOffset (int column_index = <computeroutput>-1</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a81693b00fc61ae1f7791e5e84108de54"/><section>
    <title>GetColumnOffsetFromNorm()</title>
<indexterm><primary>GetColumnOffsetFromNorm</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetColumnOffsetFromNorm</secondary></indexterm>
<para><computeroutput>float ImGui::GetColumnOffsetFromNorm (const <link linkend="_struct_im_gui_old_columns">ImGuiOldColumns</link> * columns, float offset_norm)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a3c2998ad9527948a4e4166c4f7db9ec9"/><section>
    <title>GetColumnsCount()</title>
<indexterm><primary>GetColumnsCount</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetColumnsCount</secondary></indexterm>
<para><computeroutput>int ImGui::GetColumnsCount ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a432f468da48b9aadd3c5928f1065939c"/><section>
    <title>GetColumnsID()</title>
<indexterm><primary>GetColumnsID</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetColumnsID</secondary></indexterm>
<para><computeroutput><link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> ImGui::GetColumnsID (const char * str_id, int count)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a3d205d86dab5ca0763a92997283ac36e"/><section>
    <title>GetColumnWidth()</title>
<indexterm><primary>GetColumnWidth</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetColumnWidth</secondary></indexterm>
<para><computeroutput>float ImGui::GetColumnWidth (int column_index = <computeroutput>-1</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a410c8e19b2fea8b52746ca11b3930301"/><section>
    <title>GetContentRegionAvail()</title>
<indexterm><primary>GetContentRegionAvail</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetContentRegionAvail</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_vec2">ImVec2</link> ImGui::GetContentRegionAvail ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a0a4dbfabbfa45d74319ef541962ce2eb"/><section>
    <title>GetContentRegionMax()</title>
<indexterm><primary>GetContentRegionMax</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetContentRegionMax</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_vec2">ImVec2</link> ImGui::GetContentRegionMax ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1adc4d9b0d735ffae1f1598c4df038024c"/><section>
    <title>GetContentRegionMaxAbs()</title>
<indexterm><primary>GetContentRegionMaxAbs</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetContentRegionMaxAbs</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_vec2">ImVec2</link> ImGui::GetContentRegionMaxAbs ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1af557a6de5538099a0f6047eb994bbf42"/><section>
    <title>GetCurrentContext()</title>
<indexterm><primary>GetCurrentContext</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetCurrentContext</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_gui_context">ImGuiContext</link> * ImGui::GetCurrentContext ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a1bbe318e10866b4a4c445bc16c7f7272"/><section>
    <title>GetCurrentFocusScope()</title>
<indexterm><primary>GetCurrentFocusScope</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetCurrentFocusScope</secondary></indexterm>
<para><computeroutput><link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> ImGui::GetCurrentFocusScope ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ad8f0e963cfe312a1b643801c55ee411d"/><section>
    <title>GetCurrentTabBar()</title>
<indexterm><primary>GetCurrentTabBar</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetCurrentTabBar</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_gui_tab_bar">ImGuiTabBar</link> * ImGui::GetCurrentTabBar ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ae49aeb59a58fc24a9fa27ce7a18f6a12"/><section>
    <title>GetCurrentTable()</title>
<indexterm><primary>GetCurrentTable</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetCurrentTable</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_gui_table">ImGuiTable</link> * ImGui::GetCurrentTable ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ac452417b5004ca16a814a72cff153526"/><section>
    <title>GetCurrentWindow()</title>
<indexterm><primary>GetCurrentWindow</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetCurrentWindow</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_gui_window">ImGuiWindow</link> * ImGui::GetCurrentWindow ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a055af7d6b7b4ae977a9c3c25a98e0d2f"/><section>
    <title>GetCurrentWindowRead()</title>
<indexterm><primary>GetCurrentWindowRead</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetCurrentWindowRead</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_gui_window">ImGuiWindow</link> * ImGui::GetCurrentWindowRead ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a2fa4eb57e0f73b90e8edcd226a0cc7d5"/><section>
    <title>GetCursorPos()</title>
<indexterm><primary>GetCursorPos</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetCursorPos</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_vec2">ImVec2</link> ImGui::GetCursorPos ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a022e32c808ac899e25847f4d65633b77"/><section>
    <title>GetCursorPosX()</title>
<indexterm><primary>GetCursorPosX</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetCursorPosX</secondary></indexterm>
<para><computeroutput>float ImGui::GetCursorPosX ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a86e409551f256b542166989c558d41c1"/><section>
    <title>GetCursorPosY()</title>
<indexterm><primary>GetCursorPosY</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetCursorPosY</secondary></indexterm>
<para><computeroutput>float ImGui::GetCursorPosY ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1adb0db3c1ee36f5085f35890a4229ae75"/><section>
    <title>GetCursorScreenPos()</title>
<indexterm><primary>GetCursorScreenPos</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetCursorScreenPos</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_vec2">ImVec2</link> ImGui::GetCursorScreenPos ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a8ee9647de3b39fc7b77395082fc9e0cc"/><section>
    <title>GetCursorStartPos()</title>
<indexterm><primary>GetCursorStartPos</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetCursorStartPos</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_vec2">ImVec2</link> ImGui::GetCursorStartPos ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a8344798d82c6baf9d94f81e445609eb2"/><section>
    <title>GetDefaultFont()</title>
<indexterm><primary>GetDefaultFont</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetDefaultFont</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_font">ImFont</link> * ImGui::GetDefaultFont ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a1756b37d61154de489f1520179b4e294"/><section>
    <title>GetDragDropPayload()</title>
<indexterm><primary>GetDragDropPayload</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetDragDropPayload</secondary></indexterm>
<para><computeroutput>const <link linkend="_struct_im_gui_payload">ImGuiPayload</link> * ImGui::GetDragDropPayload ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ab73131dc44b1267dac04f0c2bb0af983"/><section>
    <title>GetDrawData()</title>
<indexterm><primary>GetDrawData</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetDrawData</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_draw_data">ImDrawData</link> * ImGui::GetDrawData ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a2a5a77bd5b6215e8cb47a8a457224a52"/><section>
    <title>GetDrawListSharedData()</title>
<indexterm><primary>GetDrawListSharedData</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetDrawListSharedData</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_draw_list_shared_data">ImDrawListSharedData</link> * ImGui::GetDrawListSharedData ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a2657245e3c14385d8caf03e06a8b76aa"/><section>
    <title>GetFocusID()</title>
<indexterm><primary>GetFocusID</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetFocusID</secondary></indexterm>
<para><computeroutput><link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> ImGui::GetFocusID ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a43cf349576e20fac4a1300269320ad8f"/><section>
    <title>GetFont()</title>
<indexterm><primary>GetFont</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetFont</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_font">ImFont</link> * ImGui::GetFont ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ac592ae8e0aa4a1a06502ec7872bc8da8"/><section>
    <title>GetFontSize()</title>
<indexterm><primary>GetFontSize</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetFontSize</secondary></indexterm>
<para><computeroutput>float ImGui::GetFontSize ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a3092da6abc1d04f3287c084435dc6026"/><section>
    <title>GetFontTexUvWhitePixel()</title>
<indexterm><primary>GetFontTexUvWhitePixel</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetFontTexUvWhitePixel</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_vec2">ImVec2</link> ImGui::GetFontTexUvWhitePixel ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a718d48e3636f9df63e4820d0fef34e78"/><section>
    <title>GetForegroundDrawList()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>GetForegroundDrawList</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetForegroundDrawList</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_draw_list">ImDrawList</link> * ImGui::GetForegroundDrawList ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a07eee0014d66b8698d14b1635ea18f2d"/><section>
    <title>GetForegroundDrawList()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>GetForegroundDrawList</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetForegroundDrawList</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_draw_list">ImDrawList</link> * ImGui::GetForegroundDrawList (<link linkend="_struct_im_gui_viewport">ImGuiViewport</link> * viewport)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a9aa9a370e4d66959398a0833db4a7508"/><section>
    <title>GetForegroundDrawList()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>GetForegroundDrawList</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetForegroundDrawList</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_draw_list">ImDrawList</link> * ImGui::GetForegroundDrawList (<link linkend="_struct_im_gui_window">ImGuiWindow</link> * window)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a0180211f23fc10807dfc3d2f6e8681f9"/><section>
    <title>GetFrameCount()</title>
<indexterm><primary>GetFrameCount</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetFrameCount</secondary></indexterm>
<para><computeroutput>int ImGui::GetFrameCount ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ae560f17cf3262017cee888d1eb77f294"/><section>
    <title>GetFrameHeight()</title>
<indexterm><primary>GetFrameHeight</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetFrameHeight</secondary></indexterm>
<para><computeroutput>float ImGui::GetFrameHeight ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a8de260eebd333718fa0c3b6c80258c67"/><section>
    <title>GetFrameHeightWithSpacing()</title>
<indexterm><primary>GetFrameHeightWithSpacing</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetFrameHeightWithSpacing</secondary></indexterm>
<para><computeroutput>float ImGui::GetFrameHeightWithSpacing ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ad57aba42e0eb99a7302a614ddbc363c9"/><section>
    <title>GetHoveredID()</title>
<indexterm><primary>GetHoveredID</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetHoveredID</secondary></indexterm>
<para><computeroutput><link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> ImGui::GetHoveredID ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a3329b04bd4235e90ad9deb00ffb38ae4"/><section>
    <title>GetID()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>GetID</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetID</secondary></indexterm>
<para><computeroutput><link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> ImGui::GetID (const char * str_id)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a26064d74efebef3aa86e1a78b3e4c333"/><section>
    <title>GetID()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>GetID</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetID</secondary></indexterm>
<para><computeroutput><link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> ImGui::GetID (const char * str_id_begin, const char * str_id_end)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a220123ad62c2180ded92b2ef91f27c5a"/><section>
    <title>GetID()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>GetID</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetID</secondary></indexterm>
<para><computeroutput><link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> ImGui::GetID (const <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * ptr_id)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ab3bf101308fe641abc549bda537158f5"/><section>
    <title>GetIDWithSeed()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>GetIDWithSeed</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetIDWithSeed</secondary></indexterm>
<para><computeroutput><link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> ImGui::GetIDWithSeed (const char * str_id_begin, const char * str_id_end, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> seed)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a09e57c148b2877276f130e5279d45303"/><section>
    <title>GetIDWithSeed()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>GetIDWithSeed</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetIDWithSeed</secondary></indexterm>
<para><computeroutput><link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> ImGui::GetIDWithSeed (int n, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> seed)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a93881467b5800a52508dda7ce32cf875"/><section>
    <title>GetInputTextState()</title>
<indexterm><primary>GetInputTextState</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetInputTextState</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_gui_input_text_state">ImGuiInputTextState</link> * ImGui::GetInputTextState (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a3179e560812f878f3961ce803a5d9302"/><section>
    <title>GetIO()</title>
<indexterm><primary>GetIO</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetIO</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_gui_i_o">ImGuiIO</link> &amp; ImGui::GetIO ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a3c12564b5647365867a57b665a944479"/><section>
    <title>GetItemFlags()</title>
<indexterm><primary>GetItemFlags</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetItemFlags</secondary></indexterm>
<para><computeroutput><link linkend="_imgui__internal_8h_1abcf9eafab4557e911b2c0d8fe2feeb38">ImGuiItemFlags</link> ImGui::GetItemFlags ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a102bd745dcb69ab33637e25ceeabb444"/><section>
    <title>GetItemID()</title>
<indexterm><primary>GetItemID</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetItemID</secondary></indexterm>
<para><computeroutput><link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> ImGui::GetItemID ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a3d260209b8dc25a2c942e8cfd1ed0e51"/><section>
    <title>GetItemRectMax()</title>
<indexterm><primary>GetItemRectMax</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetItemRectMax</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_vec2">ImVec2</link> ImGui::GetItemRectMax ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a65b24b72ec0e8444c705cebf3e91f570"/><section>
    <title>GetItemRectMin()</title>
<indexterm><primary>GetItemRectMin</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetItemRectMin</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_vec2">ImVec2</link> ImGui::GetItemRectMin ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a3303d1c37041307e11fd46fc43b2274d"/><section>
    <title>GetItemRectSize()</title>
<indexterm><primary>GetItemRectSize</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetItemRectSize</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_vec2">ImVec2</link> ImGui::GetItemRectSize ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a8e43b6bdd1da0ef409a6fc192f448172"/><section>
    <title>GetItemStatusFlags()</title>
<indexterm><primary>GetItemStatusFlags</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetItemStatusFlags</secondary></indexterm>
<para><computeroutput><link linkend="_imgui__internal_8h_1a86b8f9e2fd4084fb2112f003070b53fa">ImGuiItemStatusFlags</link> ImGui::GetItemStatusFlags ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a4711f04593c21dee2ecb1f736c4da981"/><section>
    <title>GetKeyChordName()</title>
<indexterm><primary>GetKeyChordName</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetKeyChordName</secondary></indexterm>
<para><computeroutput>const char * ImGui::GetKeyChordName (<link linkend="_imgui_8h_1a0720c04fed27e0f01b3722a13c8a8762">ImGuiKeyChord</link> key_chord)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a6d32d70d6beb45537b605508b78216c3"/><section>
    <title>GetKeyData()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>GetKeyData</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetKeyData</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_gui_key_data">ImGuiKeyData</link> * ImGui::GetKeyData (<link linkend="_struct_im_gui_context">ImGuiContext</link> * ctx, <link linkend="_imgui_8h_1aa22ffe36b188427d712447ec465203d4">ImGuiKey</link> key)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aef423d33ae184977d70c75e42bcb0364"/><section>
    <title>GetKeyData()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>GetKeyData</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetKeyData</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_gui_key_data">ImGuiKeyData</link> * ImGui::GetKeyData (<link linkend="_imgui_8h_1aa22ffe36b188427d712447ec465203d4">ImGuiKey</link> key)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a03f5c2b43767af1947c9a9eea38a367d"/><section>
    <title>GetKeyIndex()</title>
<indexterm><primary>GetKeyIndex</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetKeyIndex</secondary></indexterm>
<para><computeroutput><link linkend="_imgui_8h_1aa22ffe36b188427d712447ec465203d4">ImGuiKey</link> ImGui::GetKeyIndex (<link linkend="_imgui_8h_1aa22ffe36b188427d712447ec465203d4">ImGuiKey</link> key)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a7be7c8eb5bd517b2c7b361f1521b1137"/><section>
    <title>GetKeyMagnitude2d()</title>
<indexterm><primary>GetKeyMagnitude2d</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetKeyMagnitude2d</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_vec2">ImVec2</link> ImGui::GetKeyMagnitude2d (<link linkend="_imgui_8h_1aa22ffe36b188427d712447ec465203d4">ImGuiKey</link> key_left, <link linkend="_imgui_8h_1aa22ffe36b188427d712447ec465203d4">ImGuiKey</link> key_right, <link linkend="_imgui_8h_1aa22ffe36b188427d712447ec465203d4">ImGuiKey</link> key_up, <link linkend="_imgui_8h_1aa22ffe36b188427d712447ec465203d4">ImGuiKey</link> key_down)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a1d631e0e344472fb2da1a53a6bf55448"/><section>
    <title>GetKeyName()</title>
<indexterm><primary>GetKeyName</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetKeyName</secondary></indexterm>
<para><computeroutput>const char * ImGui::GetKeyName (<link linkend="_imgui_8h_1aa22ffe36b188427d712447ec465203d4">ImGuiKey</link> key)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a3976abb319f95d75fe9f6866f9956701"/><section>
    <title>GetKeyOwner()</title>
<indexterm><primary>GetKeyOwner</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetKeyOwner</secondary></indexterm>
<para><computeroutput><link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> ImGui::GetKeyOwner (<link linkend="_imgui_8h_1aa22ffe36b188427d712447ec465203d4">ImGuiKey</link> key)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a05ada04953ac91c563334fb0fe934e03"/><section>
    <title>GetKeyOwnerData()</title>
<indexterm><primary>GetKeyOwnerData</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetKeyOwnerData</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_gui_key_owner_data">ImGuiKeyOwnerData</link> * ImGui::GetKeyOwnerData (<link linkend="_struct_im_gui_context">ImGuiContext</link> * ctx, <link linkend="_imgui_8h_1aa22ffe36b188427d712447ec465203d4">ImGuiKey</link> key)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a48359a9849c1cb2af8fb30c655cf8ff5"/><section>
    <title>GetKeyPressedAmount()</title>
<indexterm><primary>GetKeyPressedAmount</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetKeyPressedAmount</secondary></indexterm>
<para><computeroutput>int ImGui::GetKeyPressedAmount (<link linkend="_imgui_8h_1aa22ffe36b188427d712447ec465203d4">ImGuiKey</link> key, float repeat_delay, float rate)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a7bf620af1d66ee7d7b06701894d23e60"/><section>
    <title>GetMainViewport()</title>
<indexterm><primary>GetMainViewport</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetMainViewport</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_gui_viewport">ImGuiViewport</link> * ImGui::GetMainViewport ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1afff5701c54fdd2c5653ed43e6b5cde1e"/><section>
    <title>GetMouseClickedCount()</title>
<indexterm><primary>GetMouseClickedCount</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetMouseClickedCount</secondary></indexterm>
<para><computeroutput>int ImGui::GetMouseClickedCount (<link linkend="_imgui_8h_1ac16f674bc3efe8e4459caca9bca6eb1e">ImGuiMouseButton</link> button)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a3b955bb840a2411f7c19ac6687d57392"/><section>
    <title>GetMouseCursor()</title>
<indexterm><primary>GetMouseCursor</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetMouseCursor</secondary></indexterm>
<para><computeroutput><link linkend="_imgui_8h_1a9223d6c82bb5d12c2eab5f829ca520ef">ImGuiMouseCursor</link> ImGui::GetMouseCursor ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a242fd32eb24c2070977b0a86a720af6b"/><section>
    <title>GetMouseDragDelta()</title>
<indexterm><primary>GetMouseDragDelta</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetMouseDragDelta</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_vec2">ImVec2</link> ImGui::GetMouseDragDelta (<link linkend="_imgui_8h_1ac16f674bc3efe8e4459caca9bca6eb1e">ImGuiMouseButton</link> button = <computeroutput>0</computeroutput>
, float lock_threshold = <computeroutput>-1.0f</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1abf11873349874c5d302861583c00d451"/><section>
    <title>GetMousePos()</title>
<indexterm><primary>GetMousePos</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetMousePos</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_vec2">ImVec2</link> ImGui::GetMousePos ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ac1ba5d7b76e11d47660b32dc851afd2f"/><section>
    <title>GetMousePosOnOpeningCurrentPopup()</title>
<indexterm><primary>GetMousePosOnOpeningCurrentPopup</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetMousePosOnOpeningCurrentPopup</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_vec2">ImVec2</link> ImGui::GetMousePosOnOpeningCurrentPopup ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ad1982b7e2585d1e5aa2bb17976a0bd5d"/><section>
    <title>GetNavTweakPressedAmount()</title>
<indexterm><primary>GetNavTweakPressedAmount</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetNavTweakPressedAmount</secondary></indexterm>
<para><computeroutput>float ImGui::GetNavTweakPressedAmount (<link linkend="_imgui__internal_8h_1a468e54d5ed387abfbf0d1fc1e33ab483">ImGuiAxis</link> axis)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a3edc2b6129cbf1e8d247c6d03c344065"/><section>
    <title>GetPlatformIO()</title>
<indexterm><primary>GetPlatformIO</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetPlatformIO</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_gui_platform_i_o">ImGuiPlatformIO</link> &amp; ImGui::GetPlatformIO ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a7204f5be9c8656e604ab88aa9158513c"/><section>
    <title>GetPopupAllowedExtentRect()</title>
<indexterm><primary>GetPopupAllowedExtentRect</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetPopupAllowedExtentRect</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_rect">ImRect</link> ImGui::GetPopupAllowedExtentRect (<link linkend="_struct_im_gui_window">ImGuiWindow</link> * window)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1af472cb090157c22e65a0aa1662b9f3d0"/><section>
    <title>GetScrollMaxX()</title>
<indexterm><primary>GetScrollMaxX</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetScrollMaxX</secondary></indexterm>
<para><computeroutput>float ImGui::GetScrollMaxX ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ab34c0d5c63908a7ff50923151730f76a"/><section>
    <title>GetScrollMaxY()</title>
<indexterm><primary>GetScrollMaxY</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetScrollMaxY</secondary></indexterm>
<para><computeroutput>float ImGui::GetScrollMaxY ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a6f88335d87da3be81dc6e24cb1812923"/><section>
    <title>GetScrollX()</title>
<indexterm><primary>GetScrollX</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetScrollX</secondary></indexterm>
<para><computeroutput>float ImGui::GetScrollX ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a3c924a2eeb8b2ddfb40ea17be7ea12a6"/><section>
    <title>GetScrollY()</title>
<indexterm><primary>GetScrollY</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetScrollY</secondary></indexterm>
<para><computeroutput>float ImGui::GetScrollY ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a44a24428cdecdfd7825d37e616e5af45"/><section>
    <title>GetShortcutRoutingData()</title>
<indexterm><primary>GetShortcutRoutingData</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetShortcutRoutingData</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_gui_key_routing_data">ImGuiKeyRoutingData</link> * ImGui::GetShortcutRoutingData (<link linkend="_imgui_8h_1a0720c04fed27e0f01b3722a13c8a8762">ImGuiKeyChord</link> key_chord)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aa2b8fa1a5320cd70f23a53d8fe604fb2"/><section>
    <title>GetStateStorage()</title>
<indexterm><primary>GetStateStorage</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetStateStorage</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_gui_storage">ImGuiStorage</link> * ImGui::GetStateStorage ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1abafef4bb3e3654efd96a47b2e22870a7"/><section>
    <title>GetStyle()</title>
<indexterm><primary>GetStyle</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetStyle</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_gui_style">ImGuiStyle</link> &amp; ImGui::GetStyle ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a265d7614c4c0b92ba6dd43946a3293e0"/><section>
    <title>GetStyleColorName()</title>
<indexterm><primary>GetStyleColorName</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetStyleColorName</secondary></indexterm>
<para><computeroutput>const char * ImGui::GetStyleColorName (<link linkend="_imgui_8h_1a1b0467ec582e731ae6292fef726fb5fe">ImGuiCol</link> idx)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ad838e580972e2c4b3da2b0f60754b662"/><section>
    <title>GetStyleColorVec4()</title>
<indexterm><primary>GetStyleColorVec4</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetStyleColorVec4</secondary></indexterm>
<para><computeroutput>const <link linkend="_struct_im_vec4">ImVec4</link> &amp; ImGui::GetStyleColorVec4 (<link linkend="_imgui_8h_1a1b0467ec582e731ae6292fef726fb5fe">ImGuiCol</link> idx)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a2eab9d3e74a2b3acd2443a6ec815fa41"/><section>
    <title>GetStyleVarInfo()</title>
<indexterm><primary>GetStyleVarInfo</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetStyleVarInfo</secondary></indexterm>
<para><computeroutput>const <link linkend="_struct_im_gui_data_var_info">ImGuiDataVarInfo</link> * ImGui::GetStyleVarInfo (<link linkend="_imgui_8h_1ac919acabce24faae590e295b424874ca">ImGuiStyleVar</link> idx)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aaba5637199d31ea23d4d143b30a44aff"/><section>
    <title>GetTextLineHeight()</title>
<indexterm><primary>GetTextLineHeight</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetTextLineHeight</secondary></indexterm>
<para><computeroutput>float ImGui::GetTextLineHeight ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aa1616f6082fd210fde8d98c511bf8f56"/><section>
    <title>GetTextLineHeightWithSpacing()</title>
<indexterm><primary>GetTextLineHeightWithSpacing</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetTextLineHeightWithSpacing</secondary></indexterm>
<para><computeroutput>float ImGui::GetTextLineHeightWithSpacing ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a3f983cf463367c8fd3a3d5793639dc59"/><section>
    <title>GetTime()</title>
<indexterm><primary>GetTime</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetTime</secondary></indexterm>
<para><computeroutput>double ImGui::GetTime ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aa7d414ea51c3150247c49902b292886c"/><section>
    <title>GetTopMostAndVisiblePopupModal()</title>
<indexterm><primary>GetTopMostAndVisiblePopupModal</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetTopMostAndVisiblePopupModal</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_gui_window">ImGuiWindow</link> * ImGui::GetTopMostAndVisiblePopupModal ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a6b905269b079f5e07755db52cc6e52df"/><section>
    <title>GetTopMostPopupModal()</title>
<indexterm><primary>GetTopMostPopupModal</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetTopMostPopupModal</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_gui_window">ImGuiWindow</link> * ImGui::GetTopMostPopupModal ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a5c89cb6b42296d0f7db75027efc0fb7a"/><section>
    <title>GetTreeNodeToLabelSpacing()</title>
<indexterm><primary>GetTreeNodeToLabelSpacing</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetTreeNodeToLabelSpacing</secondary></indexterm>
<para><computeroutput>float ImGui::GetTreeNodeToLabelSpacing ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a1cc0e048762c17bef27b0f403708cc0b"/><section>
    <title>GetTypematicRepeatRate()</title>
<indexterm><primary>GetTypematicRepeatRate</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetTypematicRepeatRate</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::GetTypematicRepeatRate (<link linkend="_imgui__internal_8h_1aa4211ddd58ae8523981eb953a1caf4b7">ImGuiInputFlags</link> flags, float * repeat_delay, float * repeat_rate)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a5a0ce2f80524c34cfa9f1899e6d6f28d"/><section>
    <title>GetTypingSelectRequest()</title>
<indexterm><primary>GetTypingSelectRequest</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetTypingSelectRequest</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_gui_typing_select_request">ImGuiTypingSelectRequest</link> * ImGui::GetTypingSelectRequest (<link linkend="_imgui__internal_8h_1abe62ecb5234d3ca104d3fb3647c77a8e">ImGuiTypingSelectFlags</link> flags = <computeroutput><link linkend="_imgui__internal_8h_1ad429c1dcfe8d21ea4a7c92f7f466e843a6e66d021bb29780e9a5dffcfa01981b0">ImGuiTypingSelectFlags_None</link></computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a6488c3cfa6331c8a1e93769e580ce020"/><section>
    <title>GetVersion()</title>
<indexterm><primary>GetVersion</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetVersion</secondary></indexterm>
<para><computeroutput>const char * ImGui::GetVersion ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a2f6bbca8b37a24999b5d04caa77ea6fd"/><section>
    <title>GetViewportPlatformMonitor()</title>
<indexterm><primary>GetViewportPlatformMonitor</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetViewportPlatformMonitor</secondary></indexterm>
<para><computeroutput>const <link linkend="_struct_im_gui_platform_monitor">ImGuiPlatformMonitor</link> * ImGui::GetViewportPlatformMonitor (<link linkend="_struct_im_gui_viewport">ImGuiViewport</link> * viewport)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ae1208499040a30ab6dfd30ca0d14fbc2"/><section>
    <title>GetWindowAlwaysWantOwnTabBar()</title>
<indexterm><primary>GetWindowAlwaysWantOwnTabBar</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetWindowAlwaysWantOwnTabBar</secondary></indexterm>
<para><computeroutput>bool ImGui::GetWindowAlwaysWantOwnTabBar (<link linkend="_struct_im_gui_window">ImGuiWindow</link> * window)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a96ce6060592d3ef975594357e650adc6"/><section>
    <title>GetWindowContentRegionMax()</title>
<indexterm><primary>GetWindowContentRegionMax</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetWindowContentRegionMax</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_vec2">ImVec2</link> ImGui::GetWindowContentRegionMax ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a790123aa15c266798f35050ba36b7197"/><section>
    <title>GetWindowContentRegionMin()</title>
<indexterm><primary>GetWindowContentRegionMin</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetWindowContentRegionMin</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_vec2">ImVec2</link> ImGui::GetWindowContentRegionMin ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a8e3b8d78fcc9c9ed772a2b648aadab0c"/><section>
    <title>GetWindowDockID()</title>
<indexterm><primary>GetWindowDockID</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetWindowDockID</secondary></indexterm>
<para><computeroutput><link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> ImGui::GetWindowDockID ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a5b2691cb7df9c6ae351fb7a413e48e8c"/><section>
    <title>GetWindowDockNode()</title>
<indexterm><primary>GetWindowDockNode</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetWindowDockNode</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_gui_dock_node">ImGuiDockNode</link> * ImGui::GetWindowDockNode ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a98ae0bd17b81b2b3be6dcb332a3af6a8"/><section>
    <title>GetWindowDpiScale()</title>
<indexterm><primary>GetWindowDpiScale</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetWindowDpiScale</secondary></indexterm>
<para><computeroutput>float ImGui::GetWindowDpiScale ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aa100c22a9feafe843fa12c66590cbda0"/><section>
    <title>GetWindowDrawList()</title>
<indexterm><primary>GetWindowDrawList</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetWindowDrawList</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_draw_list">ImDrawList</link> * ImGui::GetWindowDrawList ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a44d2bfb80e0d2dd232a553ab29a91b52"/><section>
    <title>GetWindowHeight()</title>
<indexterm><primary>GetWindowHeight</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetWindowHeight</secondary></indexterm>
<para><computeroutput>float ImGui::GetWindowHeight ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a413d939f3ef416a47d6e5b48be955146"/><section>
    <title>GetWindowPos()</title>
<indexterm><primary>GetWindowPos</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetWindowPos</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_vec2">ImVec2</link> ImGui::GetWindowPos ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aed2c39ff4f7790fe03b4d9b2893d4ef4"/><section>
    <title>GetWindowResizeBorderID()</title>
<indexterm><primary>GetWindowResizeBorderID</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetWindowResizeBorderID</secondary></indexterm>
<para><computeroutput><link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> ImGui::GetWindowResizeBorderID (<link linkend="_struct_im_gui_window">ImGuiWindow</link> * window, <link linkend="_imgui_8h_1a874086389bc27cc9647118d22a806403">ImGuiDir</link> dir)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a22041ad222e2b5c86773d70d47078fa3"/><section>
    <title>GetWindowResizeCornerID()</title>
<indexterm><primary>GetWindowResizeCornerID</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetWindowResizeCornerID</secondary></indexterm>
<para><computeroutput><link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> ImGui::GetWindowResizeCornerID (<link linkend="_struct_im_gui_window">ImGuiWindow</link> * window, int n)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a426c9b60bf8cd3d887ba50366a2612df"/><section>
    <title>GetWindowScrollbarID()</title>
<indexterm><primary>GetWindowScrollbarID</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetWindowScrollbarID</secondary></indexterm>
<para><computeroutput><link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> ImGui::GetWindowScrollbarID (<link linkend="_struct_im_gui_window">ImGuiWindow</link> * window, <link linkend="_imgui__internal_8h_1a468e54d5ed387abfbf0d1fc1e33ab483">ImGuiAxis</link> axis)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ab0be56f97f06487343342a8d99261409"/><section>
    <title>GetWindowScrollbarRect()</title>
<indexterm><primary>GetWindowScrollbarRect</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetWindowScrollbarRect</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_rect">ImRect</link> ImGui::GetWindowScrollbarRect (<link linkend="_struct_im_gui_window">ImGuiWindow</link> * window, <link linkend="_imgui__internal_8h_1a468e54d5ed387abfbf0d1fc1e33ab483">ImGuiAxis</link> axis)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aaa5c0bfac7125ba9850a08b6db2e90c9"/><section>
    <title>GetWindowSize()</title>
<indexterm><primary>GetWindowSize</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetWindowSize</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_vec2">ImVec2</link> ImGui::GetWindowSize ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a8a37885b98909fb087e3d658d5545145"/><section>
    <title>GetWindowViewport()</title>
<indexterm><primary>GetWindowViewport</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetWindowViewport</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_gui_viewport">ImGuiViewport</link> * ImGui::GetWindowViewport ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a471ff23945b99541c506dbdc2a9004cf"/><section>
    <title>GetWindowWidth()</title>
<indexterm><primary>GetWindowWidth</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>GetWindowWidth</secondary></indexterm>
<para><computeroutput>float ImGui::GetWindowWidth ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a95b5d733371c3b74caf89dbae8d51419"/><section>
    <title>Image()</title>
<indexterm><primary>Image</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>Image</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::Image (<link linkend="_imgui_8h_1a364f4447ecbc4ca176145ccff9db6286">ImTextureID</link> user_texture_id, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; image_size, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; uv0 = <computeroutput><link linkend="_struct_im_vec2">ImVec2</link>(0,&#160;0)</computeroutput>
, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; uv1 = <computeroutput><link linkend="_struct_im_vec2">ImVec2</link>(1,&#160;1)</computeroutput>
, const <link linkend="_struct_im_vec4">ImVec4</link> &amp; tint_col = <computeroutput><link linkend="_struct_im_vec4">ImVec4</link>(1,&#160;1,&#160;1,&#160;1)</computeroutput>
, const <link linkend="_struct_im_vec4">ImVec4</link> &amp; border_col = <computeroutput><link linkend="_struct_im_vec4">ImVec4</link>(0,&#160;0,&#160;0,&#160;0)</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1af3b1c663cabd3324291be7f13c1eb60f"/><section>
    <title>ImageButton()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>ImageButton</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>ImageButton</secondary></indexterm>
<para><computeroutput>bool ImGui::ImageButton (const char * str_id, <link linkend="_imgui_8h_1a364f4447ecbc4ca176145ccff9db6286">ImTextureID</link> user_texture_id, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; image_size, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; uv0 = <computeroutput><link linkend="_struct_im_vec2">ImVec2</link>(0,&#160;0)</computeroutput>
, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; uv1 = <computeroutput><link linkend="_struct_im_vec2">ImVec2</link>(1,&#160;1)</computeroutput>
, const <link linkend="_struct_im_vec4">ImVec4</link> &amp; bg_col = <computeroutput><link linkend="_struct_im_vec4">ImVec4</link>(0,&#160;0,&#160;0,&#160;0)</computeroutput>
, const <link linkend="_struct_im_vec4">ImVec4</link> &amp; tint_col = <computeroutput><link linkend="_struct_im_vec4">ImVec4</link>(1,&#160;1,&#160;1,&#160;1)</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ac79ef64e8b9e1db73d8237f6a999da14"/><section>
    <title>ImageButton()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>ImageButton</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>ImageButton</secondary></indexterm>
<para><computeroutput>bool ImGui::ImageButton (<link linkend="_imgui_8h_1a364f4447ecbc4ca176145ccff9db6286">ImTextureID</link> user_texture_id, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; size, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; uv0 = <computeroutput><link linkend="_struct_im_vec2">ImVec2</link>(0,&#160;0)</computeroutput>
, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; uv1 = <computeroutput><link linkend="_struct_im_vec2">ImVec2</link>(1,&#160;1)</computeroutput>
, int frame_padding = <computeroutput>-1</computeroutput>
, const <link linkend="_struct_im_vec4">ImVec4</link> &amp; bg_col = <computeroutput><link linkend="_struct_im_vec4">ImVec4</link>(0,&#160;0,&#160;0,&#160;0)</computeroutput>
, const <link linkend="_struct_im_vec4">ImVec4</link> &amp; tint_col = <computeroutput><link linkend="_struct_im_vec4">ImVec4</link>(1,&#160;1,&#160;1,&#160;1)</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aa696e652d6c161dadfd12c4392d6b8ed"/><section>
    <title>ImageButtonEx()</title>
<indexterm><primary>ImageButtonEx</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>ImageButtonEx</secondary></indexterm>
<para><computeroutput>bool ImGui::ImageButtonEx (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id, <link linkend="_imgui_8h_1a364f4447ecbc4ca176145ccff9db6286">ImTextureID</link> texture_id, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; image_size, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; uv0, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; uv1, const <link linkend="_struct_im_vec4">ImVec4</link> &amp; bg_col, const <link linkend="_struct_im_vec4">ImVec4</link> &amp; tint_col, <link linkend="_imgui_8h_1a990fae518aa1d95f571ee40989de4c22">ImGuiButtonFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a6c7b9f2d60951462eeebad80154a8926"/><section>
    <title>Indent()</title>
<indexterm><primary>Indent</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>Indent</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::Indent (float indent_w = <computeroutput>0.0f</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a1a611da38fae18a3d1dafcb3228259da"/><section>
    <title>Initialize()</title>
<indexterm><primary>Initialize</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>Initialize</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::Initialize ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ad941c3cfa561ca35b674fd5802bcf870"/><section>
    <title>InputDouble()</title>
<indexterm><primary>InputDouble</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>InputDouble</secondary></indexterm>
<para><computeroutput>bool ImGui::InputDouble (const char * label, double * v, double step = <computeroutput>0.0</computeroutput>
, double step_fast = <computeroutput>0.0</computeroutput>
, const char * format = <computeroutput>&quot;%.6f&quot;</computeroutput>
, <link linkend="_imgui_8h_1a7d2c6153a6b9b5d3178ce82434ac9fb8">ImGuiInputTextFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a36b86c9d7226f18c316400c83a904454"/><section>
    <title>InputFloat()</title>
<indexterm><primary>InputFloat</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>InputFloat</secondary></indexterm>
<para><computeroutput>bool ImGui::InputFloat (const char * label, float * v, float step = <computeroutput>0.0f</computeroutput>
, float step_fast = <computeroutput>0.0f</computeroutput>
, const char * format = <computeroutput>&quot;%.3f&quot;</computeroutput>
, <link linkend="_imgui_8h_1a7d2c6153a6b9b5d3178ce82434ac9fb8">ImGuiInputTextFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a854ba6decd4ae7e4b0980a9c71bfa47d"/><section>
    <title>InputFloat2()</title>
<indexterm><primary>InputFloat2</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>InputFloat2</secondary></indexterm>
<para><computeroutput>bool ImGui::InputFloat2 (const char * label, float v[2], const char * format = <computeroutput>&quot;%.3f&quot;</computeroutput>
, <link linkend="_imgui_8h_1a7d2c6153a6b9b5d3178ce82434ac9fb8">ImGuiInputTextFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a970a00fd1a4226c697ea5fb807fb62d8"/><section>
    <title>InputFloat3()</title>
<indexterm><primary>InputFloat3</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>InputFloat3</secondary></indexterm>
<para><computeroutput>bool ImGui::InputFloat3 (const char * label, float v[3], const char * format = <computeroutput>&quot;%.3f&quot;</computeroutput>
, <link linkend="_imgui_8h_1a7d2c6153a6b9b5d3178ce82434ac9fb8">ImGuiInputTextFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a69675d2e9780a0e5a7a372f936b64d49"/><section>
    <title>InputFloat4()</title>
<indexterm><primary>InputFloat4</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>InputFloat4</secondary></indexterm>
<para><computeroutput>bool ImGui::InputFloat4 (const char * label, float v[4], const char * format = <computeroutput>&quot;%.3f&quot;</computeroutput>
, <link linkend="_imgui_8h_1a7d2c6153a6b9b5d3178ce82434ac9fb8">ImGuiInputTextFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a36fc45a3c41a63ea9a983cc851752505"/><section>
    <title>InputInt()</title>
<indexterm><primary>InputInt</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>InputInt</secondary></indexterm>
<para><computeroutput>bool ImGui::InputInt (const char * label, int * v, int step = <computeroutput>1</computeroutput>
, int step_fast = <computeroutput>100</computeroutput>
, <link linkend="_imgui_8h_1a7d2c6153a6b9b5d3178ce82434ac9fb8">ImGuiInputTextFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a83dfd2daacefb741e67d8d69821e1590"/><section>
    <title>InputInt2()</title>
<indexterm><primary>InputInt2</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>InputInt2</secondary></indexterm>
<para><computeroutput>bool ImGui::InputInt2 (const char * label, int v[2], <link linkend="_imgui_8h_1a7d2c6153a6b9b5d3178ce82434ac9fb8">ImGuiInputTextFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ab8e7466e5bdda70fefa551eb662dc3f5"/><section>
    <title>InputInt3()</title>
<indexterm><primary>InputInt3</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>InputInt3</secondary></indexterm>
<para><computeroutput>bool ImGui::InputInt3 (const char * label, int v[3], <link linkend="_imgui_8h_1a7d2c6153a6b9b5d3178ce82434ac9fb8">ImGuiInputTextFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a3a57668b83f7a99d295f94baa71add0a"/><section>
    <title>InputInt4()</title>
<indexterm><primary>InputInt4</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>InputInt4</secondary></indexterm>
<para><computeroutput>bool ImGui::InputInt4 (const char * label, int v[4], <link linkend="_imgui_8h_1a7d2c6153a6b9b5d3178ce82434ac9fb8">ImGuiInputTextFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1afdb54540b7480872fbb746f64344b374"/><section>
    <title>InputScalar()</title>
<indexterm><primary>InputScalar</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>InputScalar</secondary></indexterm>
<para><computeroutput>bool ImGui::InputScalar (const char * label, <link linkend="_imgui_8h_1a4cfa8697a3d76722fff83eb18922e9d5">ImGuiDataType</link> data_type, <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * p_data, const <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * p_step = <computeroutput>NULL</computeroutput>
, const <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * p_step_fast = <computeroutput>NULL</computeroutput>
, const char * format = <computeroutput>NULL</computeroutput>
, <link linkend="_imgui_8h_1a7d2c6153a6b9b5d3178ce82434ac9fb8">ImGuiInputTextFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1afb17f0092027c09183df498834abace9"/><section>
    <title>InputScalarN()</title>
<indexterm><primary>InputScalarN</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>InputScalarN</secondary></indexterm>
<para><computeroutput>bool ImGui::InputScalarN (const char * label, <link linkend="_imgui_8h_1a4cfa8697a3d76722fff83eb18922e9d5">ImGuiDataType</link> data_type, <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * p_data, int components, const <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * p_step = <computeroutput>NULL</computeroutput>
, const <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * p_step_fast = <computeroutput>NULL</computeroutput>
, const char * format = <computeroutput>NULL</computeroutput>
, <link linkend="_imgui_8h_1a7d2c6153a6b9b5d3178ce82434ac9fb8">ImGuiInputTextFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aa72b5760a3a206729723a587ac7c8519"/><section>
    <title>InputText()</title>
<indexterm><primary>InputText</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>InputText</secondary></indexterm>
<para><computeroutput>bool ImGui::InputText (const char * label, char * buf, size_t buf_size, <link linkend="_imgui_8h_1a7d2c6153a6b9b5d3178ce82434ac9fb8">ImGuiInputTextFlags</link> flags = <computeroutput>0</computeroutput>
, <link linkend="_imgui_8h_1a65fd2b568a62c9aa2a28a8a13eb65ad7">ImGuiInputTextCallback</link> callback = <computeroutput>NULL</computeroutput>
, <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * user_data = <computeroutput>NULL</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aad9419cf6e296c668807e3af4bfd62bb"/><section>
    <title>InputTextDeactivateHook()</title>
<indexterm><primary>InputTextDeactivateHook</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>InputTextDeactivateHook</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::InputTextDeactivateHook (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1af89af17ecc11653f25fea1e50e195de6"/><section>
    <title>InputTextEx()</title>
<indexterm><primary>InputTextEx</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>InputTextEx</secondary></indexterm>
<para><computeroutput>bool ImGui::InputTextEx (const char * label, const char * hint, char * buf, int buf_size, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; size_arg, <link linkend="_imgui_8h_1a7d2c6153a6b9b5d3178ce82434ac9fb8">ImGuiInputTextFlags</link> flags, <link linkend="_imgui_8h_1a65fd2b568a62c9aa2a28a8a13eb65ad7">ImGuiInputTextCallback</link> callback = <computeroutput>NULL</computeroutput>
, <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * user_data = <computeroutput>NULL</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a0470693929ed9930cbf5b737577c2414"/><section>
    <title>InputTextMultiline()</title>
<indexterm><primary>InputTextMultiline</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>InputTextMultiline</secondary></indexterm>
<para><computeroutput>bool ImGui::InputTextMultiline (const char * label, char * buf, size_t buf_size, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; size = <computeroutput><link linkend="_struct_im_vec2">ImVec2</link>(0,&#160;0)</computeroutput>
, <link linkend="_imgui_8h_1a7d2c6153a6b9b5d3178ce82434ac9fb8">ImGuiInputTextFlags</link> flags = <computeroutput>0</computeroutput>
, <link linkend="_imgui_8h_1a65fd2b568a62c9aa2a28a8a13eb65ad7">ImGuiInputTextCallback</link> callback = <computeroutput>NULL</computeroutput>
, <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * user_data = <computeroutput>NULL</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aee5a5127f494966ad16e578714e8fac2"/><section>
    <title>InputTextWithHint()</title>
<indexterm><primary>InputTextWithHint</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>InputTextWithHint</secondary></indexterm>
<para><computeroutput>bool ImGui::InputTextWithHint (const char * label, const char * hint, char * buf, size_t buf_size, <link linkend="_imgui_8h_1a7d2c6153a6b9b5d3178ce82434ac9fb8">ImGuiInputTextFlags</link> flags = <computeroutput>0</computeroutput>
, <link linkend="_imgui_8h_1a65fd2b568a62c9aa2a28a8a13eb65ad7">ImGuiInputTextCallback</link> callback = <computeroutput>NULL</computeroutput>
, <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * user_data = <computeroutput>NULL</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a1f61951b9d3a38083bd77b1dbe3ea895"/><section>
    <title>InvisibleButton()</title>
<indexterm><primary>InvisibleButton</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>InvisibleButton</secondary></indexterm>
<para><computeroutput>bool ImGui::InvisibleButton (const char * str_id, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; size, <link linkend="_imgui_8h_1a990fae518aa1d95f571ee40989de4c22">ImGuiButtonFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a900c43afe3b59d3844ca4c9ff27ef4f6"/><section>
    <title>IsActiveIdUsingNavDir()</title>
<indexterm><primary>IsActiveIdUsingNavDir</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>IsActiveIdUsingNavDir</secondary></indexterm>
<para><computeroutput>bool ImGui::IsActiveIdUsingNavDir (<link linkend="_imgui_8h_1a874086389bc27cc9647118d22a806403">ImGuiDir</link> dir)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ac8e09701fd3ff94f49df16ecd6526149"/><section>
    <title>IsAliasKey()</title>
<indexterm><primary>IsAliasKey</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>IsAliasKey</secondary></indexterm>
<para><computeroutput>bool ImGui::IsAliasKey (<link linkend="_imgui_8h_1aa22ffe36b188427d712447ec465203d4">ImGuiKey</link> key)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1acdc18199d50d26919312db5f9707b8dc"/><section>
    <title>IsAnyItemActive()</title>
<indexterm><primary>IsAnyItemActive</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>IsAnyItemActive</secondary></indexterm>
<para><computeroutput>bool ImGui::IsAnyItemActive ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a89514ca4c0a2b883c878736d92352656"/><section>
    <title>IsAnyItemFocused()</title>
<indexterm><primary>IsAnyItemFocused</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>IsAnyItemFocused</secondary></indexterm>
<para><computeroutput>bool ImGui::IsAnyItemFocused ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a0512146617bb55e24ebcfbe3ce6553d5"/><section>
    <title>IsAnyItemHovered()</title>
<indexterm><primary>IsAnyItemHovered</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>IsAnyItemHovered</secondary></indexterm>
<para><computeroutput>bool ImGui::IsAnyItemHovered ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a0ce3f28b6b09f031e12e7a81708c043a"/><section>
    <title>IsAnyMouseDown()</title>
<indexterm><primary>IsAnyMouseDown</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>IsAnyMouseDown</secondary></indexterm>
<para><computeroutput>bool ImGui::IsAnyMouseDown ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a7c21c85f5c95aa4ce6c2bd28bb980d44"/><section>
    <title>IsClippedEx()</title>
<indexterm><primary>IsClippedEx</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>IsClippedEx</secondary></indexterm>
<para><computeroutput>bool ImGui::IsClippedEx (const <link linkend="_struct_im_rect">ImRect</link> &amp; bb, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1adaf08bdf24e9c64c18403702448bee96"/><section>
    <title>IsDragDropActive()</title>
<indexterm><primary>IsDragDropActive</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>IsDragDropActive</secondary></indexterm>
<para><computeroutput>bool ImGui::IsDragDropActive ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a673042a1ed3eeb3c19781faed83ad4a8"/><section>
    <title>IsDragDropPayloadBeingAccepted()</title>
<indexterm><primary>IsDragDropPayloadBeingAccepted</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>IsDragDropPayloadBeingAccepted</secondary></indexterm>
<para><computeroutput>bool ImGui::IsDragDropPayloadBeingAccepted ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1acbf72e4cb07d326caf3c9b2c29d543d6"/><section>
    <title>IsGamepadKey()</title>
<indexterm><primary>IsGamepadKey</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>IsGamepadKey</secondary></indexterm>
<para><computeroutput>bool ImGui::IsGamepadKey (<link linkend="_imgui_8h_1aa22ffe36b188427d712447ec465203d4">ImGuiKey</link> key)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a574b7cecdeb707c429edc827c49983f5"/><section>
    <title>IsItemActivated()</title>
<indexterm><primary>IsItemActivated</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>IsItemActivated</secondary></indexterm>
<para><computeroutput>bool ImGui::IsItemActivated ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a2d8ac4569456a8003e4dddd39caf771c"/><section>
    <title>IsItemActive()</title>
<indexterm><primary>IsItemActive</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>IsItemActive</secondary></indexterm>
<para><computeroutput>bool ImGui::IsItemActive ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a11ae401d73ed6b044ba46add5db54617"/><section>
    <title>IsItemClicked()</title>
<indexterm><primary>IsItemClicked</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>IsItemClicked</secondary></indexterm>
<para><computeroutput>bool ImGui::IsItemClicked (<link linkend="_imgui_8h_1ac16f674bc3efe8e4459caca9bca6eb1e">ImGuiMouseButton</link> mouse_button = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ada3b1cb76907bb9e630b2482f52f0599"/><section>
    <title>IsItemDeactivated()</title>
<indexterm><primary>IsItemDeactivated</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>IsItemDeactivated</secondary></indexterm>
<para><computeroutput>bool ImGui::IsItemDeactivated ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a8bb4c0fc2b9d0e90249310bb4e822485"/><section>
    <title>IsItemDeactivatedAfterEdit()</title>
<indexterm><primary>IsItemDeactivatedAfterEdit</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>IsItemDeactivatedAfterEdit</secondary></indexterm>
<para><computeroutput>bool ImGui::IsItemDeactivatedAfterEdit ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a6508c0e1f28d1e7f9328a944b4f35ff7"/><section>
    <title>IsItemEdited()</title>
<indexterm><primary>IsItemEdited</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>IsItemEdited</secondary></indexterm>
<para><computeroutput>bool ImGui::IsItemEdited ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1add3290865a67327258c3a32b695adb28"/><section>
    <title>IsItemFocused()</title>
<indexterm><primary>IsItemFocused</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>IsItemFocused</secondary></indexterm>
<para><computeroutput>bool ImGui::IsItemFocused ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ac9a400eff3a9561d95e80486c52a660b"/><section>
    <title>IsItemHovered()</title>
<indexterm><primary>IsItemHovered</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>IsItemHovered</secondary></indexterm>
<para><computeroutput>bool ImGui::IsItemHovered (<link linkend="_imgui_8h_1a3a8f688665e5ea0bd9700e1251580a2c">ImGuiHoveredFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a2f52aab3ede3e1a4a130c88154e1560f"/><section>
    <title>IsItemToggledOpen()</title>
<indexterm><primary>IsItemToggledOpen</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>IsItemToggledOpen</secondary></indexterm>
<para><computeroutput>bool ImGui::IsItemToggledOpen ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a876531f43e47df35da37472b0923e11d"/><section>
    <title>IsItemToggledSelection()</title>
<indexterm><primary>IsItemToggledSelection</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>IsItemToggledSelection</secondary></indexterm>
<para><computeroutput>bool ImGui::IsItemToggledSelection ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a0e9273fc53bdf7ca39d59cdb657c3c2f"/><section>
    <title>IsItemVisible()</title>
<indexterm><primary>IsItemVisible</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>IsItemVisible</secondary></indexterm>
<para><computeroutput>bool ImGui::IsItemVisible ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a21498048e9bc00052c395518ba96a6e4"/><section>
    <title>IsKeyboardKey()</title>
<indexterm><primary>IsKeyboardKey</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>IsKeyboardKey</secondary></indexterm>
<para><computeroutput>bool ImGui::IsKeyboardKey (<link linkend="_imgui_8h_1aa22ffe36b188427d712447ec465203d4">ImGuiKey</link> key)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ab3e095e7757d000686cfa2aff76534d2"/><section>
    <title>IsKeyChordPressed()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>IsKeyChordPressed</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>IsKeyChordPressed</secondary></indexterm>
<para><computeroutput>bool ImGui::IsKeyChordPressed (<link linkend="_imgui_8h_1a0720c04fed27e0f01b3722a13c8a8762">ImGuiKeyChord</link> key_chord)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ac927e43929d43408de2ce53b33411ef9"/><section>
    <title>IsKeyChordPressed()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>IsKeyChordPressed</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>IsKeyChordPressed</secondary></indexterm>
<para><computeroutput>bool ImGui::IsKeyChordPressed (<link linkend="_imgui_8h_1a0720c04fed27e0f01b3722a13c8a8762">ImGuiKeyChord</link> key_chord, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> owner_id, <link linkend="_imgui__internal_8h_1aa4211ddd58ae8523981eb953a1caf4b7">ImGuiInputFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a82095f2501c1df5ccd1928a53edaad99"/><section>
    <title>IsKeyDown()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>IsKeyDown</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>IsKeyDown</secondary></indexterm>
<para><computeroutput>bool ImGui::IsKeyDown (<link linkend="_imgui_8h_1aa22ffe36b188427d712447ec465203d4">ImGuiKey</link> key)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ad217907a75adfff08f6dee35feeadaad"/><section>
    <title>IsKeyDown()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>IsKeyDown</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>IsKeyDown</secondary></indexterm>
<para><computeroutput>bool ImGui::IsKeyDown (<link linkend="_imgui_8h_1aa22ffe36b188427d712447ec465203d4">ImGuiKey</link> key, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> owner_id)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a477c2ef31c9641b158d78879780bd108"/><section>
    <title>IsKeyPressed()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>IsKeyPressed</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>IsKeyPressed</secondary></indexterm>
<para><computeroutput>bool ImGui::IsKeyPressed (<link linkend="_imgui_8h_1aa22ffe36b188427d712447ec465203d4">ImGuiKey</link> key, bool repeat = <computeroutput>true</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a34c2ae88871301f93a396113e8a46ac9"/><section>
    <title>IsKeyPressed()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>IsKeyPressed</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>IsKeyPressed</secondary></indexterm>
<para><computeroutput>bool ImGui::IsKeyPressed (<link linkend="_imgui_8h_1aa22ffe36b188427d712447ec465203d4">ImGuiKey</link> key, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> owner_id, <link linkend="_imgui__internal_8h_1aa4211ddd58ae8523981eb953a1caf4b7">ImGuiInputFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aa4c4806c81aef3abe125b209f19d4a2b"/><section>
    <title>IsKeyPressedMap()</title>
<indexterm><primary>IsKeyPressedMap</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>IsKeyPressedMap</secondary></indexterm>
<para><computeroutput>bool ImGui::IsKeyPressedMap (<link linkend="_imgui_8h_1aa22ffe36b188427d712447ec465203d4">ImGuiKey</link> key, bool repeat = <computeroutput>true</computeroutput>
)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1af37007f6f7296f056590b1ca54796f56"/><section>
    <title>IsKeyReleased()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>IsKeyReleased</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>IsKeyReleased</secondary></indexterm>
<para><computeroutput>bool ImGui::IsKeyReleased (<link linkend="_imgui_8h_1aa22ffe36b188427d712447ec465203d4">ImGuiKey</link> key)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a5b94b4c6c78d7a23d045df6a79ff072b"/><section>
    <title>IsKeyReleased()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>IsKeyReleased</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>IsKeyReleased</secondary></indexterm>
<para><computeroutput>bool ImGui::IsKeyReleased (<link linkend="_imgui_8h_1aa22ffe36b188427d712447ec465203d4">ImGuiKey</link> key, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> owner_id)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a8737377cd9666008318a3fa66fa943c7"/><section>
    <title>IsLegacyKey()</title>
<indexterm><primary>IsLegacyKey</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>IsLegacyKey</secondary></indexterm>
<para><computeroutput>bool ImGui::IsLegacyKey (<link linkend="_imgui_8h_1aa22ffe36b188427d712447ec465203d4">ImGuiKey</link> key)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a2012dba37c81d25081e47b446fbcd485"/><section>
    <title>IsModKey()</title>
<indexterm><primary>IsModKey</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>IsModKey</secondary></indexterm>
<para><computeroutput>bool ImGui::IsModKey (<link linkend="_imgui_8h_1aa22ffe36b188427d712447ec465203d4">ImGuiKey</link> key)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a2d430db9485d0b3d86d51d5436225495"/><section>
    <title>IsMouseClicked()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>IsMouseClicked</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>IsMouseClicked</secondary></indexterm>
<para><computeroutput>bool ImGui::IsMouseClicked (<link linkend="_imgui_8h_1ac16f674bc3efe8e4459caca9bca6eb1e">ImGuiMouseButton</link> button, bool repeat = <computeroutput>false</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a268f89a9233099f3de4e628c80863ccc"/><section>
    <title>IsMouseClicked()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>IsMouseClicked</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>IsMouseClicked</secondary></indexterm>
<para><computeroutput>bool ImGui::IsMouseClicked (<link linkend="_imgui_8h_1ac16f674bc3efe8e4459caca9bca6eb1e">ImGuiMouseButton</link> button, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> owner_id, <link linkend="_imgui__internal_8h_1aa4211ddd58ae8523981eb953a1caf4b7">ImGuiInputFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a2cc28f85bd97eecf708ce78c11761fb9"/><section>
    <title>IsMouseDoubleClicked()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>IsMouseDoubleClicked</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>IsMouseDoubleClicked</secondary></indexterm>
<para><computeroutput>bool ImGui::IsMouseDoubleClicked (<link linkend="_imgui_8h_1ac16f674bc3efe8e4459caca9bca6eb1e">ImGuiMouseButton</link> button)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1abe4aba05f5a4b4350736586eb1df6e22"/><section>
    <title>IsMouseDoubleClicked()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>IsMouseDoubleClicked</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>IsMouseDoubleClicked</secondary></indexterm>
<para><computeroutput>bool ImGui::IsMouseDoubleClicked (<link linkend="_imgui_8h_1ac16f674bc3efe8e4459caca9bca6eb1e">ImGuiMouseButton</link> button, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> owner_id)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aed7dae248aa865bf06c1d60c0e809537"/><section>
    <title>IsMouseDown()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>IsMouseDown</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>IsMouseDown</secondary></indexterm>
<para><computeroutput>bool ImGui::IsMouseDown (<link linkend="_imgui_8h_1ac16f674bc3efe8e4459caca9bca6eb1e">ImGuiMouseButton</link> button)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a1b1bad6338785c6d1bc85c2730bd485f"/><section>
    <title>IsMouseDown()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>IsMouseDown</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>IsMouseDown</secondary></indexterm>
<para><computeroutput>bool ImGui::IsMouseDown (<link linkend="_imgui_8h_1ac16f674bc3efe8e4459caca9bca6eb1e">ImGuiMouseButton</link> button, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> owner_id)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a0fc57160c83b9f2707fa762f8ac2f8ba"/><section>
    <title>IsMouseDragging()</title>
<indexterm><primary>IsMouseDragging</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>IsMouseDragging</secondary></indexterm>
<para><computeroutput>bool ImGui::IsMouseDragging (<link linkend="_imgui_8h_1ac16f674bc3efe8e4459caca9bca6eb1e">ImGuiMouseButton</link> button, float lock_threshold = <computeroutput>-1.0f</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ad1b3473eaad344022a022acfd45b0f5c"/><section>
    <title>IsMouseDragPastThreshold()</title>
<indexterm><primary>IsMouseDragPastThreshold</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>IsMouseDragPastThreshold</secondary></indexterm>
<para><computeroutput>bool ImGui::IsMouseDragPastThreshold (<link linkend="_imgui_8h_1ac16f674bc3efe8e4459caca9bca6eb1e">ImGuiMouseButton</link> button, float lock_threshold = <computeroutput>-1.0f</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ae0b8ea0e06c457316d6aed6c5b2a1c25"/><section>
    <title>IsMouseHoveringRect()</title>
<indexterm><primary>IsMouseHoveringRect</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>IsMouseHoveringRect</secondary></indexterm>
<para><computeroutput>bool ImGui::IsMouseHoveringRect (const <link linkend="_struct_im_vec2">ImVec2</link> &amp; r_min, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; r_max, bool clip = <computeroutput>true</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a7da544966780a0000f0ad395d98ca63d"/><section>
    <title>IsMouseKey()</title>
<indexterm><primary>IsMouseKey</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>IsMouseKey</secondary></indexterm>
<para><computeroutput>bool ImGui::IsMouseKey (<link linkend="_imgui_8h_1aa22ffe36b188427d712447ec465203d4">ImGuiKey</link> key)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a22d482190e8f549d5904aded1c6f7778"/><section>
    <title>IsMousePosValid()</title>
<indexterm><primary>IsMousePosValid</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>IsMousePosValid</secondary></indexterm>
<para><computeroutput>bool ImGui::IsMousePosValid (const <link linkend="_struct_im_vec2">ImVec2</link> * mouse_pos = <computeroutput>NULL</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ae53a0c1818d2804e3b1331f0c1777434"/><section>
    <title>IsMouseReleased()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>IsMouseReleased</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>IsMouseReleased</secondary></indexterm>
<para><computeroutput>bool ImGui::IsMouseReleased (<link linkend="_imgui_8h_1ac16f674bc3efe8e4459caca9bca6eb1e">ImGuiMouseButton</link> button)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1accd979a6c2ea9738134c30131d95c3b9"/><section>
    <title>IsMouseReleased()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>IsMouseReleased</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>IsMouseReleased</secondary></indexterm>
<para><computeroutput>bool ImGui::IsMouseReleased (<link linkend="_imgui_8h_1ac16f674bc3efe8e4459caca9bca6eb1e">ImGuiMouseButton</link> button, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> owner_id)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a1e6a2ce7696a25d0dd0cf318e3b48a33"/><section>
    <title>IsNamedKey()</title>
<indexterm><primary>IsNamedKey</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>IsNamedKey</secondary></indexterm>
<para><computeroutput>bool ImGui::IsNamedKey (<link linkend="_imgui_8h_1aa22ffe36b188427d712447ec465203d4">ImGuiKey</link> key)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a7b5067083f1220902151fad9be98c59d"/><section>
    <title>IsNamedKeyOrModKey()</title>
<indexterm><primary>IsNamedKeyOrModKey</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>IsNamedKeyOrModKey</secondary></indexterm>
<para><computeroutput>bool ImGui::IsNamedKeyOrModKey (<link linkend="_imgui_8h_1aa22ffe36b188427d712447ec465203d4">ImGuiKey</link> key)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a0e351145d0936e79948094166757712e"/><section>
    <title>IsPopupOpen()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>IsPopupOpen</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>IsPopupOpen</secondary></indexterm>
<para><computeroutput>bool ImGui::IsPopupOpen (const char * str_id, <link linkend="_imgui_8h_1af06c83fd0d1f3442139f0a5459b5a18a">ImGuiPopupFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ad6bbd52db52d44eb7e96b882d7ae2c17"/><section>
    <title>IsPopupOpen()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>IsPopupOpen</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>IsPopupOpen</secondary></indexterm>
<para><computeroutput>bool ImGui::IsPopupOpen (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id, <link linkend="_imgui_8h_1af06c83fd0d1f3442139f0a5459b5a18a">ImGuiPopupFlags</link> popup_flags)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a5aca7e6939e07caaca489aa8c776fd81"/><section>
    <title>IsRectVisible()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>IsRectVisible</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>IsRectVisible</secondary></indexterm>
<para><computeroutput>bool ImGui::IsRectVisible (const <link linkend="_struct_im_vec2">ImVec2</link> &amp; rect_min, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; rect_max)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a578ead6237b3ed05497ed361f18d9f97"/><section>
    <title>IsRectVisible()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>IsRectVisible</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>IsRectVisible</secondary></indexterm>
<para><computeroutput>bool ImGui::IsRectVisible (const <link linkend="_struct_im_vec2">ImVec2</link> &amp; size)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ac5dd091c08f9d923c8f849353fe359bf"/><section>
    <title>IsWindowAbove()</title>
<indexterm><primary>IsWindowAbove</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>IsWindowAbove</secondary></indexterm>
<para><computeroutput>bool ImGui::IsWindowAbove (<link linkend="_struct_im_gui_window">ImGuiWindow</link> * potential_above, <link linkend="_struct_im_gui_window">ImGuiWindow</link> * potential_below)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a99fd14154aae264087d471132e56a42e"/><section>
    <title>IsWindowAppearing()</title>
<indexterm><primary>IsWindowAppearing</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>IsWindowAppearing</secondary></indexterm>
<para><computeroutput>bool ImGui::IsWindowAppearing ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a9ac223b9e17540da02c233d29914689d"/><section>
    <title>IsWindowChildOf()</title>
<indexterm><primary>IsWindowChildOf</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>IsWindowChildOf</secondary></indexterm>
<para><computeroutput>bool ImGui::IsWindowChildOf (<link linkend="_struct_im_gui_window">ImGuiWindow</link> * window, <link linkend="_struct_im_gui_window">ImGuiWindow</link> * potential_parent, bool popup_hierarchy, bool dock_hierarchy)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a2a6492aea9013c0078fc530a66e11768"/><section>
    <title>IsWindowCollapsed()</title>
<indexterm><primary>IsWindowCollapsed</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>IsWindowCollapsed</secondary></indexterm>
<para><computeroutput>bool ImGui::IsWindowCollapsed ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ab3095c274afa3c3d73e1d5cae190f469"/><section>
    <title>IsWindowContentHoverable()</title>
<indexterm><primary>IsWindowContentHoverable</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>IsWindowContentHoverable</secondary></indexterm>
<para><computeroutput>bool ImGui::IsWindowContentHoverable (<link linkend="_struct_im_gui_window">ImGuiWindow</link> * window, <link linkend="_imgui_8h_1a3a8f688665e5ea0bd9700e1251580a2c">ImGuiHoveredFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ac0e995f2c0c4b677ef08fdd4c468aed0"/><section>
    <title>IsWindowDocked()</title>
<indexterm><primary>IsWindowDocked</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>IsWindowDocked</secondary></indexterm>
<para><computeroutput>bool ImGui::IsWindowDocked ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a51ed119ab4be7fcf47a34644e262c87e"/><section>
    <title>IsWindowFocused()</title>
<indexterm><primary>IsWindowFocused</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>IsWindowFocused</secondary></indexterm>
<para><computeroutput>bool ImGui::IsWindowFocused (<link linkend="_imgui_8h_1a4445363c9e1c008fee2c255d83046248">ImGuiFocusedFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aaed1ebf40cc2cb2ec30b0ba39b91d4a5"/><section>
    <title>IsWindowHovered()</title>
<indexterm><primary>IsWindowHovered</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>IsWindowHovered</secondary></indexterm>
<para><computeroutput>bool ImGui::IsWindowHovered (<link linkend="_imgui_8h_1a3a8f688665e5ea0bd9700e1251580a2c">ImGuiHoveredFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a6dfaa7187edcbc862be2edb2bbc987bb"/><section>
    <title>IsWindowNavFocusable()</title>
<indexterm><primary>IsWindowNavFocusable</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>IsWindowNavFocusable</secondary></indexterm>
<para><computeroutput>bool ImGui::IsWindowNavFocusable (<link linkend="_struct_im_gui_window">ImGuiWindow</link> * window)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a48de6990762aa67d7da5c3264b92d44f"/><section>
    <title>IsWindowWithinBeginStackOf()</title>
<indexterm><primary>IsWindowWithinBeginStackOf</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>IsWindowWithinBeginStackOf</secondary></indexterm>
<para><computeroutput>bool ImGui::IsWindowWithinBeginStackOf (<link linkend="_struct_im_gui_window">ImGuiWindow</link> * window, <link linkend="_struct_im_gui_window">ImGuiWindow</link> * potential_parent)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a5de8ecd4c80efdca1af7329a2a48121c"/><section>
    <title>ItemAdd()</title>
<indexterm><primary>ItemAdd</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>ItemAdd</secondary></indexterm>
<para><computeroutput>bool ImGui::ItemAdd (const <link linkend="_struct_im_rect">ImRect</link> &amp; bb, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id, const <link linkend="_struct_im_rect">ImRect</link> * nav_bb = <computeroutput>NULL</computeroutput>
, <link linkend="_imgui__internal_8h_1abcf9eafab4557e911b2c0d8fe2feeb38">ImGuiItemFlags</link> extra_flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a1d7304e335dbe35c4d97b67854111ed2"/><section>
    <title>ItemHoverable()</title>
<indexterm><primary>ItemHoverable</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>ItemHoverable</secondary></indexterm>
<para><computeroutput>bool ImGui::ItemHoverable (const <link linkend="_struct_im_rect">ImRect</link> &amp; bb, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id, <link linkend="_imgui__internal_8h_1abcf9eafab4557e911b2c0d8fe2feeb38">ImGuiItemFlags</link> item_flags)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a1781907647306552d752c21d1ec15d4d"/><section>
    <title>ItemSize()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>ItemSize</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>ItemSize</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::ItemSize (const <link linkend="_struct_im_rect">ImRect</link> &amp; bb, float text_baseline_y = <computeroutput>-1.0f</computeroutput>
)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aeeb1ec6ae6548173dbf813e7df538c48"/><section>
    <title>ItemSize()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>ItemSize</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>ItemSize</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::ItemSize (const <link linkend="_struct_im_vec2">ImVec2</link> &amp; size, float text_baseline_y = <computeroutput>-1.0f</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a85a245c78a9f7c351636bdad6e60c488"/><section>
    <title>KeepAliveID()</title>
<indexterm><primary>KeepAliveID</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>KeepAliveID</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::KeepAliveID (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ad92ccfbc33d448ff40cfcf9219177344"/><section>
    <title>LabelText()</title>
<indexterm><primary>LabelText</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>LabelText</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::LabelText (const char * label, const char * fmt,  ...)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a55e5a7edb676a8f5cd7f65443138a8a0"/><section>
    <title>LabelTextV()</title>
<indexterm><primary>LabelTextV</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>LabelTextV</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::LabelTextV (const char * label, const char * fmt, va_list args)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ac766894f35a2b0e421f665918b753b49"/><section>
    <title>ListBox()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>ListBox</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>ListBox</secondary></indexterm>
<para><computeroutput><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool ImGui::ListBox (const char * label, int * current_item, bool(*)(<link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *user_data, int idx, const char **out_text) old_callback, <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * user_data, int items_count, int height_in_items = <computeroutput>-1</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a94c78076bd40ff548ecd124f95af8710"/><section>
    <title>ListBox()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>ListBox</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>ListBox</secondary></indexterm>
<para><computeroutput>bool ImGui::ListBox (const char * label, int * current_item, const char *(*)(<link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *user_data, int idx) getter, <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * user_data, int items_count, int height_in_items = <computeroutput>-1</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a44379fe654f54ae8bd8cc1b88bf7c822"/><section>
    <title>ListBox()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>ListBox</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>ListBox</secondary></indexterm>
<para><computeroutput>bool ImGui::ListBox (const char * label, int * current_item, const char *const items[], int items_count, int height_in_items = <computeroutput>-1</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a4bf22fb84ba768fc18383af50e8c217f"/><section>
    <title>LoadIniSettingsFromDisk()</title>
<indexterm><primary>LoadIniSettingsFromDisk</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>LoadIniSettingsFromDisk</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::LoadIniSettingsFromDisk (const char * ini_filename)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a8e37b6a0b2feb6cd6ac61a4259392861"/><section>
    <title>LoadIniSettingsFromMemory()</title>
<indexterm><primary>LoadIniSettingsFromMemory</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>LoadIniSettingsFromMemory</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::LoadIniSettingsFromMemory (const char * ini_data, size_t ini_size = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a0560d8edbeb9985eda5334d2f01a6fad"/><section>
    <title>LocalizeGetMsg()</title>
<indexterm><primary>LocalizeGetMsg</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>LocalizeGetMsg</secondary></indexterm>
<para><computeroutput>const char * ImGui::LocalizeGetMsg (<link linkend="_imgui__internal_8h_1a406a60adaf5a5b3938cb0d755b76502c">ImGuiLocKey</link> key)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a676850197b862c70a447880ae5087895"/><section>
    <title>LocalizeRegisterEntries()</title>
<indexterm><primary>LocalizeRegisterEntries</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>LocalizeRegisterEntries</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::LocalizeRegisterEntries (const <link linkend="_struct_im_gui_loc_entry">ImGuiLocEntry</link> * entries, int count)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a8d053d2fd46539c5ca83550845e4cecd"/><section>
    <title>LogBegin()</title>
<indexterm><primary>LogBegin</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>LogBegin</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::LogBegin (<link linkend="_imgui__internal_8h_1ac65915203eef19cd87f2ff1cde435c1e">ImGuiLogType</link> type, int auto_open_depth)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a7bd295da4be19bab98262c76fcaeb4fb"/><section>
    <title>LogButtons()</title>
<indexterm><primary>LogButtons</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>LogButtons</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::LogButtons ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a2ebcd048d1ca025fb972e1c2e920e3f3"/><section>
    <title>LogFinish()</title>
<indexterm><primary>LogFinish</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>LogFinish</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::LogFinish ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a7a0d62e33f2236ec2f789e24ca0fb56f"/><section>
    <title>LogRenderedText()</title>
<indexterm><primary>LogRenderedText</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>LogRenderedText</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::LogRenderedText (const <link linkend="_struct_im_vec2">ImVec2</link> * ref_pos, const char * text, const char * text_end = <computeroutput>NULL</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a66bc1e61bff5f2170bcd2d7d071eaa22"/><section>
    <title>LogSetNextTextDecoration()</title>
<indexterm><primary>LogSetNextTextDecoration</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>LogSetNextTextDecoration</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::LogSetNextTextDecoration (const char * prefix, const char * suffix)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aa548475d8f771ab6524d73d900a41198"/><section>
    <title>LogText()</title>
<indexterm><primary>LogText</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>LogText</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::LogText (const char * fmt,  ...)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a98df9ecc95235a208c834945c71df3a0"/><section>
    <title>LogTextV()</title>
<indexterm><primary>LogTextV</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>LogTextV</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::LogTextV (const char * fmt, va_list args)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a4dccd4d729cef38c0c542d433dc09480"/><section>
    <title>LogToBuffer()</title>
<indexterm><primary>LogToBuffer</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>LogToBuffer</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::LogToBuffer (int auto_open_depth = <computeroutput>-1</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a70e12f01ecb65747c9a70b73555b6ec1"/><section>
    <title>LogToClipboard()</title>
<indexterm><primary>LogToClipboard</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>LogToClipboard</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::LogToClipboard (int auto_open_depth = <computeroutput>-1</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a8feab4b22519bc5eae9754b0ad545d81"/><section>
    <title>LogToFile()</title>
<indexterm><primary>LogToFile</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>LogToFile</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::LogToFile (int auto_open_depth = <computeroutput>-1</computeroutput>
, const char * filename = <computeroutput>NULL</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ad206c49bc6306a56d915251fa5d9e388"/><section>
    <title>LogToTTY()</title>
<indexterm><primary>LogToTTY</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>LogToTTY</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::LogToTTY (int auto_open_depth = <computeroutput>-1</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aee9b660c1d6786c00fc47c71c66eb1eb"/><section>
    <title>MarkIniSettingsDirty()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>MarkIniSettingsDirty</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>MarkIniSettingsDirty</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::MarkIniSettingsDirty ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a6b682344c53a8fc93b08b833021a49ee"/><section>
    <title>MarkIniSettingsDirty()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>MarkIniSettingsDirty</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>MarkIniSettingsDirty</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::MarkIniSettingsDirty (<link linkend="_struct_im_gui_window">ImGuiWindow</link> * window)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a83036681a36fbee2d35b5b57a1ef72e6"/><section>
    <title>MarkItemEdited()</title>
<indexterm><primary>MarkItemEdited</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>MarkItemEdited</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::MarkItemEdited (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aed896913f2e140cd0ad7431060dba50b"/><section>
    <title>MemAlloc()</title>
<indexterm><primary>MemAlloc</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>MemAlloc</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * ImGui::MemAlloc (size_t size)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a269ec695c6e722ec3da85dae37f0675d"/><section>
    <title>MemFree()</title>
<indexterm><primary>MemFree</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>MemFree</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::MemFree (<link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * ptr)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a237e76bff3088f1c2622f4aebae2356e"/><section>
    <title>MenuItem()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>MenuItem</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>MenuItem</secondary></indexterm>
<para><computeroutput>bool ImGui::MenuItem (const char * label, const char * shortcut, bool * p_selected, bool enabled = <computeroutput>true</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aa1bae511ca47478998693a9d8c84f2e6"/><section>
    <title>MenuItem()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>MenuItem</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>MenuItem</secondary></indexterm>
<para><computeroutput>bool ImGui::MenuItem (const char * label, const char * shortcut = <computeroutput>NULL</computeroutput>
, bool selected = <computeroutput>false</computeroutput>
, bool enabled = <computeroutput>true</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ab5e6e4c78805615fb4d26d4918031f9c"/><section>
    <title>MenuItemEx()</title>
<indexterm><primary>MenuItemEx</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>MenuItemEx</secondary></indexterm>
<para><computeroutput>bool ImGui::MenuItemEx (const char * label, const char * icon, const char * shortcut = <computeroutput>NULL</computeroutput>
, bool selected = <computeroutput>false</computeroutput>
, bool enabled = <computeroutput>true</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a25689086f813c9714c4bbd4e3d5e669c"/><section>
    <title>MouseButtonToKey()</title>
<indexterm><primary>MouseButtonToKey</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>MouseButtonToKey</secondary></indexterm>
<para><computeroutput><link linkend="_imgui_8h_1aa22ffe36b188427d712447ec465203d4">ImGuiKey</link> ImGui::MouseButtonToKey (<link linkend="_imgui_8h_1ac16f674bc3efe8e4459caca9bca6eb1e">ImGuiMouseButton</link> button)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a16348f6e2db5310142fff74eeb315929"/><section>
    <title>NavClearPreferredPosForAxis()</title>
<indexterm><primary>NavClearPreferredPosForAxis</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>NavClearPreferredPosForAxis</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::NavClearPreferredPosForAxis (<link linkend="_imgui__internal_8h_1a468e54d5ed387abfbf0d1fc1e33ab483">ImGuiAxis</link> axis)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a3ea169ace83f149ae2b8c1a6d0f6d457"/><section>
    <title>NavHighlightActivated()</title>
<indexterm><primary>NavHighlightActivated</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>NavHighlightActivated</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::NavHighlightActivated (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a51e560cdb17a961810d557df80a4eaaa"/><section>
    <title>NavInitRequestApplyResult()</title>
<indexterm><primary>NavInitRequestApplyResult</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>NavInitRequestApplyResult</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::NavInitRequestApplyResult ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ae46a79d836c4b223c7030ea432e3ec15"/><section>
    <title>NavInitWindow()</title>
<indexterm><primary>NavInitWindow</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>NavInitWindow</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::NavInitWindow (<link linkend="_struct_im_gui_window">ImGuiWindow</link> * window, bool force_reinit)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a87c0b18dc173341304a700b096681c51"/><section>
    <title>NavMoveRequestApplyResult()</title>
<indexterm><primary>NavMoveRequestApplyResult</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>NavMoveRequestApplyResult</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::NavMoveRequestApplyResult ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a3fab98556d11690efd4f7f2fde94968e"/><section>
    <title>NavMoveRequestButNoResultYet()</title>
<indexterm><primary>NavMoveRequestButNoResultYet</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>NavMoveRequestButNoResultYet</secondary></indexterm>
<para><computeroutput>bool ImGui::NavMoveRequestButNoResultYet ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a43326bb080d9fa80327ed81d864d8b8d"/><section>
    <title>NavMoveRequestCancel()</title>
<indexterm><primary>NavMoveRequestCancel</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>NavMoveRequestCancel</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::NavMoveRequestCancel ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a25bbd21bce9d49b94168d5b5773558c3"/><section>
    <title>NavMoveRequestForward()</title>
<indexterm><primary>NavMoveRequestForward</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>NavMoveRequestForward</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::NavMoveRequestForward (<link linkend="_imgui_8h_1a874086389bc27cc9647118d22a806403">ImGuiDir</link> move_dir, <link linkend="_imgui_8h_1a874086389bc27cc9647118d22a806403">ImGuiDir</link> clip_dir, <link linkend="_imgui__internal_8h_1aff7a453b89555bb074f2fe46a159ac25">ImGuiNavMoveFlags</link> move_flags, <link linkend="_imgui__internal_8h_1a3c23ec9366e4bede0fedb065a79dcbc1">ImGuiScrollFlags</link> scroll_flags)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ad71eb039682bb8e3bb950c67eeec4ed8"/><section>
    <title>NavMoveRequestResolveWithLastItem()</title>
<indexterm><primary>NavMoveRequestResolveWithLastItem</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>NavMoveRequestResolveWithLastItem</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::NavMoveRequestResolveWithLastItem (<link linkend="_struct_im_gui_nav_item_data">ImGuiNavItemData</link> * result)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a9ebf95a721cb807d9ee19724f73ed29f"/><section>
    <title>NavMoveRequestResolveWithPastTreeNode()</title>
<indexterm><primary>NavMoveRequestResolveWithPastTreeNode</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>NavMoveRequestResolveWithPastTreeNode</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::NavMoveRequestResolveWithPastTreeNode (<link linkend="_struct_im_gui_nav_item_data">ImGuiNavItemData</link> * result, <link linkend="_struct_im_gui_nav_tree_node_data">ImGuiNavTreeNodeData</link> * tree_node_data)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aaab3763774b822dca0070fa76924d3ef"/><section>
    <title>NavMoveRequestSubmit()</title>
<indexterm><primary>NavMoveRequestSubmit</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>NavMoveRequestSubmit</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::NavMoveRequestSubmit (<link linkend="_imgui_8h_1a874086389bc27cc9647118d22a806403">ImGuiDir</link> move_dir, <link linkend="_imgui_8h_1a874086389bc27cc9647118d22a806403">ImGuiDir</link> clip_dir, <link linkend="_imgui__internal_8h_1aff7a453b89555bb074f2fe46a159ac25">ImGuiNavMoveFlags</link> move_flags, <link linkend="_imgui__internal_8h_1a3c23ec9366e4bede0fedb065a79dcbc1">ImGuiScrollFlags</link> scroll_flags)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a95a9a1a5411cccb918fc29a0b0d3f953"/><section>
    <title>NavMoveRequestTryWrapping()</title>
<indexterm><primary>NavMoveRequestTryWrapping</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>NavMoveRequestTryWrapping</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::NavMoveRequestTryWrapping (<link linkend="_struct_im_gui_window">ImGuiWindow</link> * window, <link linkend="_imgui__internal_8h_1aff7a453b89555bb074f2fe46a159ac25">ImGuiNavMoveFlags</link> move_flags)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1acb4f5942656f77bb97dfb607f934d90b"/><section>
    <title>NavRestoreHighlightAfterMove()</title>
<indexterm><primary>NavRestoreHighlightAfterMove</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>NavRestoreHighlightAfterMove</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::NavRestoreHighlightAfterMove ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a5c0c081852a520c006a0b084d0e8b0cb"/><section>
    <title>NavUpdateCurrentWindowIsScrollPushableX()</title>
<indexterm><primary>NavUpdateCurrentWindowIsScrollPushableX</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>NavUpdateCurrentWindowIsScrollPushableX</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::NavUpdateCurrentWindowIsScrollPushableX ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ab3f1fc018f903b7ad79fd10663375774"/><section>
    <title>NewFrame()</title>
<indexterm><primary>NewFrame</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>NewFrame</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::NewFrame ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a77f8b0a33e5335f98661f99e720411da"/><section>
    <title>NewLine()</title>
<indexterm><primary>NewLine</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>NewLine</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::NewLine ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a8f97746d6a9d59c8400c26fb7613a2ff"/><section>
    <title>NextColumn()</title>
<indexterm><primary>NextColumn</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>NextColumn</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::NextColumn ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a9e1be94ca8c4d48a20b230cdfc9b18c5"/><section>
    <title>OpenPopup()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>OpenPopup</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>OpenPopup</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::OpenPopup (const char * str_id, <link linkend="_imgui_8h_1af06c83fd0d1f3442139f0a5459b5a18a">ImGuiPopupFlags</link> popup_flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aa01aaa1d9002799e66094cfe87bf77a3"/><section>
    <title>OpenPopup()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>OpenPopup</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>OpenPopup</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::OpenPopup (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id, <link linkend="_imgui_8h_1af06c83fd0d1f3442139f0a5459b5a18a">ImGuiPopupFlags</link> popup_flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ac1570338b44e1f1311055db7ae41c47b"/><section>
    <title>OpenPopupEx()</title>
<indexterm><primary>OpenPopupEx</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>OpenPopupEx</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::OpenPopupEx (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id, <link linkend="_imgui_8h_1af06c83fd0d1f3442139f0a5459b5a18a">ImGuiPopupFlags</link> popup_flags = <computeroutput><link linkend="_imgui_8h_1a555744cd1c43214047697439a08a086eafa4c839530050d037b6825b7d3e00d5f">ImGuiPopupFlags_None</link></computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a3811834876930efd5cb08a25d8c022d0"/><section>
    <title>OpenPopupOnItemClick()</title>
<indexterm><primary>OpenPopupOnItemClick</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>OpenPopupOnItemClick</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::OpenPopupOnItemClick (const char * str_id = <computeroutput>NULL</computeroutput>
, <link linkend="_imgui_8h_1af06c83fd0d1f3442139f0a5459b5a18a">ImGuiPopupFlags</link> popup_flags = <computeroutput>1</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1afb3147b9a00e396e0b11a1bfe24b8f42"/><section>
    <title>PlotEx()</title>
<indexterm><primary>PlotEx</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>PlotEx</secondary></indexterm>
<para><computeroutput>int ImGui::PlotEx (<link linkend="_imgui__internal_8h_1a9d5efcdd8895aa3544f1e8ce366c2728">ImGuiPlotType</link> plot_type, const char * label, float(*)(<link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *<link linkend="_imgui__impl__opengl3__loader_8h_1abd87654504355b4c1bb002dcb1d4d16a">data</link>, int idx) values_getter, <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * data, int values_count, int values_offset, const char * overlay_text, float scale_min, float scale_max, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; size_arg)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1af7a92b2118981835b5251bfdaac50252"/><section>
    <title>PlotHistogram()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>PlotHistogram</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>PlotHistogram</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::PlotHistogram (const char * label, const float * values, int values_count, int values_offset = <computeroutput>0</computeroutput>
, const char * overlay_text = <computeroutput>NULL</computeroutput>
, float scale_min = <computeroutput>FLT_MAX</computeroutput>
, float scale_max = <computeroutput>FLT_MAX</computeroutput>
, <link linkend="_struct_im_vec2">ImVec2</link> graph_size = <computeroutput><link linkend="_struct_im_vec2">ImVec2</link>(0,&#160;0)</computeroutput>
, int stride = <computeroutput>sizeof(float)</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1af8089203baf8cf723a158c9e34bda2a4"/><section>
    <title>PlotHistogram()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>PlotHistogram</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>PlotHistogram</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::PlotHistogram (const char * label, float(*)(<link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *<link linkend="_imgui__impl__opengl3__loader_8h_1abd87654504355b4c1bb002dcb1d4d16a">data</link>, int idx) values_getter, <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * data, int values_count, int values_offset = <computeroutput>0</computeroutput>
, const char * overlay_text = <computeroutput>NULL</computeroutput>
, float scale_min = <computeroutput>FLT_MAX</computeroutput>
, float scale_max = <computeroutput>FLT_MAX</computeroutput>
, <link linkend="_struct_im_vec2">ImVec2</link> graph_size = <computeroutput><link linkend="_struct_im_vec2">ImVec2</link>(0,&#160;0)</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a2bc21c56e4796855313804086cca114f"/><section>
    <title>PlotLines()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>PlotLines</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>PlotLines</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::PlotLines (const char * label, const float * values, int values_count, int values_offset = <computeroutput>0</computeroutput>
, const char * overlay_text = <computeroutput>NULL</computeroutput>
, float scale_min = <computeroutput>FLT_MAX</computeroutput>
, float scale_max = <computeroutput>FLT_MAX</computeroutput>
, <link linkend="_struct_im_vec2">ImVec2</link> graph_size = <computeroutput><link linkend="_struct_im_vec2">ImVec2</link>(0,&#160;0)</computeroutput>
, int stride = <computeroutput>sizeof(float)</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a94a2645d45c96da35b834dc7db93a9f1"/><section>
    <title>PlotLines()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>PlotLines</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>PlotLines</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::PlotLines (const char * label, float(*)(<link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *<link linkend="_imgui__impl__opengl3__loader_8h_1abd87654504355b4c1bb002dcb1d4d16a">data</link>, int idx) values_getter, <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * data, int values_count, int values_offset = <computeroutput>0</computeroutput>
, const char * overlay_text = <computeroutput>NULL</computeroutput>
, float scale_min = <computeroutput>FLT_MAX</computeroutput>
, float scale_max = <computeroutput>FLT_MAX</computeroutput>
, <link linkend="_struct_im_vec2">ImVec2</link> graph_size = <computeroutput><link linkend="_struct_im_vec2">ImVec2</link>(0,&#160;0)</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a0f883e8507be797ca8ba1448d2b9dbb0"/><section>
    <title>PopButtonRepeat()</title>
<indexterm><primary>PopButtonRepeat</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>PopButtonRepeat</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::PopButtonRepeat ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aef1c8a6e5a3c70cb10d03d2a2a66dfd8"/><section>
    <title>PopClipRect()</title>
<indexterm><primary>PopClipRect</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>PopClipRect</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::PopClipRect ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a27c737fa1fc79164fc7d840e858b1845"/><section>
    <title>PopColumnsBackground()</title>
<indexterm><primary>PopColumnsBackground</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>PopColumnsBackground</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::PopColumnsBackground ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a660bc1ff7f6d971fc4b4236e87409b38"/><section>
    <title>PopFocusScope()</title>
<indexterm><primary>PopFocusScope</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>PopFocusScope</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::PopFocusScope ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1af66649bc37022bf3cf2496c73af9a499"/><section>
    <title>PopFont()</title>
<indexterm><primary>PopFont</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>PopFont</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::PopFont ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aba0b2d8f890a5d435ae43d0c4a2d4dd1"/><section>
    <title>PopID()</title>
<indexterm><primary>PopID</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>PopID</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::PopID ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aa93281155e1dd23715dbd384e91edc6b"/><section>
    <title>PopItemFlag()</title>
<indexterm><primary>PopItemFlag</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>PopItemFlag</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::PopItemFlag ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ad29a3fc0cb5dfc7f9fc7224512ce90bf"/><section>
    <title>PopItemWidth()</title>
<indexterm><primary>PopItemWidth</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>PopItemWidth</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::PopItemWidth ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a9795f730b4043a98b6254738d86efcdc"/><section>
    <title>PopStyleColor()</title>
<indexterm><primary>PopStyleColor</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>PopStyleColor</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::PopStyleColor (int count = <computeroutput>1</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a14116e57d81e326adef2a702e65781d4"/><section>
    <title>PopStyleVar()</title>
<indexterm><primary>PopStyleVar</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>PopStyleVar</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::PopStyleVar (int count = <computeroutput>1</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1af84a746ead8a8eeaf60e57f956487f47"/><section>
    <title>PopTabStop()</title>
<indexterm><primary>PopTabStop</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>PopTabStop</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::PopTabStop ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a08000421b9cc13757430efe54178ae0f"/><section>
    <title>PopTextWrapPos()</title>
<indexterm><primary>PopTextWrapPos</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>PopTextWrapPos</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::PopTextWrapPos ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a412b0416ad68c0ac46e5d66805d911ff"/><section>
    <title>ProgressBar()</title>
<indexterm><primary>ProgressBar</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>ProgressBar</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::ProgressBar (float fraction, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; size_arg = <computeroutput><link linkend="_struct_im_vec2">ImVec2</link>(-FLT_MIN,&#160;0)</computeroutput>
, const char * overlay = <computeroutput>NULL</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a61d3e0191d67bedaf45f0178f87e3125"/><section>
    <title>PushButtonRepeat()</title>
<indexterm><primary>PushButtonRepeat</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>PushButtonRepeat</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::PushButtonRepeat (bool repeat)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a11c8bd8676e1281e15b24c9615b6904a"/><section>
    <title>PushClipRect()</title>
<indexterm><primary>PushClipRect</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>PushClipRect</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::PushClipRect (const <link linkend="_struct_im_vec2">ImVec2</link> &amp; clip_rect_min, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; clip_rect_max, bool intersect_with_current_clip_rect)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a54b5cf7f40d092e2959b1df2c8118181"/><section>
    <title>PushColumnClipRect()</title>
<indexterm><primary>PushColumnClipRect</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>PushColumnClipRect</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::PushColumnClipRect (int column_index)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a39f557bf00d94069a41b0d40bd72c522"/><section>
    <title>PushColumnsBackground()</title>
<indexterm><primary>PushColumnsBackground</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>PushColumnsBackground</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::PushColumnsBackground ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ad10256d914b625cea7494b26c77b84ec"/><section>
    <title>PushFocusScope()</title>
<indexterm><primary>PushFocusScope</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>PushFocusScope</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::PushFocusScope (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ac5a59f4f8226fd35786d8973c85b85a9"/><section>
    <title>PushFont()</title>
<indexterm><primary>PushFont</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>PushFont</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::PushFont (<link linkend="_struct_im_font">ImFont</link> * font)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a27a8533605dc5b8cabf161bf7715bbde"/><section>
    <title>PushID()<computeroutput>[1/4]</computeroutput></title>
<indexterm><primary>PushID</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>PushID</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::PushID (const char * str_id)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1af5e55788830807a7c53d5dd7865b692a"/><section>
    <title>PushID()<computeroutput>[2/4]</computeroutput></title>
<indexterm><primary>PushID</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>PushID</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::PushID (const char * str_id_begin, const char * str_id_end)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1af9cf42fdf2fbc5eeec7521de14996bfb"/><section>
    <title>PushID()<computeroutput>[3/4]</computeroutput></title>
<indexterm><primary>PushID</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>PushID</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::PushID (const <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * ptr_id)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a6a11664be2a0b9a0e7054bb339e009ac"/><section>
    <title>PushID()<computeroutput>[4/4]</computeroutput></title>
<indexterm><primary>PushID</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>PushID</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::PushID (int int_id)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ac7301f6378333f6d17f47823eed9e00a"/><section>
    <title>PushItemFlag()</title>
<indexterm><primary>PushItemFlag</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>PushItemFlag</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::PushItemFlag (<link linkend="_imgui__internal_8h_1abcf9eafab4557e911b2c0d8fe2feeb38">ImGuiItemFlags</link> option, bool enabled)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a4ad13bf38f0521a339133248ef3e3036"/><section>
    <title>PushItemWidth()</title>
<indexterm><primary>PushItemWidth</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>PushItemWidth</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::PushItemWidth (float item_width)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a6ec35a6af1a0bbe454d79c2c63b030cc"/><section>
    <title>PushMultiItemsWidths()</title>
<indexterm><primary>PushMultiItemsWidths</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>PushMultiItemsWidths</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::PushMultiItemsWidths (int components, float width_full)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1acff64eb876d279cfe1cc6129ccd19930"/><section>
    <title>PushOverrideID()</title>
<indexterm><primary>PushOverrideID</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>PushOverrideID</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::PushOverrideID (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a5bd052ebf55015312a53739974950e7b"/><section>
    <title>PushStyleColor()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>PushStyleColor</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>PushStyleColor</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::PushStyleColor (<link linkend="_imgui_8h_1a1b0467ec582e731ae6292fef726fb5fe">ImGuiCol</link> idx, const <link linkend="_struct_im_vec4">ImVec4</link> &amp; col)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a77ee84afb636e05eb4b2d6eeddcc2aa8"/><section>
    <title>PushStyleColor()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>PushStyleColor</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>PushStyleColor</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::PushStyleColor (<link linkend="_imgui_8h_1a1b0467ec582e731ae6292fef726fb5fe">ImGuiCol</link> idx, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ae404b6978e9aedec5c16627d8c45f923"/><section>
    <title>PushStyleVar()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>PushStyleVar</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>PushStyleVar</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::PushStyleVar (<link linkend="_imgui_8h_1ac919acabce24faae590e295b424874ca">ImGuiStyleVar</link> idx, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; val)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aab3f43009094462cf2a5eb554785949b"/><section>
    <title>PushStyleVar()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>PushStyleVar</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>PushStyleVar</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::PushStyleVar (<link linkend="_imgui_8h_1ac919acabce24faae590e295b424874ca">ImGuiStyleVar</link> idx, float val)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1abab24220022e3427f1c428722675dd94"/><section>
    <title>PushTabStop()</title>
<indexterm><primary>PushTabStop</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>PushTabStop</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::PushTabStop (bool tab_stop)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a72ba065ae9819aaed3af68c113d2758b"/><section>
    <title>PushTextWrapPos()</title>
<indexterm><primary>PushTextWrapPos</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>PushTextWrapPos</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::PushTextWrapPos (float wrap_local_pos_x = <computeroutput>0.0f</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a6b146763845cbad5a4144772279631bc"/><section>
    <title>RadioButton()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>RadioButton</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>RadioButton</secondary></indexterm>
<para><computeroutput>bool ImGui::RadioButton (const char * label, bool active)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a018d2b61d2f00bb7a9dd2b1f933b93a5"/><section>
    <title>RadioButton()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>RadioButton</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>RadioButton</secondary></indexterm>
<para><computeroutput>bool ImGui::RadioButton (const char * label, int * v, int v_button)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aacced9333540086ce71b1bdc024b6f7d"/><section>
    <title>RemoveContextHook()</title>
<indexterm><primary>RemoveContextHook</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>RemoveContextHook</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::RemoveContextHook (<link linkend="_struct_im_gui_context">ImGuiContext</link> * context, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> hook_to_remove)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a0f06e3a54023d9cbb778f4c7f559da3a"/><section>
    <title>RemoveSettingsHandler()</title>
<indexterm><primary>RemoveSettingsHandler</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>RemoveSettingsHandler</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::RemoveSettingsHandler (const char * type_name)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ab51a164f547317c16c441f1599e3946d"/><section>
    <title>Render()</title>
<indexterm><primary>Render</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>Render</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::Render ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a7ec12551caa737505087c80e38b94937"/><section>
    <title>RenderArrow()</title>
<indexterm><primary>RenderArrow</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>RenderArrow</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::RenderArrow (<link linkend="_struct_im_draw_list">ImDrawList</link> * draw_list, <link linkend="_struct_im_vec2">ImVec2</link> pos, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col, <link linkend="_imgui_8h_1a874086389bc27cc9647118d22a806403">ImGuiDir</link> dir, float scale = <computeroutput>1.0f</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a128c5f634a3e33612c17568d1ef1045c"/><section>
    <title>RenderArrowDockMenu()</title>
<indexterm><primary>RenderArrowDockMenu</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>RenderArrowDockMenu</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::RenderArrowDockMenu (<link linkend="_struct_im_draw_list">ImDrawList</link> * draw_list, <link linkend="_struct_im_vec2">ImVec2</link> p_min, float sz, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1af1ea568bffa58ec26100de3bf60af5f2"/><section>
    <title>RenderArrowPointingAt()</title>
<indexterm><primary>RenderArrowPointingAt</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>RenderArrowPointingAt</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::RenderArrowPointingAt (<link linkend="_struct_im_draw_list">ImDrawList</link> * draw_list, <link linkend="_struct_im_vec2">ImVec2</link> pos, <link linkend="_struct_im_vec2">ImVec2</link> half_sz, <link linkend="_imgui_8h_1a874086389bc27cc9647118d22a806403">ImGuiDir</link> direction, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a46189f75b2e25d595f1e71060d2a2633"/><section>
    <title>RenderBullet()</title>
<indexterm><primary>RenderBullet</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>RenderBullet</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::RenderBullet (<link linkend="_struct_im_draw_list">ImDrawList</link> * draw_list, <link linkend="_struct_im_vec2">ImVec2</link> pos, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a32d6e6c359b59df1e4f9517d65e443b8"/><section>
    <title>RenderCheckMark()</title>
<indexterm><primary>RenderCheckMark</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>RenderCheckMark</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::RenderCheckMark (<link linkend="_struct_im_draw_list">ImDrawList</link> * draw_list, <link linkend="_struct_im_vec2">ImVec2</link> pos, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col, float sz)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a1c7b45570a114af08b0c2e16a7acceae"/><section>
    <title>RenderColorRectWithAlphaCheckerboard()</title>
<indexterm><primary>RenderColorRectWithAlphaCheckerboard</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>RenderColorRectWithAlphaCheckerboard</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::RenderColorRectWithAlphaCheckerboard (<link linkend="_struct_im_draw_list">ImDrawList</link> * draw_list, <link linkend="_struct_im_vec2">ImVec2</link> p_min, <link linkend="_struct_im_vec2">ImVec2</link> p_max, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> fill_col, float grid_step, <link linkend="_struct_im_vec2">ImVec2</link> grid_off, float rounding = <computeroutput>0.0f</computeroutput>
, <link linkend="_imgui_8h_1af2ef7e1341558a1d39aa244c1257780a">ImDrawFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a243a62fece1096c59442bba21f0aa736"/><section>
    <title>RenderDragDropTargetRect()</title>
<indexterm><primary>RenderDragDropTargetRect</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>RenderDragDropTargetRect</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::RenderDragDropTargetRect (const <link linkend="_struct_im_rect">ImRect</link> &amp; bb, const <link linkend="_struct_im_rect">ImRect</link> &amp; item_clip_rect)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a621ba649568ede3939d4f10d83b86d04"/><section>
    <title>RenderFrame()</title>
<indexterm><primary>RenderFrame</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>RenderFrame</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::RenderFrame (<link linkend="_struct_im_vec2">ImVec2</link> p_min, <link linkend="_struct_im_vec2">ImVec2</link> p_max, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> fill_col, bool border = <computeroutput>true</computeroutput>
, float rounding = <computeroutput>0.0f</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1adc76239c2006e66f8dab7638529a763d"/><section>
    <title>RenderFrameBorder()</title>
<indexterm><primary>RenderFrameBorder</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>RenderFrameBorder</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::RenderFrameBorder (<link linkend="_struct_im_vec2">ImVec2</link> p_min, <link linkend="_struct_im_vec2">ImVec2</link> p_max, float rounding = <computeroutput>0.0f</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ade001ee6028075c9c1e2bd3f0395b920"/><section>
    <title>RenderMouseCursor()</title>
<indexterm><primary>RenderMouseCursor</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>RenderMouseCursor</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::RenderMouseCursor (<link linkend="_struct_im_vec2">ImVec2</link> pos, float scale, <link linkend="_imgui_8h_1a9223d6c82bb5d12c2eab5f829ca520ef">ImGuiMouseCursor</link> mouse_cursor, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col_fill, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col_border, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col_shadow)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1add2e040b97eeb0857dc7d02876b07b72"/><section>
    <title>RenderNavHighlight()</title>
<indexterm><primary>RenderNavHighlight</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>RenderNavHighlight</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::RenderNavHighlight (const <link linkend="_struct_im_rect">ImRect</link> &amp; bb, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id, <link linkend="_imgui__internal_8h_1a8c2855ba575756109c607c10697bcccd">ImGuiNavHighlightFlags</link> flags = <computeroutput><link linkend="_imgui__internal_8h_1a55ae92b6fb7a0edbe4814f6e261d9e26a6f47e567193290259dd85fdcade51ee6">ImGuiNavHighlightFlags_None</link></computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a6b071e16d5fd79c23459135ff562bef5"/><section>
    <title>RenderPlatformWindowsDefault()</title>
<indexterm><primary>RenderPlatformWindowsDefault</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>RenderPlatformWindowsDefault</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::RenderPlatformWindowsDefault (<link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * platform_render_arg = <computeroutput>NULL</computeroutput>
, <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * renderer_render_arg = <computeroutput>NULL</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1af311762331bda4508b25e05f6afc7f45"/><section>
    <title>RenderRectFilledRangeH()</title>
<indexterm><primary>RenderRectFilledRangeH</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>RenderRectFilledRangeH</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::RenderRectFilledRangeH (<link linkend="_struct_im_draw_list">ImDrawList</link> * draw_list, const <link linkend="_struct_im_rect">ImRect</link> &amp; rect, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col, float x_start_norm, float x_end_norm, float rounding)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a3579615f926c34c5de220f655d535d61"/><section>
    <title>RenderRectFilledWithHole()</title>
<indexterm><primary>RenderRectFilledWithHole</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>RenderRectFilledWithHole</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::RenderRectFilledWithHole (<link linkend="_struct_im_draw_list">ImDrawList</link> * draw_list, const <link linkend="_struct_im_rect">ImRect</link> &amp; outer, const <link linkend="_struct_im_rect">ImRect</link> &amp; inner, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col, float rounding)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a9971ce57f2a288ac3a12df886c5550d1"/><section>
    <title>RenderText()</title>
<indexterm><primary>RenderText</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>RenderText</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::RenderText (<link linkend="_struct_im_vec2">ImVec2</link> pos, const char * text, const char * text_end = <computeroutput>NULL</computeroutput>
, bool hide_text_after_hash = <computeroutput>true</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ab362eafae794c7364a6b96ea06f38eb9"/><section>
    <title>RenderTextClipped()</title>
<indexterm><primary>RenderTextClipped</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>RenderTextClipped</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::RenderTextClipped (const <link linkend="_struct_im_vec2">ImVec2</link> &amp; pos_min, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; pos_max, const char * text, const char * text_end, const <link linkend="_struct_im_vec2">ImVec2</link> * text_size_if_known, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; align = <computeroutput><link linkend="_struct_im_vec2">ImVec2</link>(0,&#160;0)</computeroutput>
, const <link linkend="_struct_im_rect">ImRect</link> * clip_rect = <computeroutput>NULL</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a6ff0aaef091d39b0e2e2f6afeb647b34"/><section>
    <title>RenderTextClippedEx()</title>
<indexterm><primary>RenderTextClippedEx</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>RenderTextClippedEx</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::RenderTextClippedEx (<link linkend="_struct_im_draw_list">ImDrawList</link> * draw_list, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; pos_min, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; pos_max, const char * text, const char * text_end, const <link linkend="_struct_im_vec2">ImVec2</link> * text_size_if_known, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; align = <computeroutput><link linkend="_struct_im_vec2">ImVec2</link>(0,&#160;0)</computeroutput>
, const <link linkend="_struct_im_rect">ImRect</link> * clip_rect = <computeroutput>NULL</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a029bab9f4602be86178307b168975a6d"/><section>
    <title>RenderTextEllipsis()</title>
<indexterm><primary>RenderTextEllipsis</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>RenderTextEllipsis</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::RenderTextEllipsis (<link linkend="_struct_im_draw_list">ImDrawList</link> * draw_list, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; pos_min, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; pos_max, float clip_max_x, float ellipsis_max_x, const char * text, const char * text_end, const <link linkend="_struct_im_vec2">ImVec2</link> * text_size_if_known)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aa483b40f6899e1b289b4bf6c2673d1d2"/><section>
    <title>RenderTextWrapped()</title>
<indexterm><primary>RenderTextWrapped</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>RenderTextWrapped</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::RenderTextWrapped (<link linkend="_struct_im_vec2">ImVec2</link> pos, const char * text, const char * text_end, float wrap_width)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a771c37d1bb71fb7f30632721618633b9"/><section>
    <title>ResetMouseDragDelta()</title>
<indexterm><primary>ResetMouseDragDelta</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>ResetMouseDragDelta</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::ResetMouseDragDelta (<link linkend="_imgui_8h_1ac16f674bc3efe8e4459caca9bca6eb1e">ImGuiMouseButton</link> button = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ace887ae2de27d34ee7300a0bf63768a7"/><section>
    <title>RoundScalarWithFormatT()</title>
<indexterm><primary>RoundScalarWithFormatT</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>RoundScalarWithFormatT</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> T ImGui::RoundScalarWithFormatT (const char * format, <link linkend="_imgui_8h_1a4cfa8697a3d76722fff83eb18922e9d5">ImGuiDataType</link> data_type, T v)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a2991c91e94f3b77a0c3411f4f3aa348e"/><section>
    <title>SameLine()</title>
<indexterm><primary>SameLine</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SameLine</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SameLine (float offset_from_start_x = <computeroutput>0.0f</computeroutput>
, float spacing = <computeroutput>-1.0f</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1afa4985e7810be4e687bc4ff28cec8a4d"/><section>
    <title>SaveIniSettingsToDisk()</title>
<indexterm><primary>SaveIniSettingsToDisk</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SaveIniSettingsToDisk</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SaveIniSettingsToDisk (const char * ini_filename)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a27043a530e0e842e01c279dd4207f9eb"/><section>
    <title>SaveIniSettingsToMemory()</title>
<indexterm><primary>SaveIniSettingsToMemory</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SaveIniSettingsToMemory</secondary></indexterm>
<para><computeroutput>const char * ImGui::SaveIniSettingsToMemory (size_t * out_ini_size = <computeroutput>NULL</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a9419b0ce18eb927db258d308d8c02a7e"/><section>
    <title>ScaleRatioFromValueT()</title>
<indexterm><primary>ScaleRatioFromValueT</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>ScaleRatioFromValueT</secondary></indexterm>
<computeroutput>template&lt;typename T , typename SIGNED_T , typename FLOAT_T &gt; </computeroutput><para><computeroutput><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> float ImGui::ScaleRatioFromValueT (<link linkend="_imgui_8h_1a4cfa8697a3d76722fff83eb18922e9d5">ImGuiDataType</link> data_type, T v, T v_min, T v_max, bool is_logarithmic, float logarithmic_zero_epsilon, float zero_deadzone_size)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a1c3679262e23e28b9e71f1d237826156"/><section>
    <title>ScaleValueFromRatioT()</title>
<indexterm><primary>ScaleValueFromRatioT</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>ScaleValueFromRatioT</secondary></indexterm>
<computeroutput>template&lt;typename T , typename SIGNED_T , typename FLOAT_T &gt; </computeroutput><para><computeroutput><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> T ImGui::ScaleValueFromRatioT (<link linkend="_imgui_8h_1a4cfa8697a3d76722fff83eb18922e9d5">ImGuiDataType</link> data_type, float t, T v_min, T v_max, bool is_logarithmic, float logarithmic_zero_epsilon, float zero_deadzone_size)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a66515f977d52977fb7bf0dc9e9146e73"/><section>
    <title>ScaleWindowsInViewport()</title>
<indexterm><primary>ScaleWindowsInViewport</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>ScaleWindowsInViewport</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::ScaleWindowsInViewport (<link linkend="_struct_im_gui_viewport_p">ImGuiViewportP</link> * viewport, float scale)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a54a5006faded850f626ab20bd34aea9e"/><section>
    <title>Scrollbar()</title>
<indexterm><primary>Scrollbar</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>Scrollbar</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::Scrollbar (<link linkend="_imgui__internal_8h_1a468e54d5ed387abfbf0d1fc1e33ab483">ImGuiAxis</link> axis)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a35eab777db4f6cb0d5242fd6968dab73"/><section>
    <title>ScrollbarEx()</title>
<indexterm><primary>ScrollbarEx</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>ScrollbarEx</secondary></indexterm>
<para><computeroutput>bool ImGui::ScrollbarEx (const <link linkend="_struct_im_rect">ImRect</link> &amp; bb, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id, <link linkend="_imgui__internal_8h_1a468e54d5ed387abfbf0d1fc1e33ab483">ImGuiAxis</link> axis, <link linkend="_imgui_8h_1a83a52dabbef5da589af659d12e6c3f7e">ImS64</link> * p_scroll_v, <link linkend="_imgui_8h_1a83a52dabbef5da589af659d12e6c3f7e">ImS64</link> avail_v, <link linkend="_imgui_8h_1a83a52dabbef5da589af659d12e6c3f7e">ImS64</link> contents_v, <link linkend="_imgui_8h_1af2ef7e1341558a1d39aa244c1257780a">ImDrawFlags</link> flags)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aebce8a3f6952e9c4520bab4201752ddc"/><section>
    <title>ScrollToBringRectIntoView()</title>
<indexterm><primary>ScrollToBringRectIntoView</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>ScrollToBringRectIntoView</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::ScrollToBringRectIntoView (<link linkend="_struct_im_gui_window">ImGuiWindow</link> * window, const <link linkend="_struct_im_rect">ImRect</link> &amp; rect)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ab8548752fba9a4fb91a10574e4857da2"/><section>
    <title>ScrollToItem()</title>
<indexterm><primary>ScrollToItem</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>ScrollToItem</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::ScrollToItem (<link linkend="_imgui__internal_8h_1a3c23ec9366e4bede0fedb065a79dcbc1">ImGuiScrollFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a980dbb73c1e2a1c349b99ab56bca06d9"/><section>
    <title>ScrollToRect()</title>
<indexterm><primary>ScrollToRect</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>ScrollToRect</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::ScrollToRect (<link linkend="_struct_im_gui_window">ImGuiWindow</link> * window, const <link linkend="_struct_im_rect">ImRect</link> &amp; rect, <link linkend="_imgui__internal_8h_1a3c23ec9366e4bede0fedb065a79dcbc1">ImGuiScrollFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a0c9e3a1d81ef0a0c530311beb1d88f7f"/><section>
    <title>ScrollToRectEx()</title>
<indexterm><primary>ScrollToRectEx</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>ScrollToRectEx</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_vec2">ImVec2</link> ImGui::ScrollToRectEx (<link linkend="_struct_im_gui_window">ImGuiWindow</link> * window, const <link linkend="_struct_im_rect">ImRect</link> &amp; rect, <link linkend="_imgui__internal_8h_1a3c23ec9366e4bede0fedb065a79dcbc1">ImGuiScrollFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a9229a9c3c304ffc0c98ffe2ee4ff5e40"/><section>
    <title>Selectable()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>Selectable</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>Selectable</secondary></indexterm>
<para><computeroutput>bool ImGui::Selectable (const char * label, bool * p_selected, <link linkend="_imgui_8h_1aab0fe56421d75949dedfbfbbaa674b6b">ImGuiSelectableFlags</link> flags = <computeroutput>0</computeroutput>
, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; size = <computeroutput><link linkend="_struct_im_vec2">ImVec2</link>(0,&#160;0)</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1af98575238bda183a523df19fb447af60"/><section>
    <title>Selectable()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>Selectable</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>Selectable</secondary></indexterm>
<para><computeroutput>bool ImGui::Selectable (const char * label, bool selected = <computeroutput>false</computeroutput>
, <link linkend="_imgui_8h_1aab0fe56421d75949dedfbfbbaa674b6b">ImGuiSelectableFlags</link> flags = <computeroutput>0</computeroutput>
, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; size = <computeroutput><link linkend="_struct_im_vec2">ImVec2</link>(0,&#160;0)</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a191123597a5084d003c8beac7eeb029e"/><section>
    <title>Separator()</title>
<indexterm><primary>Separator</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>Separator</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::Separator ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1acd77978447d71b3113ad084dfde1fe18"/><section>
    <title>SeparatorEx()</title>
<indexterm><primary>SeparatorEx</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SeparatorEx</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SeparatorEx (<link linkend="_imgui__internal_8h_1a5bfe5a88609ebcdf61cfee4e2fabf9a8">ImGuiSeparatorFlags</link> flags, float thickness = <computeroutput>1.0f</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a35e04f2c996f8634bfda0fa1c07572d9"/><section>
    <title>SeparatorText()</title>
<indexterm><primary>SeparatorText</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SeparatorText</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SeparatorText (const char * label)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a14e42bfa66f05d0ae2304e27ee1fb2b3"/><section>
    <title>SeparatorTextEx()</title>
<indexterm><primary>SeparatorTextEx</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SeparatorTextEx</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SeparatorTextEx (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id, const char * label, const char * label_end, float extra_width)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a27b8ace13a8c421ee8405f0cbebe4ead"/><section>
    <title>SetActiveID()</title>
<indexterm><primary>SetActiveID</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetActiveID</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SetActiveID (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id, <link linkend="_struct_im_gui_window">ImGuiWindow</link> * window)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a5e5b2b1969b119d6932116f28fbd4d53"/><section>
    <title>SetActiveIdUsingAllKeyboardKeys()</title>
<indexterm><primary>SetActiveIdUsingAllKeyboardKeys</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetActiveIdUsingAllKeyboardKeys</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SetActiveIdUsingAllKeyboardKeys ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a7c7021b71b8682ba1a816cbca394fc94"/><section>
    <title>SetAllocatorFunctions()</title>
<indexterm><primary>SetAllocatorFunctions</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetAllocatorFunctions</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SetAllocatorFunctions (<link linkend="_imgui_8h_1a18581d9ce5ad374685c32a08d9c00659">ImGuiMemAllocFunc</link> alloc_func, <link linkend="_imgui_8h_1ad6abffbb2b01431575aad8400461d11f">ImGuiMemFreeFunc</link> free_func, <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * user_data = <computeroutput>NULL</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aa4824a1b351c063b4aff9b9f4fb5fd4d"/><section>
    <title>SetClipboardText()</title>
<indexterm><primary>SetClipboardText</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetClipboardText</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SetClipboardText (const char * text)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ac768151f2ac6c7d79b31b934cc0e9d05"/><section>
    <title>SetColorEditOptions()</title>
<indexterm><primary>SetColorEditOptions</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetColorEditOptions</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SetColorEditOptions (<link linkend="_imgui_8h_1a6b2d5e95adc38f22c021252189f669c6">ImGuiColorEditFlags</link> flags)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a8cc207211d6cf3f77b505e24aed4ebcc"/><section>
    <title>SetColumnOffset()</title>
<indexterm><primary>SetColumnOffset</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetColumnOffset</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SetColumnOffset (int column_index, float offset_x)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1af17222ec47aebb5ede00be7b52de9f5d"/><section>
    <title>SetColumnWidth()</title>
<indexterm><primary>SetColumnWidth</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetColumnWidth</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SetColumnWidth (int column_index, float width)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a289dbbbffdadcf1231821d97a7c4a9be"/><section>
    <title>SetCurrentContext()</title>
<indexterm><primary>SetCurrentContext</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetCurrentContext</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SetCurrentContext (<link linkend="_struct_im_gui_context">ImGuiContext</link> * ctx)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a4f83c0a884e07247a00700d3dd3d01e3"/><section>
    <title>SetCurrentFont()</title>
<indexterm><primary>SetCurrentFont</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetCurrentFont</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SetCurrentFont (<link linkend="_struct_im_font">ImFont</link> * font)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a518a36249ab67227a13fd01a4236cbe1"/><section>
    <title>SetCurrentViewport()</title>
<indexterm><primary>SetCurrentViewport</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetCurrentViewport</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SetCurrentViewport (<link linkend="_struct_im_gui_window">ImGuiWindow</link> * window, <link linkend="_struct_im_gui_viewport_p">ImGuiViewportP</link> * viewport)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a51ea13c986360d8a2e868dc9eeac2115"/><section>
    <title>SetCursorPos()</title>
<indexterm><primary>SetCursorPos</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetCursorPos</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SetCursorPos (const <link linkend="_struct_im_vec2">ImVec2</link> &amp; local_pos)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ae5e6e80ef23bb8df9cd5ac273be8aeb0"/><section>
    <title>SetCursorPosX()</title>
<indexterm><primary>SetCursorPosX</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetCursorPosX</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SetCursorPosX (float local_x)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a0037515d9bd7a28cc27a6e40401c1dec"/><section>
    <title>SetCursorPosY()</title>
<indexterm><primary>SetCursorPosY</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetCursorPosY</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SetCursorPosY (float local_y)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a632bc7e15b8258f95ab0bc9b2efd5537"/><section>
    <title>SetCursorScreenPos()</title>
<indexterm><primary>SetCursorScreenPos</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetCursorScreenPos</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SetCursorScreenPos (const <link linkend="_struct_im_vec2">ImVec2</link> &amp; pos)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a45f9694c878e79127c63d20d8955e07f"/><section>
    <title>SetDragDropPayload()</title>
<indexterm><primary>SetDragDropPayload</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetDragDropPayload</secondary></indexterm>
<para><computeroutput>bool ImGui::SetDragDropPayload (const char * type, const <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * data, size_t sz, <link linkend="_imgui_8h_1aef890d6ac872e12c5804d0b3e4f7f103">ImGuiCond</link> cond = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a8ad578d7141486ff12b59b0c251234e6"/><section>
    <title>SetFocusID()</title>
<indexterm><primary>SetFocusID</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetFocusID</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SetFocusID (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id, <link linkend="_struct_im_gui_window">ImGuiWindow</link> * window)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aba1f0c75d6f98702e6b02eb1bc30d915"/><section>
    <title>SetHoveredID()</title>
<indexterm><primary>SetHoveredID</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetHoveredID</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SetHoveredID (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a3291356b06ebe5f771d60b334a831d4b"/><section>
    <title>SetItemAllowOverlap()</title>
<indexterm><primary>SetItemAllowOverlap</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetItemAllowOverlap</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SetItemAllowOverlap ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a3720a69496e9b8cf110a11dfe7d334e6"/><section>
    <title>SetItemDefaultFocus()</title>
<indexterm><primary>SetItemDefaultFocus</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetItemDefaultFocus</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SetItemDefaultFocus ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a8776b8c5eabcc7f92f4abe9ce46454f0"/><section>
    <title>SetItemKeyOwner()</title>
<indexterm><primary>SetItemKeyOwner</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetItemKeyOwner</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SetItemKeyOwner (<link linkend="_imgui_8h_1aa22ffe36b188427d712447ec465203d4">ImGuiKey</link> key, <link linkend="_imgui__internal_8h_1aa4211ddd58ae8523981eb953a1caf4b7">ImGuiInputFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a3685a04624f724222fa78824de3a1c63"/><section>
    <title>SetItemTooltip()</title>
<indexterm><primary>SetItemTooltip</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetItemTooltip</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SetItemTooltip (const char * fmt,  ...)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a7729dc27e2807c6e2f6dc91fb7fc9d6a"/><section>
    <title>SetItemTooltipV()</title>
<indexterm><primary>SetItemTooltipV</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetItemTooltipV</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SetItemTooltipV (const char * fmt, va_list args)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ae75ca4e359488f5cfcb5c0169f9e75c5"/><section>
    <title>SetItemUsingMouseWheel()</title>
<indexterm><primary>SetItemUsingMouseWheel</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetItemUsingMouseWheel</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SetItemUsingMouseWheel ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ae85e5fba7e88cea8bd3ba5b687c979f2"/><section>
    <title>SetKeyboardFocusHere()</title>
<indexterm><primary>SetKeyboardFocusHere</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetKeyboardFocusHere</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SetKeyboardFocusHere (int offset = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ac415798dd69ab045cda84dd14a52c3ea"/><section>
    <title>SetKeyOwner()</title>
<indexterm><primary>SetKeyOwner</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetKeyOwner</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SetKeyOwner (<link linkend="_imgui_8h_1aa22ffe36b188427d712447ec465203d4">ImGuiKey</link> key, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> owner_id, <link linkend="_imgui__internal_8h_1aa4211ddd58ae8523981eb953a1caf4b7">ImGuiInputFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ae3060c877778bac84d69f68dabd200c8"/><section>
    <title>SetKeyOwnersForKeyChord()</title>
<indexterm><primary>SetKeyOwnersForKeyChord</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetKeyOwnersForKeyChord</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SetKeyOwnersForKeyChord (<link linkend="_imgui_8h_1a0720c04fed27e0f01b3722a13c8a8762">ImGuiKeyChord</link> key, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> owner_id, <link linkend="_imgui__internal_8h_1aa4211ddd58ae8523981eb953a1caf4b7">ImGuiInputFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a06a6c26188e778755bb9aa83f2726533"/><section>
    <title>SetLastItemData()</title>
<indexterm><primary>SetLastItemData</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetLastItemData</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SetLastItemData (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> item_id, <link linkend="_imgui__internal_8h_1abcf9eafab4557e911b2c0d8fe2feeb38">ImGuiItemFlags</link> in_flags, <link linkend="_imgui__internal_8h_1a86b8f9e2fd4084fb2112f003070b53fa">ImGuiItemStatusFlags</link> status_flags, const <link linkend="_struct_im_rect">ImRect</link> &amp; item_rect)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aca3237fd4efa0af7fc6b4eff6494dfce"/><section>
    <title>SetMouseCursor()</title>
<indexterm><primary>SetMouseCursor</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetMouseCursor</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SetMouseCursor (<link linkend="_imgui_8h_1a9223d6c82bb5d12c2eab5f829ca520ef">ImGuiMouseCursor</link> cursor_type)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ada2736a9b034b93ba877f46577bc5e8b"/><section>
    <title>SetNavFocusScope()</title>
<indexterm><primary>SetNavFocusScope</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetNavFocusScope</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SetNavFocusScope (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> focus_scope_id)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a101d94ec7f8e0a219bbaee58558316eb"/><section>
    <title>SetNavID()</title>
<indexterm><primary>SetNavID</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetNavID</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SetNavID (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id, <link linkend="_imgui__internal_8h_1afb412215b8327dc2c6af2c19fdca64c6">ImGuiNavLayer</link> nav_layer, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> focus_scope_id, const <link linkend="_struct_im_rect">ImRect</link> &amp; rect_rel)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aa422c756f467e650d67b4fb1b74ff5a1"/><section>
    <title>SetNavWindow()</title>
<indexterm><primary>SetNavWindow</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetNavWindow</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SetNavWindow (<link linkend="_struct_im_gui_window">ImGuiWindow</link> * window)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ac1b2639c15a22180748c792aff2a7e60"/><section>
    <title>SetNextFrameWantCaptureKeyboard()</title>
<indexterm><primary>SetNextFrameWantCaptureKeyboard</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetNextFrameWantCaptureKeyboard</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SetNextFrameWantCaptureKeyboard (bool want_capture_keyboard)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1affc347668060a3dfbfae50247eaac7d2"/><section>
    <title>SetNextFrameWantCaptureMouse()</title>
<indexterm><primary>SetNextFrameWantCaptureMouse</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetNextFrameWantCaptureMouse</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SetNextFrameWantCaptureMouse (bool want_capture_mouse)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aeccccafb037bb9ab9128e5c518b585a3"/><section>
    <title>SetNextItemAllowOverlap()</title>
<indexterm><primary>SetNextItemAllowOverlap</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetNextItemAllowOverlap</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SetNextItemAllowOverlap ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a4a90137256a3ce852e726cb65d55b627"/><section>
    <title>SetNextItemOpen()</title>
<indexterm><primary>SetNextItemOpen</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetNextItemOpen</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SetNextItemOpen (bool is_open, <link linkend="_imgui_8h_1aef890d6ac872e12c5804d0b3e4f7f103">ImGuiCond</link> cond = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1adbd8ae0488e54787d2857296281cdf2d"/><section>
    <title>SetNextItemSelectionUserData()</title>
<indexterm><primary>SetNextItemSelectionUserData</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetNextItemSelectionUserData</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SetNextItemSelectionUserData (<link linkend="_imgui__internal_8h_1a1e0ff3187164b75255989a2e0541703b">ImGuiSelectionUserData</link> selection_user_data)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aa201b41c13f4111fd0720631452331df"/><section>
    <title>SetNextItemShortcut()</title>
<indexterm><primary>SetNextItemShortcut</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetNextItemShortcut</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SetNextItemShortcut (<link linkend="_imgui_8h_1a0720c04fed27e0f01b3722a13c8a8762">ImGuiKeyChord</link> key_chord)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a1291228607bee5a703df6553f27cbbb9"/><section>
    <title>SetNextItemWidth()</title>
<indexterm><primary>SetNextItemWidth</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetNextItemWidth</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SetNextItemWidth (float item_width)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a7de5a63cec4babe417f972403db6430c"/><section>
    <title>SetNextWindowBgAlpha()</title>
<indexterm><primary>SetNextWindowBgAlpha</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetNextWindowBgAlpha</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SetNextWindowBgAlpha (float alpha)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aff657208718f7ade7a306c09d0af0bae"/><section>
    <title>SetNextWindowClass()</title>
<indexterm><primary>SetNextWindowClass</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetNextWindowClass</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SetNextWindowClass (const <link linkend="_struct_im_gui_window_class">ImGuiWindowClass</link> * window_class)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a3e9380e253a3c49665a404e56950a52a"/><section>
    <title>SetNextWindowCollapsed()</title>
<indexterm><primary>SetNextWindowCollapsed</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetNextWindowCollapsed</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SetNextWindowCollapsed (bool collapsed, <link linkend="_imgui_8h_1aef890d6ac872e12c5804d0b3e4f7f103">ImGuiCond</link> cond = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aae55a58c38d8e84b10eb1e8b1531372d"/><section>
    <title>SetNextWindowContentSize()</title>
<indexterm><primary>SetNextWindowContentSize</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetNextWindowContentSize</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SetNextWindowContentSize (const <link linkend="_struct_im_vec2">ImVec2</link> &amp; size)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a7b4bed7db004d713de020e697c80f8b3"/><section>
    <title>SetNextWindowDockID()</title>
<indexterm><primary>SetNextWindowDockID</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetNextWindowDockID</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SetNextWindowDockID (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> dock_id, <link linkend="_imgui_8h_1aef890d6ac872e12c5804d0b3e4f7f103">ImGuiCond</link> cond = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ac2d2b163c95cd8c8391aba85bc50d170"/><section>
    <title>SetNextWindowFocus()</title>
<indexterm><primary>SetNextWindowFocus</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetNextWindowFocus</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SetNextWindowFocus ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1afbccd31113430670b5ab2bf0d6f509bf"/><section>
    <title>SetNextWindowPos()</title>
<indexterm><primary>SetNextWindowPos</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetNextWindowPos</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SetNextWindowPos (const <link linkend="_struct_im_vec2">ImVec2</link> &amp; pos, <link linkend="_imgui_8h_1aef890d6ac872e12c5804d0b3e4f7f103">ImGuiCond</link> cond = <computeroutput>0</computeroutput>
, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; pivot = <computeroutput><link linkend="_struct_im_vec2">ImVec2</link>(0,&#160;0)</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a35141137f969aced6eb213bcaa5ff623"/><section>
    <title>SetNextWindowScroll()</title>
<indexterm><primary>SetNextWindowScroll</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetNextWindowScroll</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SetNextWindowScroll (const <link linkend="_struct_im_vec2">ImVec2</link> &amp; scroll)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ab33717bb71ef5e393ae18656fc6b229d"/><section>
    <title>SetNextWindowSize()</title>
<indexterm><primary>SetNextWindowSize</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetNextWindowSize</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SetNextWindowSize (const <link linkend="_struct_im_vec2">ImVec2</link> &amp; size, <link linkend="_imgui_8h_1aef890d6ac872e12c5804d0b3e4f7f103">ImGuiCond</link> cond = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a157d5bcc362951e77eb3236864e879ce"/><section>
    <title>SetNextWindowSizeConstraints()</title>
<indexterm><primary>SetNextWindowSizeConstraints</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetNextWindowSizeConstraints</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SetNextWindowSizeConstraints (const <link linkend="_struct_im_vec2">ImVec2</link> &amp; size_min, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; size_max, <link linkend="_imgui_8h_1a1cccf55557c2153a9d4af6db73dc3a91">ImGuiSizeCallback</link> custom_callback = <computeroutput>NULL</computeroutput>
, <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * custom_callback_data = <computeroutput>NULL</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ac8ebacf97bce7f8a5e62fef85755a734"/><section>
    <title>SetNextWindowViewport()</title>
<indexterm><primary>SetNextWindowViewport</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetNextWindowViewport</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SetNextWindowViewport (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> viewport_id)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ad244660a2f3f2999f645feb9fbdfe0ec"/><section>
    <title>SetScrollFromPosX()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>SetScrollFromPosX</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetScrollFromPosX</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SetScrollFromPosX (float local_x, float center_x_ratio = <computeroutput>0.5f</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a6f14aca8066daf670dc2445c5390ecc4"/><section>
    <title>SetScrollFromPosX()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>SetScrollFromPosX</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetScrollFromPosX</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SetScrollFromPosX (<link linkend="_struct_im_gui_window">ImGuiWindow</link> * window, float local_x, float center_x_ratio)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a670d32573369e7ece9330d73f47e4d8b"/><section>
    <title>SetScrollFromPosY()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>SetScrollFromPosY</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetScrollFromPosY</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SetScrollFromPosY (float local_y, float center_y_ratio = <computeroutput>0.5f</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1abf8364b7d1fe7c512e140ba16ba87c5c"/><section>
    <title>SetScrollFromPosY()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>SetScrollFromPosY</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetScrollFromPosY</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SetScrollFromPosY (<link linkend="_struct_im_gui_window">ImGuiWindow</link> * window, float local_y, float center_y_ratio)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a317a44e9126aa24099abc5cfc7d391ec"/><section>
    <title>SetScrollHereX()</title>
<indexterm><primary>SetScrollHereX</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetScrollHereX</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SetScrollHereX (float center_x_ratio = <computeroutput>0.5f</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ac74487b4d75580ca637659103fef1368"/><section>
    <title>SetScrollHereY()</title>
<indexterm><primary>SetScrollHereY</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetScrollHereY</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SetScrollHereY (float center_y_ratio = <computeroutput>0.5f</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a0796750de8c50555d895f63e79ac87f0"/><section>
    <title>SetScrollX()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>SetScrollX</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetScrollX</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SetScrollX (float scroll_x)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a07804fd7663a2358ba4a8f58fd5f8ebc"/><section>
    <title>SetScrollX()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>SetScrollX</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetScrollX</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SetScrollX (<link linkend="_struct_im_gui_window">ImGuiWindow</link> * window, float scroll_x)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a41833555962807384432e6fc94d46ec9"/><section>
    <title>SetScrollY()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>SetScrollY</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetScrollY</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SetScrollY (float scroll_y)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a784db31a3a0808cb730fd50d4610b2f3"/><section>
    <title>SetScrollY()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>SetScrollY</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetScrollY</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SetScrollY (<link linkend="_struct_im_gui_window">ImGuiWindow</link> * window, float scroll_y)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a5bfa26bcafad8fae4b4e21e1f0db47e3"/><section>
    <title>SetShortcutRouting()</title>
<indexterm><primary>SetShortcutRouting</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetShortcutRouting</secondary></indexterm>
<para><computeroutput>bool ImGui::SetShortcutRouting (<link linkend="_imgui_8h_1a0720c04fed27e0f01b3722a13c8a8762">ImGuiKeyChord</link> key_chord, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> owner_id, <link linkend="_imgui__internal_8h_1aa4211ddd58ae8523981eb953a1caf4b7">ImGuiInputFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a5ba1bf82e3ecdd09dcb6ad733bcf5726"/><section>
    <title>SetStateStorage()</title>
<indexterm><primary>SetStateStorage</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetStateStorage</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SetStateStorage (<link linkend="_struct_im_gui_storage">ImGuiStorage</link> * storage)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aad849238bf7c65665ac6a8a6ffecef98"/><section>
    <title>SetTabItemClosed()</title>
<indexterm><primary>SetTabItemClosed</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetTabItemClosed</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SetTabItemClosed (const char * tab_or_docked_window_label)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a313073fa01b8a9791f241ef93091ce92"/><section>
    <title>SetTooltip()</title>
<indexterm><primary>SetTooltip</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetTooltip</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SetTooltip (const char * fmt,  ...)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a3826acf68fc4a12bb66401575f51d6a2"/><section>
    <title>SetTooltipV()</title>
<indexterm><primary>SetTooltipV</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetTooltipV</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SetTooltipV (const char * fmt, va_list args)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a2451c5a6301b6c1234efc8054b70980b"/><section>
    <title>SetWindowClipRectBeforeSetChannel()</title>
<indexterm><primary>SetWindowClipRectBeforeSetChannel</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetWindowClipRectBeforeSetChannel</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SetWindowClipRectBeforeSetChannel (<link linkend="_struct_im_gui_window">ImGuiWindow</link> * window, const <link linkend="_struct_im_rect">ImRect</link> &amp; clip_rect)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ab5445711a74e0e1a58d1e464cdda252f"/><section>
    <title>SetWindowCollapsed()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>SetWindowCollapsed</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetWindowCollapsed</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SetWindowCollapsed (bool collapsed, <link linkend="_imgui_8h_1aef890d6ac872e12c5804d0b3e4f7f103">ImGuiCond</link> cond = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ac349187d6aae141cd3b4476e54bcc338"/><section>
    <title>SetWindowCollapsed()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>SetWindowCollapsed</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetWindowCollapsed</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SetWindowCollapsed (const char * name, bool collapsed, <link linkend="_imgui_8h_1aef890d6ac872e12c5804d0b3e4f7f103">ImGuiCond</link> cond = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a728bb661ccd1b63fb5ee4d3a3e3d0b7e"/><section>
    <title>SetWindowCollapsed()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>SetWindowCollapsed</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetWindowCollapsed</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SetWindowCollapsed (<link linkend="_struct_im_gui_window">ImGuiWindow</link> * window, bool collapsed, <link linkend="_imgui_8h_1aef890d6ac872e12c5804d0b3e4f7f103">ImGuiCond</link> cond = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ac0bc045c65761e287ab5ef99833dcbbc"/><section>
    <title>SetWindowDock()</title>
<indexterm><primary>SetWindowDock</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetWindowDock</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SetWindowDock (<link linkend="_struct_im_gui_window">ImGuiWindow</link> * window, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> dock_id, <link linkend="_imgui_8h_1aef890d6ac872e12c5804d0b3e4f7f103">ImGuiCond</link> cond)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ac71920931ed7b7c8594ee84c6a94e7b8"/><section>
    <title>SetWindowFocus()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>SetWindowFocus</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetWindowFocus</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SetWindowFocus ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aa612adbb975051090898f094a1608f24"/><section>
    <title>SetWindowFocus()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>SetWindowFocus</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetWindowFocus</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SetWindowFocus (const char * name)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a11f2f343dbc9b00ccd9e99ebd59cfe8b"/><section>
    <title>SetWindowFontScale()</title>
<indexterm><primary>SetWindowFontScale</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetWindowFontScale</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SetWindowFontScale (float scale)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a2a1dfd9dfa155f17d07c75f54130228b"/><section>
    <title>SetWindowHiddenAndSkipItemsForCurrentFrame()</title>
<indexterm><primary>SetWindowHiddenAndSkipItemsForCurrentFrame</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetWindowHiddenAndSkipItemsForCurrentFrame</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SetWindowHiddenAndSkipItemsForCurrentFrame (<link linkend="_struct_im_gui_window">ImGuiWindow</link> * window)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a83c0b24b73d8c9842de6ef882e394974"/><section>
    <title>SetWindowHitTestHole()</title>
<indexterm><primary>SetWindowHitTestHole</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetWindowHitTestHole</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SetWindowHitTestHole (<link linkend="_struct_im_gui_window">ImGuiWindow</link> * window, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; pos, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; size)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a976dec79c6fdee8960d4bee4a30d9c9d"/><section>
    <title>SetWindowParentWindowForFocusRoute()</title>
<indexterm><primary>SetWindowParentWindowForFocusRoute</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetWindowParentWindowForFocusRoute</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SetWindowParentWindowForFocusRoute (<link linkend="_struct_im_gui_window">ImGuiWindow</link> * window, <link linkend="_struct_im_gui_window">ImGuiWindow</link> * parent_window)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a32032b56f975bb3145adbe19f38f3b56"/><section>
    <title>SetWindowPos()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>SetWindowPos</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetWindowPos</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SetWindowPos (const char * name, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; pos, <link linkend="_imgui_8h_1aef890d6ac872e12c5804d0b3e4f7f103">ImGuiCond</link> cond = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aaa81e004de4c0a5cedb836e92e8aa0e5"/><section>
    <title>SetWindowPos()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>SetWindowPos</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetWindowPos</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SetWindowPos (const <link linkend="_struct_im_vec2">ImVec2</link> &amp; pos, <link linkend="_imgui_8h_1aef890d6ac872e12c5804d0b3e4f7f103">ImGuiCond</link> cond = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a77f1cca87a93a1411781d00a1b63ef45"/><section>
    <title>SetWindowPos()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>SetWindowPos</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetWindowPos</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SetWindowPos (<link linkend="_struct_im_gui_window">ImGuiWindow</link> * window, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; pos, <link linkend="_imgui_8h_1aef890d6ac872e12c5804d0b3e4f7f103">ImGuiCond</link> cond = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a441528b9198d4531e79337121212cd33"/><section>
    <title>SetWindowSize()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>SetWindowSize</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetWindowSize</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SetWindowSize (const char * name, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; size, <link linkend="_imgui_8h_1aef890d6ac872e12c5804d0b3e4f7f103">ImGuiCond</link> cond = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a657c6cc2246485332f608a5204447ea1"/><section>
    <title>SetWindowSize()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>SetWindowSize</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetWindowSize</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SetWindowSize (const <link linkend="_struct_im_vec2">ImVec2</link> &amp; size, <link linkend="_imgui_8h_1aef890d6ac872e12c5804d0b3e4f7f103">ImGuiCond</link> cond = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a8a9e750e203a4e4dfac2abd5368f51cf"/><section>
    <title>SetWindowSize()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>SetWindowSize</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetWindowSize</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SetWindowSize (<link linkend="_struct_im_gui_window">ImGuiWindow</link> * window, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; size, <link linkend="_imgui_8h_1aef890d6ac872e12c5804d0b3e4f7f103">ImGuiCond</link> cond = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ada7b6ffaa06eb1ef3422766fecce6866"/><section>
    <title>SetWindowViewport()</title>
<indexterm><primary>SetWindowViewport</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SetWindowViewport</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::SetWindowViewport (<link linkend="_struct_im_gui_window">ImGuiWindow</link> * window, <link linkend="_struct_im_gui_viewport_p">ImGuiViewportP</link> * viewport)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1acd137f6ee31f657e539eaa7e62f4f28a"/><section>
    <title>ShadeVertsLinearColorGradientKeepAlpha()</title>
<indexterm><primary>ShadeVertsLinearColorGradientKeepAlpha</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>ShadeVertsLinearColorGradientKeepAlpha</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::ShadeVertsLinearColorGradientKeepAlpha (<link linkend="_struct_im_draw_list">ImDrawList</link> * draw_list, int vert_start_idx, int vert_end_idx, <link linkend="_struct_im_vec2">ImVec2</link> gradient_p0, <link linkend="_struct_im_vec2">ImVec2</link> gradient_p1, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col0, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col1)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a676637659ec4291b07f386454840b58a"/><section>
    <title>ShadeVertsLinearUV()</title>
<indexterm><primary>ShadeVertsLinearUV</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>ShadeVertsLinearUV</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::ShadeVertsLinearUV (<link linkend="_struct_im_draw_list">ImDrawList</link> * draw_list, int vert_start_idx, int vert_end_idx, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; a, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; b, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; uv_a, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; uv_b, bool clamp)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a88fb69f1ac18ffb7925aa1c77fb7c37c"/><section>
    <title>ShadeVertsTransformPos()</title>
<indexterm><primary>ShadeVertsTransformPos</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>ShadeVertsTransformPos</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::ShadeVertsTransformPos (<link linkend="_struct_im_draw_list">ImDrawList</link> * draw_list, int vert_start_idx, int vert_end_idx, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; pivot_in, float cos_a, float sin_a, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; pivot_out)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a79fcd86b36bb86d9bd95c79013b0ad8d"/><section>
    <title>Shortcut()</title>
<indexterm><primary>Shortcut</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>Shortcut</secondary></indexterm>
<para><computeroutput>bool ImGui::Shortcut (<link linkend="_imgui_8h_1a0720c04fed27e0f01b3722a13c8a8762">ImGuiKeyChord</link> key_chord, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> owner_id = <computeroutput>0</computeroutput>
, <link linkend="_imgui__internal_8h_1aa4211ddd58ae8523981eb953a1caf4b7">ImGuiInputFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ac297462e33309d0540fa459bccdc9304"/><section>
    <title>ShowAboutWindow()</title>
<indexterm><primary>ShowAboutWindow</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>ShowAboutWindow</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::ShowAboutWindow (bool * p_open = <computeroutput>NULL</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1af1b39e70cac2e1b9e62dd3c9d154cbd6"/><section>
    <title>ShowDebugLogWindow()</title>
<indexterm><primary>ShowDebugLogWindow</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>ShowDebugLogWindow</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::ShowDebugLogWindow (bool * p_open = <computeroutput>NULL</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1af95643a0ce4893b9e57c12991922fb18"/><section>
    <title>ShowDemoWindow()</title>
<indexterm><primary>ShowDemoWindow</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>ShowDemoWindow</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::ShowDemoWindow (bool * p_open = <computeroutput>NULL</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1acab51ec2b39577845309f24535381038"/><section>
    <title>ShowFontAtlas()</title>
<indexterm><primary>ShowFontAtlas</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>ShowFontAtlas</secondary></indexterm>
<para><computeroutput><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::ShowFontAtlas (<link linkend="_struct_im_font_atlas">ImFontAtlas</link> * atlas)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a0bdce99eef17ef1e1fef40a18bd811ab"/><section>
    <title>ShowFontSelector()</title>
<indexterm><primary>ShowFontSelector</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>ShowFontSelector</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::ShowFontSelector (const char * label)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ab4a87bf4a874a8e5872b60b4a9b1d99e"/><section>
    <title>ShowIDStackToolWindow()</title>
<indexterm><primary>ShowIDStackToolWindow</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>ShowIDStackToolWindow</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::ShowIDStackToolWindow (bool * p_open = <computeroutput>NULL</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1afe7a28c6eb52fff3cc27d5a698fea4ff"/><section>
    <title>ShowMetricsWindow()</title>
<indexterm><primary>ShowMetricsWindow</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>ShowMetricsWindow</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::ShowMetricsWindow (bool * p_open = <computeroutput>NULL</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ab2eb3dec78d054fe3feab1c091ec5de5"/><section>
    <title>ShowStyleEditor()</title>
<indexterm><primary>ShowStyleEditor</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>ShowStyleEditor</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::ShowStyleEditor (<link linkend="_struct_im_gui_style">ImGuiStyle</link> * ref = <computeroutput>NULL</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a83f4e863c102b0a05e0e3308b371b394"/><section>
    <title>ShowStyleSelector()</title>
<indexterm><primary>ShowStyleSelector</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>ShowStyleSelector</secondary></indexterm>
<para><computeroutput>bool ImGui::ShowStyleSelector (const char * label)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ad6f4919bc9aa806ca8d2c1d6e2bfb051"/><section>
    <title>ShowUserGuide()</title>
<indexterm><primary>ShowUserGuide</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>ShowUserGuide</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::ShowUserGuide ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1acb224619be75abaf226282bbdf40f92f"/><section>
    <title>ShrinkWidths()</title>
<indexterm><primary>ShrinkWidths</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>ShrinkWidths</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::ShrinkWidths (<link linkend="_struct_im_gui_shrink_width_item">ImGuiShrinkWidthItem</link> * items, int count, float width_excess)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aeba34069558d4fbcf734a9c92ce3b773"/><section>
    <title>Shutdown()</title>
<indexterm><primary>Shutdown</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>Shutdown</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::Shutdown ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1acd162f7732c5c7be7b8651d7e43bb979"/><section>
    <title>SliderAngle()</title>
<indexterm><primary>SliderAngle</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SliderAngle</secondary></indexterm>
<para><computeroutput>bool ImGui::SliderAngle (const char * label, float * v_rad, float v_degrees_min = <computeroutput>-360.0f</computeroutput>
, float v_degrees_max = <computeroutput>+360.0f</computeroutput>
, const char * format = <computeroutput>&quot;%.0f&#160;deg&quot;</computeroutput>
, <link linkend="_imgui_8h_1a50cc3e3e4beb155e2186f8c1dc057e18">ImGuiSliderFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1af8d5d2cfa55221448e55e51b1abcfe93"/><section>
    <title>SliderBehavior()</title>
<indexterm><primary>SliderBehavior</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SliderBehavior</secondary></indexterm>
<para><computeroutput>bool ImGui::SliderBehavior (const <link linkend="_struct_im_rect">ImRect</link> &amp; bb, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id, <link linkend="_imgui_8h_1a4cfa8697a3d76722fff83eb18922e9d5">ImGuiDataType</link> data_type, <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * p_v, const <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * p_min, const <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * p_max, const char * format, <link linkend="_imgui_8h_1a50cc3e3e4beb155e2186f8c1dc057e18">ImGuiSliderFlags</link> flags, <link linkend="_struct_im_rect">ImRect</link> * out_grab_bb)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ad0247a8c67e80cc038c1918ef3a75b80"/><section>
    <title>SliderBehaviorT()</title>
<indexterm><primary>SliderBehaviorT</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SliderBehaviorT</secondary></indexterm>
<computeroutput>template&lt;typename T , typename SIGNED_T , typename FLOAT_T &gt; </computeroutput><para><computeroutput><link linkend="_imgui_8h_1a43829975e84e45d1149597467a14bbf5">IMGUI_API</link> bool ImGui::SliderBehaviorT (const <link linkend="_struct_im_rect">ImRect</link> &amp; bb, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id, <link linkend="_imgui_8h_1a4cfa8697a3d76722fff83eb18922e9d5">ImGuiDataType</link> data_type, T * v, T v_min, T v_max, const char * format, <link linkend="_imgui_8h_1a50cc3e3e4beb155e2186f8c1dc057e18">ImGuiSliderFlags</link> flags, <link linkend="_struct_im_rect">ImRect</link> * out_grab_bb)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a864f761801792a0cc5ce3408f3392cfc"/><section>
    <title>SliderFloat()</title>
<indexterm><primary>SliderFloat</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SliderFloat</secondary></indexterm>
<para><computeroutput>bool ImGui::SliderFloat (const char * label, float * v, float v_min, float v_max, const char * format = <computeroutput>&quot;%.3f&quot;</computeroutput>
, <link linkend="_imgui_8h_1a50cc3e3e4beb155e2186f8c1dc057e18">ImGuiSliderFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a65ed4a55f13d467b06075c951b310c23"/><section>
    <title>SliderFloat2()</title>
<indexterm><primary>SliderFloat2</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SliderFloat2</secondary></indexterm>
<para><computeroutput>bool ImGui::SliderFloat2 (const char * label, float v[2], float v_min, float v_max, const char * format = <computeroutput>&quot;%.3f&quot;</computeroutput>
, <link linkend="_imgui_8h_1a50cc3e3e4beb155e2186f8c1dc057e18">ImGuiSliderFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a9fb9ae936849ae17be13c9b6a0391585"/><section>
    <title>SliderFloat3()</title>
<indexterm><primary>SliderFloat3</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SliderFloat3</secondary></indexterm>
<para><computeroutput>bool ImGui::SliderFloat3 (const char * label, float v[3], float v_min, float v_max, const char * format = <computeroutput>&quot;%.3f&quot;</computeroutput>
, <link linkend="_imgui_8h_1a50cc3e3e4beb155e2186f8c1dc057e18">ImGuiSliderFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1acee94c7b89963d8fec32de541cd7205f"/><section>
    <title>SliderFloat4()</title>
<indexterm><primary>SliderFloat4</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SliderFloat4</secondary></indexterm>
<para><computeroutput>bool ImGui::SliderFloat4 (const char * label, float v[4], float v_min, float v_max, const char * format = <computeroutput>&quot;%.3f&quot;</computeroutput>
, <link linkend="_imgui_8h_1a50cc3e3e4beb155e2186f8c1dc057e18">ImGuiSliderFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a580128c9b35d1a9fc5b7a057f6f5464a"/><section>
    <title>SliderInt()</title>
<indexterm><primary>SliderInt</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SliderInt</secondary></indexterm>
<para><computeroutput>bool ImGui::SliderInt (const char * label, int * v, int v_min, int v_max, const char * format = <computeroutput>&quot;%d&quot;</computeroutput>
, <link linkend="_imgui_8h_1a50cc3e3e4beb155e2186f8c1dc057e18">ImGuiSliderFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a9913948869631d72e4fa5dd69235350e"/><section>
    <title>SliderInt2()</title>
<indexterm><primary>SliderInt2</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SliderInt2</secondary></indexterm>
<para><computeroutput>bool ImGui::SliderInt2 (const char * label, int v[2], int v_min, int v_max, const char * format = <computeroutput>&quot;%d&quot;</computeroutput>
, <link linkend="_imgui_8h_1a50cc3e3e4beb155e2186f8c1dc057e18">ImGuiSliderFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ab1e67cf69998479a59677e332dba745b"/><section>
    <title>SliderInt3()</title>
<indexterm><primary>SliderInt3</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SliderInt3</secondary></indexterm>
<para><computeroutput>bool ImGui::SliderInt3 (const char * label, int v[3], int v_min, int v_max, const char * format = <computeroutput>&quot;%d&quot;</computeroutput>
, <link linkend="_imgui_8h_1a50cc3e3e4beb155e2186f8c1dc057e18">ImGuiSliderFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a9a0bb4c55424177ab7894e5a87bd91ea"/><section>
    <title>SliderInt4()</title>
<indexterm><primary>SliderInt4</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SliderInt4</secondary></indexterm>
<para><computeroutput>bool ImGui::SliderInt4 (const char * label, int v[4], int v_min, int v_max, const char * format = <computeroutput>&quot;%d&quot;</computeroutput>
, <link linkend="_imgui_8h_1a50cc3e3e4beb155e2186f8c1dc057e18">ImGuiSliderFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1afdd7faa9a69f75b8d674cdc207441bea"/><section>
    <title>SliderScalar()</title>
<indexterm><primary>SliderScalar</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SliderScalar</secondary></indexterm>
<para><computeroutput>bool ImGui::SliderScalar (const char * label, <link linkend="_imgui_8h_1a4cfa8697a3d76722fff83eb18922e9d5">ImGuiDataType</link> data_type, <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * p_data, const <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * p_min, const <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * p_max, const char * format = <computeroutput>NULL</computeroutput>
, <link linkend="_imgui_8h_1a50cc3e3e4beb155e2186f8c1dc057e18">ImGuiSliderFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a64031a4ad000695c1e1d3f42792f4bb4"/><section>
    <title>SliderScalarN()</title>
<indexterm><primary>SliderScalarN</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SliderScalarN</secondary></indexterm>
<para><computeroutput>bool ImGui::SliderScalarN (const char * label, <link linkend="_imgui_8h_1a4cfa8697a3d76722fff83eb18922e9d5">ImGuiDataType</link> data_type, <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * p_data, int components, const <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * p_min, const <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * p_max, const char * format = <computeroutput>NULL</computeroutput>
, <link linkend="_imgui_8h_1a50cc3e3e4beb155e2186f8c1dc057e18">ImGuiSliderFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a5b76ec69758aeb0a00a66f142f7a4fb2"/><section>
    <title>SmallButton()</title>
<indexterm><primary>SmallButton</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SmallButton</secondary></indexterm>
<para><computeroutput>bool ImGui::SmallButton (const char * label)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a2659e2bfe84b4cad0facd65d5c1ac90d"/><section>
    <title>Spacing()</title>
<indexterm><primary>Spacing</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>Spacing</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::Spacing ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a285913cd915ee715cd6a804e1b83814c"/><section>
    <title>SplitterBehavior()</title>
<indexterm><primary>SplitterBehavior</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>SplitterBehavior</secondary></indexterm>
<para><computeroutput>bool ImGui::SplitterBehavior (const <link linkend="_struct_im_rect">ImRect</link> &amp; bb, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id, <link linkend="_imgui__internal_8h_1a468e54d5ed387abfbf0d1fc1e33ab483">ImGuiAxis</link> axis, float * size1, float * size2, float min_size1, float min_size2, float hover_extend = <computeroutput>0.0f</computeroutput>
, float hover_visibility_delay = <computeroutput>0.0f</computeroutput>
, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> bg_col = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1afd03199380411a711c74893434d91258"/><section>
    <title>StartMouseMovingWindow()</title>
<indexterm><primary>StartMouseMovingWindow</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>StartMouseMovingWindow</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::StartMouseMovingWindow (<link linkend="_struct_im_gui_window">ImGuiWindow</link> * window)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aa2e0aae7c6deb71ddb9086e9a03adbe7"/><section>
    <title>StartMouseMovingWindowOrNode()</title>
<indexterm><primary>StartMouseMovingWindowOrNode</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>StartMouseMovingWindowOrNode</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::StartMouseMovingWindowOrNode (<link linkend="_struct_im_gui_window">ImGuiWindow</link> * window, <link linkend="_struct_im_gui_dock_node">ImGuiDockNode</link> * node, bool undock)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a1cf931a42a10f71150def3ce222434b6"/><section>
    <title>StyleColorsClassic()</title>
<indexterm><primary>StyleColorsClassic</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>StyleColorsClassic</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::StyleColorsClassic (<link linkend="_struct_im_gui_style">ImGuiStyle</link> * dst = <computeroutput>NULL</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a26c67fc14081b359566d5e135cd8c767"/><section>
    <title>StyleColorsDark()</title>
<indexterm><primary>StyleColorsDark</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>StyleColorsDark</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::StyleColorsDark (<link linkend="_struct_im_gui_style">ImGuiStyle</link> * dst = <computeroutput>NULL</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ae1fc558bfbc557b228d63f7facfc86e1"/><section>
    <title>StyleColorsLight()</title>
<indexterm><primary>StyleColorsLight</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>StyleColorsLight</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::StyleColorsLight (<link linkend="_struct_im_gui_style">ImGuiStyle</link> * dst = <computeroutput>NULL</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ad351241dc857097a48c74669249b3c04"/><section>
    <title>TabBarAddTab()</title>
<indexterm><primary>TabBarAddTab</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TabBarAddTab</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::TabBarAddTab (<link linkend="_struct_im_gui_tab_bar">ImGuiTabBar</link> * tab_bar, <link linkend="_imgui_8h_1aec9b231c0bca6ab9afc507ccfe60d872">ImGuiTabItemFlags</link> tab_flags, <link linkend="_struct_im_gui_window">ImGuiWindow</link> * window)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ac2d6de29959e0be692d15e4cefce5929"/><section>
    <title>TabBarCloseTab()</title>
<indexterm><primary>TabBarCloseTab</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TabBarCloseTab</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::TabBarCloseTab (<link linkend="_struct_im_gui_tab_bar">ImGuiTabBar</link> * tab_bar, <link linkend="_struct_im_gui_tab_item">ImGuiTabItem</link> * tab)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a5e1bfc506e7bd0f71ec85d8c69672d3d"/><section>
    <title>TabBarFindMostRecentlySelectedTabForActiveWindow()</title>
<indexterm><primary>TabBarFindMostRecentlySelectedTabForActiveWindow</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TabBarFindMostRecentlySelectedTabForActiveWindow</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_gui_tab_item">ImGuiTabItem</link> * ImGui::TabBarFindMostRecentlySelectedTabForActiveWindow (<link linkend="_struct_im_gui_tab_bar">ImGuiTabBar</link> * tab_bar)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a892525a74a6206eabbeb851071b3119a"/><section>
    <title>TabBarFindTabByID()</title>
<indexterm><primary>TabBarFindTabByID</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TabBarFindTabByID</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_gui_tab_item">ImGuiTabItem</link> * ImGui::TabBarFindTabByID (<link linkend="_struct_im_gui_tab_bar">ImGuiTabBar</link> * tab_bar, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> tab_id)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a4b0b18645ef7466d671c788b69dd538c"/><section>
    <title>TabBarFindTabByOrder()</title>
<indexterm><primary>TabBarFindTabByOrder</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TabBarFindTabByOrder</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_gui_tab_item">ImGuiTabItem</link> * ImGui::TabBarFindTabByOrder (<link linkend="_struct_im_gui_tab_bar">ImGuiTabBar</link> * tab_bar, int order)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a8c17479417a20abecbb65f822d5f4677"/><section>
    <title>TabBarGetCurrentTab()</title>
<indexterm><primary>TabBarGetCurrentTab</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TabBarGetCurrentTab</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_gui_tab_item">ImGuiTabItem</link> * ImGui::TabBarGetCurrentTab (<link linkend="_struct_im_gui_tab_bar">ImGuiTabBar</link> * tab_bar)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a5ad2340bc5e4f8b0f8a77e8dc5621531"/><section>
    <title>TabBarGetTabName()</title>
<indexterm><primary>TabBarGetTabName</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TabBarGetTabName</secondary></indexterm>
<para><computeroutput>const char * ImGui::TabBarGetTabName (<link linkend="_struct_im_gui_tab_bar">ImGuiTabBar</link> * tab_bar, <link linkend="_struct_im_gui_tab_item">ImGuiTabItem</link> * tab)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ab09f008d445dd058ed21cf46041ce9bd"/><section>
    <title>TabBarGetTabOrder()</title>
<indexterm><primary>TabBarGetTabOrder</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TabBarGetTabOrder</secondary></indexterm>
<para><computeroutput>int ImGui::TabBarGetTabOrder (<link linkend="_struct_im_gui_tab_bar">ImGuiTabBar</link> * tab_bar, <link linkend="_struct_im_gui_tab_item">ImGuiTabItem</link> * tab)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aabf7c33f50ff3dc01b14fb19578252ee"/><section>
    <title>TabBarProcessReorder()</title>
<indexterm><primary>TabBarProcessReorder</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TabBarProcessReorder</secondary></indexterm>
<para><computeroutput>bool ImGui::TabBarProcessReorder (<link linkend="_struct_im_gui_tab_bar">ImGuiTabBar</link> * tab_bar)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a6808a631d32de769e33eaac85ff3d85c"/><section>
    <title>TabBarQueueFocus()</title>
<indexterm><primary>TabBarQueueFocus</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TabBarQueueFocus</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::TabBarQueueFocus (<link linkend="_struct_im_gui_tab_bar">ImGuiTabBar</link> * tab_bar, <link linkend="_struct_im_gui_tab_item">ImGuiTabItem</link> * tab)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1afe20b51ba36c0404fa50edff0d039739"/><section>
    <title>TabBarQueueReorder()</title>
<indexterm><primary>TabBarQueueReorder</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TabBarQueueReorder</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::TabBarQueueReorder (<link linkend="_struct_im_gui_tab_bar">ImGuiTabBar</link> * tab_bar, <link linkend="_struct_im_gui_tab_item">ImGuiTabItem</link> * tab, int offset)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a71f399cebfd6cf108c545cc691d77248"/><section>
    <title>TabBarQueueReorderFromMousePos()</title>
<indexterm><primary>TabBarQueueReorderFromMousePos</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TabBarQueueReorderFromMousePos</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::TabBarQueueReorderFromMousePos (<link linkend="_struct_im_gui_tab_bar">ImGuiTabBar</link> * tab_bar, <link linkend="_struct_im_gui_tab_item">ImGuiTabItem</link> * tab, <link linkend="_struct_im_vec2">ImVec2</link> mouse_pos)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a3340d8c07dca35527b618288f091a0f7"/><section>
    <title>TabBarRemoveTab()</title>
<indexterm><primary>TabBarRemoveTab</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TabBarRemoveTab</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::TabBarRemoveTab (<link linkend="_struct_im_gui_tab_bar">ImGuiTabBar</link> * tab_bar, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> tab_id)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a87fc45357f733cb2a378e098d2855243"/><section>
    <title>TabItemBackground()</title>
<indexterm><primary>TabItemBackground</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TabItemBackground</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::TabItemBackground (<link linkend="_struct_im_draw_list">ImDrawList</link> * draw_list, const <link linkend="_struct_im_rect">ImRect</link> &amp; bb, <link linkend="_imgui_8h_1aec9b231c0bca6ab9afc507ccfe60d872">ImGuiTabItemFlags</link> flags, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> col)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a1dbc539ac5b49e9445c4573607e6d60d"/><section>
    <title>TabItemButton()</title>
<indexterm><primary>TabItemButton</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TabItemButton</secondary></indexterm>
<para><computeroutput>bool ImGui::TabItemButton (const char * label, <link linkend="_imgui_8h_1aec9b231c0bca6ab9afc507ccfe60d872">ImGuiTabItemFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aa6e4bacb44f42ff99c11420d099b1dc2"/><section>
    <title>TabItemCalcSize()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>TabItemCalcSize</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TabItemCalcSize</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_vec2">ImVec2</link> ImGui::TabItemCalcSize (const char * label, bool has_close_button_or_unsaved_marker)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aaead36381d3cb7ae186cd23fc32f8a88"/><section>
    <title>TabItemCalcSize()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>TabItemCalcSize</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TabItemCalcSize</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_vec2">ImVec2</link> ImGui::TabItemCalcSize (<link linkend="_struct_im_gui_window">ImGuiWindow</link> * window)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a4e0986fc689e7855cd9a9099dc87dac5"/><section>
    <title>TabItemEx()</title>
<indexterm><primary>TabItemEx</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TabItemEx</secondary></indexterm>
<para><computeroutput>bool ImGui::TabItemEx (<link linkend="_struct_im_gui_tab_bar">ImGuiTabBar</link> * tab_bar, const char * label, bool * p_open, <link linkend="_imgui_8h_1aec9b231c0bca6ab9afc507ccfe60d872">ImGuiTabItemFlags</link> flags, <link linkend="_struct_im_gui_window">ImGuiWindow</link> * docked_window)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1abbdb2619721c7ecaca3fb03d9d905003"/><section>
    <title>TabItemLabelAndCloseButton()</title>
<indexterm><primary>TabItemLabelAndCloseButton</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TabItemLabelAndCloseButton</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::TabItemLabelAndCloseButton (<link linkend="_struct_im_draw_list">ImDrawList</link> * draw_list, const <link linkend="_struct_im_rect">ImRect</link> &amp; bb, <link linkend="_imgui_8h_1aec9b231c0bca6ab9afc507ccfe60d872">ImGuiTabItemFlags</link> flags, <link linkend="_struct_im_vec2">ImVec2</link> frame_padding, const char * label, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> tab_id, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> close_button_id, bool is_contents_visible, bool * out_just_closed, bool * out_text_clipped)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a17eb2b71b2aff472d9d56c838586b73b"/><section>
    <title>TableAngledHeadersRow()</title>
<indexterm><primary>TableAngledHeadersRow</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TableAngledHeadersRow</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::TableAngledHeadersRow ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1abedf7bbf79accde2321806dc0beb90b1"/><section>
    <title>TableAngledHeadersRowEx()</title>
<indexterm><primary>TableAngledHeadersRowEx</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TableAngledHeadersRowEx</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::TableAngledHeadersRowEx (float angle, float max_label_width = <computeroutput>0.0f</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1af4446a9e8b44157047d089fe4f0c738d"/><section>
    <title>TableBeginApplyRequests()</title>
<indexterm><primary>TableBeginApplyRequests</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TableBeginApplyRequests</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::TableBeginApplyRequests (<link linkend="_struct_im_gui_table">ImGuiTable</link> * table)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ab6578920318c60f3a18daee1d8711103"/><section>
    <title>TableBeginCell()</title>
<indexterm><primary>TableBeginCell</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TableBeginCell</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::TableBeginCell (<link linkend="_struct_im_gui_table">ImGuiTable</link> * table, int column_n)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ac5ffd2621218c244f701317f9086e6ff"/><section>
    <title>TableBeginContextMenuPopup()</title>
<indexterm><primary>TableBeginContextMenuPopup</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TableBeginContextMenuPopup</secondary></indexterm>
<para><computeroutput>bool ImGui::TableBeginContextMenuPopup (<link linkend="_struct_im_gui_table">ImGuiTable</link> * table)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a41533f5f77df0241f9f4aaa17d01a0d7"/><section>
    <title>TableBeginInitMemory()</title>
<indexterm><primary>TableBeginInitMemory</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TableBeginInitMemory</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::TableBeginInitMemory (<link linkend="_struct_im_gui_table">ImGuiTable</link> * table, int columns_count)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ac966c7257f3c3e557170d1f1089cb09a"/><section>
    <title>TableBeginRow()</title>
<indexterm><primary>TableBeginRow</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TableBeginRow</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::TableBeginRow (<link linkend="_struct_im_gui_table">ImGuiTable</link> * table)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a506d5b52f032c72503c4e87535a3d04d"/><section>
    <title>TableDrawBorders()</title>
<indexterm><primary>TableDrawBorders</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TableDrawBorders</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::TableDrawBorders (<link linkend="_struct_im_gui_table">ImGuiTable</link> * table)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1affbabc4a2c721b20ab7106d62be19385"/><section>
    <title>TableDrawDefaultContextMenu()</title>
<indexterm><primary>TableDrawDefaultContextMenu</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TableDrawDefaultContextMenu</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::TableDrawDefaultContextMenu (<link linkend="_struct_im_gui_table">ImGuiTable</link> * table, <link linkend="_imgui_8h_1ad3032e379f8aba2cb5c31b05cd40858d">ImGuiTableFlags</link> flags_for_section_to_display)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ae2058909b56d7169e34a6cfefb1ac2f3"/><section>
    <title>TableEndCell()</title>
<indexterm><primary>TableEndCell</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TableEndCell</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::TableEndCell (<link linkend="_struct_im_gui_table">ImGuiTable</link> * table)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a6bc4ce6f7ff9f8268473f5e538a1181f"/><section>
    <title>TableEndRow()</title>
<indexterm><primary>TableEndRow</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TableEndRow</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::TableEndRow (<link linkend="_struct_im_gui_table">ImGuiTable</link> * table)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a57adce5340eb73285ccf2c8bc81c92bf"/><section>
    <title>TableFindByID()</title>
<indexterm><primary>TableFindByID</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TableFindByID</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_gui_table">ImGuiTable</link> * ImGui::TableFindByID (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a6eb757220d4d7276577cfadfd056c9fe"/><section>
    <title>TableFixColumnSortDirection()</title>
<indexterm><primary>TableFixColumnSortDirection</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TableFixColumnSortDirection</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::TableFixColumnSortDirection (<link linkend="_struct_im_gui_table">ImGuiTable</link> * table, <link linkend="_struct_im_gui_table_column">ImGuiTableColumn</link> * column)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a4e0c06857053c7c3fbde16b8fd5bee17"/><section>
    <title>TableGcCompactSettings()</title>
<indexterm><primary>TableGcCompactSettings</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TableGcCompactSettings</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::TableGcCompactSettings ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1af3cb65f8b45057e34fa7d9447a57eb28"/><section>
    <title>TableGcCompactTransientBuffers()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>TableGcCompactTransientBuffers</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TableGcCompactTransientBuffers</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::TableGcCompactTransientBuffers (<link linkend="_struct_im_gui_table">ImGuiTable</link> * table)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ac176c3d1c667f88d2272376e0b141503"/><section>
    <title>TableGcCompactTransientBuffers()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>TableGcCompactTransientBuffers</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TableGcCompactTransientBuffers</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::TableGcCompactTransientBuffers (<link linkend="_struct_im_gui_table_temp_data">ImGuiTableTempData</link> * table)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a4824b64a0052e57fdb17c90331fb39cd"/><section>
    <title>TableGetBoundSettings()</title>
<indexterm><primary>TableGetBoundSettings</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TableGetBoundSettings</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_gui_table_settings">ImGuiTableSettings</link> * ImGui::TableGetBoundSettings (<link linkend="_struct_im_gui_table">ImGuiTable</link> * table)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aa778a80828627fcd199784f4591a97d1"/><section>
    <title>TableGetCellBgRect()</title>
<indexterm><primary>TableGetCellBgRect</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TableGetCellBgRect</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_rect">ImRect</link> ImGui::TableGetCellBgRect (const <link linkend="_struct_im_gui_table">ImGuiTable</link> * table, int column_n)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1acaf1dac6c4f24b96ad607958d4298198"/><section>
    <title>TableGetColumnCount()</title>
<indexterm><primary>TableGetColumnCount</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TableGetColumnCount</secondary></indexterm>
<para><computeroutput>int ImGui::TableGetColumnCount ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a809f5ce5ce8ad4035d19cea0e79e1e5f"/><section>
    <title>TableGetColumnFlags()</title>
<indexterm><primary>TableGetColumnFlags</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TableGetColumnFlags</secondary></indexterm>
<para><computeroutput><link linkend="_imgui_8h_1afa2ab8df5653f1cc944f6cbc156bf874">ImGuiTableColumnFlags</link> ImGui::TableGetColumnFlags (int column_n = <computeroutput>-1</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a0527a5c08501cf1de0eb2c691042e40b"/><section>
    <title>TableGetColumnIndex()</title>
<indexterm><primary>TableGetColumnIndex</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TableGetColumnIndex</secondary></indexterm>
<para><computeroutput>int ImGui::TableGetColumnIndex ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a136f408a27340b058b115fc014867c48"/><section>
    <title>TableGetColumnName()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>TableGetColumnName</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TableGetColumnName</secondary></indexterm>
<para><computeroutput>const char * ImGui::TableGetColumnName (const <link linkend="_struct_im_gui_table">ImGuiTable</link> * table, int column_n)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a38ddf97e72be7278e6661d7db3055526"/><section>
    <title>TableGetColumnName()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>TableGetColumnName</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TableGetColumnName</secondary></indexterm>
<para><computeroutput>const char * ImGui::TableGetColumnName (int column_n = <computeroutput>-1</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a25bb5e856111000a1f898473f190c506"/><section>
    <title>TableGetColumnNextSortDirection()</title>
<indexterm><primary>TableGetColumnNextSortDirection</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TableGetColumnNextSortDirection</secondary></indexterm>
<para><computeroutput><link linkend="_imgui_8h_1ac8994dbafc20fc81077ee64574ab648e">ImGuiSortDirection</link> ImGui::TableGetColumnNextSortDirection (<link linkend="_struct_im_gui_table_column">ImGuiTableColumn</link> * column)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a8d0d01eaf47b69df551d98e8ce3fc86d"/><section>
    <title>TableGetColumnResizeID()</title>
<indexterm><primary>TableGetColumnResizeID</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TableGetColumnResizeID</secondary></indexterm>
<para><computeroutput><link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> ImGui::TableGetColumnResizeID (<link linkend="_struct_im_gui_table">ImGuiTable</link> * table, int column_n, int instance_no = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1adb37a5d79b71507de590924cd53e1e62"/><section>
    <title>TableGetColumnWidthAuto()</title>
<indexterm><primary>TableGetColumnWidthAuto</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TableGetColumnWidthAuto</secondary></indexterm>
<para><computeroutput>float ImGui::TableGetColumnWidthAuto (<link linkend="_struct_im_gui_table">ImGuiTable</link> * table, <link linkend="_struct_im_gui_table_column">ImGuiTableColumn</link> * column)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a0ca90d6b30ebafeeae2baf45abc09bda"/><section>
    <title>TableGetHeaderAngledMaxLabelWidth()</title>
<indexterm><primary>TableGetHeaderAngledMaxLabelWidth</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TableGetHeaderAngledMaxLabelWidth</secondary></indexterm>
<para><computeroutput>float ImGui::TableGetHeaderAngledMaxLabelWidth ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a5be2ea5c0d97fdd02b0b776412ed9d8d"/><section>
    <title>TableGetHeaderRowHeight()</title>
<indexterm><primary>TableGetHeaderRowHeight</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TableGetHeaderRowHeight</secondary></indexterm>
<para><computeroutput>float ImGui::TableGetHeaderRowHeight ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a19e750505235ca98752ccc9b4befd790"/><section>
    <title>TableGetHoveredColumn()</title>
<indexterm><primary>TableGetHoveredColumn</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TableGetHoveredColumn</secondary></indexterm>
<para><computeroutput>int ImGui::TableGetHoveredColumn ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ad2125ee545d7ab8adb482177a9c29b21"/><section>
    <title>TableGetHoveredRow()</title>
<indexterm><primary>TableGetHoveredRow</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TableGetHoveredRow</secondary></indexterm>
<para><computeroutput>int ImGui::TableGetHoveredRow ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aaf5b122b1f088db308b44508c240b05f"/><section>
    <title>TableGetInstanceData()</title>
<indexterm><primary>TableGetInstanceData</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TableGetInstanceData</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_gui_table_instance_data">ImGuiTableInstanceData</link> * ImGui::TableGetInstanceData (<link linkend="_struct_im_gui_table">ImGuiTable</link> * table, int instance_no)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a54ba0ce0a293a68caf56146811c5305b"/><section>
    <title>TableGetInstanceID()</title>
<indexterm><primary>TableGetInstanceID</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TableGetInstanceID</secondary></indexterm>
<para><computeroutput><link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> ImGui::TableGetInstanceID (<link linkend="_struct_im_gui_table">ImGuiTable</link> * table, int instance_no)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1acd435c37aed7c3aa11eb71a8dee09e78"/><section>
    <title>TableGetMaxColumnWidth()</title>
<indexterm><primary>TableGetMaxColumnWidth</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TableGetMaxColumnWidth</secondary></indexterm>
<para><computeroutput>float ImGui::TableGetMaxColumnWidth (const <link linkend="_struct_im_gui_table">ImGuiTable</link> * table, int column_n)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a1b93e609ccd69d923f69751c25ac2f5c"/><section>
    <title>TableGetRowIndex()</title>
<indexterm><primary>TableGetRowIndex</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TableGetRowIndex</secondary></indexterm>
<para><computeroutput>int ImGui::TableGetRowIndex ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1acaeb2f2896b8332e108b6b1ce1c08fcc"/><section>
    <title>TableGetSortSpecs()</title>
<indexterm><primary>TableGetSortSpecs</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TableGetSortSpecs</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_gui_table_sort_specs">ImGuiTableSortSpecs</link> * ImGui::TableGetSortSpecs ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ae51bc07bc518779f58def3c0e2d0045c"/><section>
    <title>TableHeader()</title>
<indexterm><primary>TableHeader</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TableHeader</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::TableHeader (const char * label)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a0c16791f4620e8db38511553d5d63335"/><section>
    <title>TableHeadersRow()</title>
<indexterm><primary>TableHeadersRow</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TableHeadersRow</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::TableHeadersRow ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a9dbe18a196cc7e70f84cecfcb3b45c1b"/><section>
    <title>TableLoadSettings()</title>
<indexterm><primary>TableLoadSettings</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TableLoadSettings</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::TableLoadSettings (<link linkend="_struct_im_gui_table">ImGuiTable</link> * table)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a0bf2259f81cd376b6790fe13dea70a22"/><section>
    <title>TableMergeDrawChannels()</title>
<indexterm><primary>TableMergeDrawChannels</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TableMergeDrawChannels</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::TableMergeDrawChannels (<link linkend="_struct_im_gui_table">ImGuiTable</link> * table)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ac9925e8335f55449b1be988829e37ba5"/><section>
    <title>TableNextColumn()</title>
<indexterm><primary>TableNextColumn</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TableNextColumn</secondary></indexterm>
<para><computeroutput>bool ImGui::TableNextColumn ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a33511cbfe04b545a1a51b514ab6c208c"/><section>
    <title>TableNextRow()</title>
<indexterm><primary>TableNextRow</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TableNextRow</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::TableNextRow (<link linkend="_imgui_8h_1acff5083d4dbfa7a898927046008598c1">ImGuiTableRowFlags</link> row_flags = <computeroutput>0</computeroutput>
, float min_row_height = <computeroutput>0.0f</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1afa05e82c8b5239452806770e5f9efd70"/><section>
    <title>TableOpenContextMenu()</title>
<indexterm><primary>TableOpenContextMenu</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TableOpenContextMenu</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::TableOpenContextMenu (int column_n = <computeroutput>-1</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a4fe11c430ad1b6597d4ffbde7cdf257e"/><section>
    <title>TablePopBackgroundChannel()</title>
<indexterm><primary>TablePopBackgroundChannel</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TablePopBackgroundChannel</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::TablePopBackgroundChannel ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a6b6e0c511477248e9dd485c359f52eeb"/><section>
    <title>TablePushBackgroundChannel()</title>
<indexterm><primary>TablePushBackgroundChannel</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TablePushBackgroundChannel</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::TablePushBackgroundChannel ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a3fa207dacfbee7ac3c7241dfea4fb638"/><section>
    <title>TableRemove()</title>
<indexterm><primary>TableRemove</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TableRemove</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::TableRemove (<link linkend="_struct_im_gui_table">ImGuiTable</link> * table)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a068e3709ba63913c45a2c3177f511425"/><section>
    <title>TableResetSettings()</title>
<indexterm><primary>TableResetSettings</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TableResetSettings</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::TableResetSettings (<link linkend="_struct_im_gui_table">ImGuiTable</link> * table)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aadf0917c8bc98aaab0bf3c7667b19afe"/><section>
    <title>TableSaveSettings()</title>
<indexterm><primary>TableSaveSettings</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TableSaveSettings</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::TableSaveSettings (<link linkend="_struct_im_gui_table">ImGuiTable</link> * table)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ae8fa85b0cea3c12f73d9432cab64d50a"/><section>
    <title>TableSetBgColor()</title>
<indexterm><primary>TableSetBgColor</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TableSetBgColor</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::TableSetBgColor (<link linkend="_imgui_8h_1a7f84e7096ba6fa76bbcd5d8fb990b59d">ImGuiTableBgTarget</link> target, <link linkend="_imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36">ImU32</link> color, int column_n = <computeroutput>-1</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a8e40d2b7a1cdee9d210c7de4cf577f7f"/><section>
    <title>TableSetColumnEnabled()</title>
<indexterm><primary>TableSetColumnEnabled</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TableSetColumnEnabled</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::TableSetColumnEnabled (int column_n, bool v)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1adfbeb33991944035737d413379ae8b1c"/><section>
    <title>TableSetColumnIndex()</title>
<indexterm><primary>TableSetColumnIndex</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TableSetColumnIndex</secondary></indexterm>
<para><computeroutput>bool ImGui::TableSetColumnIndex (int column_n)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a5db8b6e07ea254b0a63e064a64847b99"/><section>
    <title>TableSetColumnSortDirection()</title>
<indexterm><primary>TableSetColumnSortDirection</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TableSetColumnSortDirection</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::TableSetColumnSortDirection (int column_n, <link linkend="_imgui_8h_1ac8994dbafc20fc81077ee64574ab648e">ImGuiSortDirection</link> sort_direction, bool append_to_sort_specs)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a8f8f11d2ca0e94811ce10a7258283d38"/><section>
    <title>TableSetColumnWidth()</title>
<indexterm><primary>TableSetColumnWidth</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TableSetColumnWidth</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::TableSetColumnWidth (int column_n, float width)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a772b157564e3624de66e0f86b0ed3f37"/><section>
    <title>TableSetColumnWidthAutoAll()</title>
<indexterm><primary>TableSetColumnWidthAutoAll</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TableSetColumnWidthAutoAll</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::TableSetColumnWidthAutoAll (<link linkend="_struct_im_gui_table">ImGuiTable</link> * table)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a7db13485f1945070e9de98facafe7e1d"/><section>
    <title>TableSetColumnWidthAutoSingle()</title>
<indexterm><primary>TableSetColumnWidthAutoSingle</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TableSetColumnWidthAutoSingle</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::TableSetColumnWidthAutoSingle (<link linkend="_struct_im_gui_table">ImGuiTable</link> * table, int column_n)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a49786e01457877baef3eb8c01eca38d1"/><section>
    <title>TableSettingsAddSettingsHandler()</title>
<indexterm><primary>TableSettingsAddSettingsHandler</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TableSettingsAddSettingsHandler</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::TableSettingsAddSettingsHandler ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a627a6a9580dc916a0a273afc16cefc19"/><section>
    <title>TableSettingsCreate()</title>
<indexterm><primary>TableSettingsCreate</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TableSettingsCreate</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_gui_table_settings">ImGuiTableSettings</link> * ImGui::TableSettingsCreate (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id, int columns_count)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a8884e5118f923137c19aee0d84a438c9"/><section>
    <title>TableSettingsFindByID()</title>
<indexterm><primary>TableSettingsFindByID</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TableSettingsFindByID</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_gui_table_settings">ImGuiTableSettings</link> * ImGui::TableSettingsFindByID (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a4ac0fd352082b1aa9a2a5a1dedcf5b89"/><section>
    <title>TableSetupColumn()</title>
<indexterm><primary>TableSetupColumn</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TableSetupColumn</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::TableSetupColumn (const char * label, <link linkend="_imgui_8h_1afa2ab8df5653f1cc944f6cbc156bf874">ImGuiTableColumnFlags</link> flags = <computeroutput>0</computeroutput>
, float init_width_or_weight = <computeroutput>0.0f</computeroutput>
, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> user_id = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aa15ef562cd5d5166e9774472fc6d10c6"/><section>
    <title>TableSetupDrawChannels()</title>
<indexterm><primary>TableSetupDrawChannels</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TableSetupDrawChannels</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::TableSetupDrawChannels (<link linkend="_struct_im_gui_table">ImGuiTable</link> * table)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a3be97defe1cb195b220dccac4e9d3084"/><section>
    <title>TableSetupScrollFreeze()</title>
<indexterm><primary>TableSetupScrollFreeze</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TableSetupScrollFreeze</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::TableSetupScrollFreeze (int cols, int rows)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a045bb5e3e5947c10260a4889b50e3e35"/><section>
    <title>TableSortSpecsBuild()</title>
<indexterm><primary>TableSortSpecsBuild</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TableSortSpecsBuild</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::TableSortSpecsBuild (<link linkend="_struct_im_gui_table">ImGuiTable</link> * table)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a8c143be9781a6262c69019c7b6a03f22"/><section>
    <title>TableSortSpecsSanitize()</title>
<indexterm><primary>TableSortSpecsSanitize</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TableSortSpecsSanitize</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::TableSortSpecsSanitize (<link linkend="_struct_im_gui_table">ImGuiTable</link> * table)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a339483446800bd4c7d2e4f5683e21de0"/><section>
    <title>TableUpdateBorders()</title>
<indexterm><primary>TableUpdateBorders</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TableUpdateBorders</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::TableUpdateBorders (<link linkend="_struct_im_gui_table">ImGuiTable</link> * table)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aea40bc669cc8c0ef92617df8616d1e61"/><section>
    <title>TableUpdateColumnsWeightFromWidth()</title>
<indexterm><primary>TableUpdateColumnsWeightFromWidth</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TableUpdateColumnsWeightFromWidth</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::TableUpdateColumnsWeightFromWidth (<link linkend="_struct_im_gui_table">ImGuiTable</link> * table)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a890d76a0ec9efc98765c226884e3e32a"/><section>
    <title>TableUpdateLayout()</title>
<indexterm><primary>TableUpdateLayout</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TableUpdateLayout</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::TableUpdateLayout (<link linkend="_struct_im_gui_table">ImGuiTable</link> * table)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ae4b35762bf1316a466de15c1f1401853"/><section>
    <title>TeleportMousePos()</title>
<indexterm><primary>TeleportMousePos</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TeleportMousePos</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::TeleportMousePos (const <link linkend="_struct_im_vec2">ImVec2</link> &amp; pos)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a4e5c8dd9a681f3b8f8f36b07d84ae0e5"/><section>
    <title>TempInputIsActive()</title>
<indexterm><primary>TempInputIsActive</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TempInputIsActive</secondary></indexterm>
<para><computeroutput>bool ImGui::TempInputIsActive (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a392fed3e7db2a75abf217bf84c6abce9"/><section>
    <title>TempInputScalar()</title>
<indexterm><primary>TempInputScalar</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TempInputScalar</secondary></indexterm>
<para><computeroutput>bool ImGui::TempInputScalar (const <link linkend="_struct_im_rect">ImRect</link> &amp; bb, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id, const char * label, <link linkend="_imgui_8h_1a4cfa8697a3d76722fff83eb18922e9d5">ImGuiDataType</link> data_type, <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * p_data, const char * format, const <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * p_clamp_min = <computeroutput>NULL</computeroutput>
, const <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * p_clamp_max = <computeroutput>NULL</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ae85def71d2fcf5409035b583b315964e"/><section>
    <title>TempInputText()</title>
<indexterm><primary>TempInputText</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TempInputText</secondary></indexterm>
<para><computeroutput>bool ImGui::TempInputText (const <link linkend="_struct_im_rect">ImRect</link> &amp; bb, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id, const char * label, char * buf, int buf_size, <link linkend="_imgui_8h_1a7d2c6153a6b9b5d3178ce82434ac9fb8">ImGuiInputTextFlags</link> flags)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ad12c5be2f1c691e4e6656524248824fb"/><section>
    <title>TestKeyOwner()</title>
<indexterm><primary>TestKeyOwner</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TestKeyOwner</secondary></indexterm>
<para><computeroutput>bool ImGui::TestKeyOwner (<link linkend="_imgui_8h_1aa22ffe36b188427d712447ec465203d4">ImGuiKey</link> key, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> owner_id)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a2d00bcc9bae982fb89d07f2734f6ab36"/><section>
    <title>TestShortcutRouting()</title>
<indexterm><primary>TestShortcutRouting</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TestShortcutRouting</secondary></indexterm>
<para><computeroutput>bool ImGui::TestShortcutRouting (<link linkend="_imgui_8h_1a0720c04fed27e0f01b3722a13c8a8762">ImGuiKeyChord</link> key_chord, <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> owner_id)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a9e7b83611fe441d54fad2effb4bf4965"/><section>
    <title>Text()</title>
<indexterm><primary>Text</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>Text</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::Text (const char * fmt,  ...)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a36ab8fcad68b26863d6e910755de04c2"/><section>
    <title>TextColored()</title>
<indexterm><primary>TextColored</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TextColored</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::TextColored (const <link linkend="_struct_im_vec4">ImVec4</link> &amp; col, const char * fmt,  ...)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a87c24ece994188a7145d8feecb4439ed"/><section>
    <title>TextColoredV()</title>
<indexterm><primary>TextColoredV</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TextColoredV</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::TextColoredV (const <link linkend="_struct_im_vec4">ImVec4</link> &amp; col, const char * fmt, va_list args)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aa96bf14c5fa288e106820aeb4ba7fcb6"/><section>
    <title>TextDisabled()</title>
<indexterm><primary>TextDisabled</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TextDisabled</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::TextDisabled (const char * fmt,  ...)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a5b128d4f12d7e33e95fb9cef7dce027e"/><section>
    <title>TextDisabledV()</title>
<indexterm><primary>TextDisabledV</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TextDisabledV</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::TextDisabledV (const char * fmt, va_list args)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aae6420fec03511fd478d9108f31e6b5f"/><section>
    <title>TextEx()</title>
<indexterm><primary>TextEx</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TextEx</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::TextEx (const char * text, const char * text_end = <computeroutput>NULL</computeroutput>
, <link linkend="_imgui__internal_8h_1af5a78082b7812985fff78923206b7488">ImGuiTextFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a96a5f42789ecc419b2ae8af7b2acc28e"/><section>
    <title>TextUnformatted()</title>
<indexterm><primary>TextUnformatted</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TextUnformatted</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::TextUnformatted (const char * text, const char * text_end = <computeroutput>NULL</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a10a0d6362178c2f743092f21e1b6cd20"/><section>
    <title>TextV()</title>
<indexterm><primary>TextV</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TextV</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::TextV (const char * fmt, va_list args)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ad57bb15c599e73b2ccc7c0f7de6e5823"/><section>
    <title>TextWrapped()</title>
<indexterm><primary>TextWrapped</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TextWrapped</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::TextWrapped (const char * fmt,  ...)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a9019a388cd0c410bcb3d3ae63a008123"/><section>
    <title>TextWrappedV()</title>
<indexterm><primary>TextWrappedV</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TextWrappedV</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::TextWrappedV (const char * fmt, va_list args)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ac823fa647f6e56e15b06b47f09b33665"/><section>
    <title>TranslateWindowsInViewport()</title>
<indexterm><primary>TranslateWindowsInViewport</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TranslateWindowsInViewport</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::TranslateWindowsInViewport (<link linkend="_struct_im_gui_viewport_p">ImGuiViewportP</link> * viewport, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; old_pos, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; new_pos)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a4dff507ce8bbe0da9556bb50b1e60d7f"/><section>
    <title>TreeNode()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>TreeNode</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TreeNode</secondary></indexterm>
<para><computeroutput>bool ImGui::TreeNode (const char * label)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a6e6e4de20291002430854cbd8cd58843"/><section>
    <title>TreeNode()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>TreeNode</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TreeNode</secondary></indexterm>
<para><computeroutput>bool ImGui::TreeNode (const char * str_id, const char * fmt,  ...)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a47f1421323f90fdd0a9cbfea2338b10f"/><section>
    <title>TreeNode()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>TreeNode</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TreeNode</secondary></indexterm>
<para><computeroutput>bool ImGui::TreeNode (const <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * ptr_id, const char * fmt,  ...)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a918eabf70d288e93b2519ee1eac2c0b4"/><section>
    <title>TreeNodeBehavior()</title>
<indexterm><primary>TreeNodeBehavior</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TreeNodeBehavior</secondary></indexterm>
<para><computeroutput>bool ImGui::TreeNodeBehavior (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id, <link linkend="_imgui_8h_1a0588fdd10c59b49a0159484fe9ec4564">ImGuiTreeNodeFlags</link> flags, const char * label, const char * label_end = <computeroutput>NULL</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a22cc50485aad6da8a3a4e156b500ed4a"/><section>
    <title>TreeNodeBehaviorIsOpen()</title>
<indexterm><primary>TreeNodeBehaviorIsOpen</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TreeNodeBehaviorIsOpen</secondary></indexterm>
<para><computeroutput>bool ImGui::TreeNodeBehaviorIsOpen (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id, <link linkend="_imgui_8h_1a0588fdd10c59b49a0159484fe9ec4564">ImGuiTreeNodeFlags</link> flags = <computeroutput>0</computeroutput>
)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a21f62e092dac9556a15a8edee2f70522"/><section>
    <title>TreeNodeEx()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>TreeNodeEx</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TreeNodeEx</secondary></indexterm>
<para><computeroutput>bool ImGui::TreeNodeEx (const char * label, <link linkend="_imgui_8h_1a0588fdd10c59b49a0159484fe9ec4564">ImGuiTreeNodeFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a9ca2fae922b38cfddc3259f874c18a5d"/><section>
    <title>TreeNodeEx()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>TreeNodeEx</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TreeNodeEx</secondary></indexterm>
<para><computeroutput>bool ImGui::TreeNodeEx (const char * str_id, <link linkend="_imgui_8h_1a0588fdd10c59b49a0159484fe9ec4564">ImGuiTreeNodeFlags</link> flags, const char * fmt,  ...)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1adce362ad94baa9b00f5914cbcab00452"/><section>
    <title>TreeNodeEx()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>TreeNodeEx</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TreeNodeEx</secondary></indexterm>
<para><computeroutput>bool ImGui::TreeNodeEx (const <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * ptr_id, <link linkend="_imgui_8h_1a0588fdd10c59b49a0159484fe9ec4564">ImGuiTreeNodeFlags</link> flags, const char * fmt,  ...)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a251cd4acbdad4cef2246d9b573a83ce0"/><section>
    <title>TreeNodeExV()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>TreeNodeExV</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TreeNodeExV</secondary></indexterm>
<para><computeroutput>bool ImGui::TreeNodeExV (const char * str_id, <link linkend="_imgui_8h_1a0588fdd10c59b49a0159484fe9ec4564">ImGuiTreeNodeFlags</link> flags, const char * fmt, va_list args)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aaae827898572d17e064a88a1afc8e6b0"/><section>
    <title>TreeNodeExV()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>TreeNodeExV</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TreeNodeExV</secondary></indexterm>
<para><computeroutput>bool ImGui::TreeNodeExV (const <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * ptr_id, <link linkend="_imgui_8h_1a0588fdd10c59b49a0159484fe9ec4564">ImGuiTreeNodeFlags</link> flags, const char * fmt, va_list args)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ad27861dfbbbef294034215acb3834125"/><section>
    <title>TreeNodeSetOpen()</title>
<indexterm><primary>TreeNodeSetOpen</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TreeNodeSetOpen</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::TreeNodeSetOpen (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id, bool open)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a75b8642d7b115fa42a211bc31f395665"/><section>
    <title>TreeNodeUpdateNextOpen()</title>
<indexterm><primary>TreeNodeUpdateNextOpen</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TreeNodeUpdateNextOpen</secondary></indexterm>
<para><computeroutput>bool ImGui::TreeNodeUpdateNextOpen (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id, <link linkend="_imgui_8h_1a0588fdd10c59b49a0159484fe9ec4564">ImGuiTreeNodeFlags</link> flags)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a9bc1075c583973d76d8d65ea89787453"/><section>
    <title>TreeNodeV()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>TreeNodeV</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TreeNodeV</secondary></indexterm>
<para><computeroutput>bool ImGui::TreeNodeV (const char * str_id, const char * fmt, va_list args)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a15320f61ba6b4916af3323bf7844602e"/><section>
    <title>TreeNodeV()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>TreeNodeV</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TreeNodeV</secondary></indexterm>
<para><computeroutput>bool ImGui::TreeNodeV (const <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * ptr_id, const char * fmt, va_list args)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a41ecf265e5f678c78fc9c30b3cf2077f"/><section>
    <title>TreePop()</title>
<indexterm><primary>TreePop</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TreePop</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::TreePop ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a30b5df3be04a6e712985612bbdea6656"/><section>
    <title>TreePush()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>TreePush</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TreePush</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::TreePush (const char * str_id)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aaaedbc7778152061af89f542f3e3402e"/><section>
    <title>TreePush()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>TreePush</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TreePush</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::TreePush (const <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * ptr_id)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ad3c4846b9f47fc66556333fe52406ffb"/><section>
    <title>TreePushOverrideID()</title>
<indexterm><primary>TreePushOverrideID</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TreePushOverrideID</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::TreePushOverrideID (<link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> id)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1acb850fb78a02ecd78c256730c8b712aa"/><section>
    <title>TypingSelectFindBestLeadingMatch()</title>
<indexterm><primary>TypingSelectFindBestLeadingMatch</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TypingSelectFindBestLeadingMatch</secondary></indexterm>
<para><computeroutput>int ImGui::TypingSelectFindBestLeadingMatch (<link linkend="_struct_im_gui_typing_select_request">ImGuiTypingSelectRequest</link> * req, int items_count, const char *(*)(<link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *, int) get_item_name_func, <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * user_data)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a8650c2ec1a532a5b7d67975716c5a90b"/><section>
    <title>TypingSelectFindMatch()</title>
<indexterm><primary>TypingSelectFindMatch</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TypingSelectFindMatch</secondary></indexterm>
<para><computeroutput>int ImGui::TypingSelectFindMatch (<link linkend="_struct_im_gui_typing_select_request">ImGuiTypingSelectRequest</link> * req, int items_count, const char *(*)(<link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *, int) get_item_name_func, <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * user_data, int nav_item_idx)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a370869a016f66fb90750a72d5f7bcbd2"/><section>
    <title>TypingSelectFindNextSingleCharMatch()</title>
<indexterm><primary>TypingSelectFindNextSingleCharMatch</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>TypingSelectFindNextSingleCharMatch</secondary></indexterm>
<para><computeroutput>int ImGui::TypingSelectFindNextSingleCharMatch (<link linkend="_struct_im_gui_typing_select_request">ImGuiTypingSelectRequest</link> * req, int items_count, const char *(*)(<link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> *, int) get_item_name_func, <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * user_data, int nav_item_idx)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1ad577d36753634c9bbdc3750b0e5217f5"/><section>
    <title>Unindent()</title>
<indexterm><primary>Unindent</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>Unindent</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::Unindent (float indent_w = <computeroutput>0.0f</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a8156f9d63c3184d40e7e303be175b5fb"/><section>
    <title>UpdateHoveredWindowAndCaptureFlags()</title>
<indexterm><primary>UpdateHoveredWindowAndCaptureFlags</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>UpdateHoveredWindowAndCaptureFlags</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::UpdateHoveredWindowAndCaptureFlags ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aafed9b47752723162308368c01eeffad"/><section>
    <title>UpdateInputEvents()</title>
<indexterm><primary>UpdateInputEvents</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>UpdateInputEvents</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::UpdateInputEvents (bool trickle_fast_inputs)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a6f56217f28aff3a7cea846e6f44eebff"/><section>
    <title>UpdateMouseMovingWindowEndFrame()</title>
<indexterm><primary>UpdateMouseMovingWindowEndFrame</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>UpdateMouseMovingWindowEndFrame</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::UpdateMouseMovingWindowEndFrame ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a3c60e468d73a0ccd52628f0c82b42fe8"/><section>
    <title>UpdateMouseMovingWindowNewFrame()</title>
<indexterm><primary>UpdateMouseMovingWindowNewFrame</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>UpdateMouseMovingWindowNewFrame</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::UpdateMouseMovingWindowNewFrame ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aec5bbce3200aa681dac6a1915ef07f60"/><section>
    <title>UpdatePlatformWindows()</title>
<indexterm><primary>UpdatePlatformWindows</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>UpdatePlatformWindows</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::UpdatePlatformWindows ( )</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a85d7262320ed7ce8e40863b99f8db4a3"/><section>
    <title>UpdateWindowParentAndRootLinks()</title>
<indexterm><primary>UpdateWindowParentAndRootLinks</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>UpdateWindowParentAndRootLinks</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::UpdateWindowParentAndRootLinks (<link linkend="_struct_im_gui_window">ImGuiWindow</link> * window, <link linkend="_imgui_8h_1a0b8e067ab4f7a818828c8d89e531addc">ImGuiWindowFlags</link> flags, <link linkend="_struct_im_gui_window">ImGuiWindow</link> * parent_window)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a1b3324308e43eeded5c3599fa0f03e85"/><section>
    <title>Value()<computeroutput>[1/4]</computeroutput></title>
<indexterm><primary>Value</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>Value</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::Value (const char * prefix, bool b)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a0c8b87438082a1d0a46ae2a76090ca16"/><section>
    <title>Value()<computeroutput>[2/4]</computeroutput></title>
<indexterm><primary>Value</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>Value</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::Value (const char * prefix, float v, const char * float_format = <computeroutput>NULL</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a654ceb70f2dd1598f88861f54764ee08"/><section>
    <title>Value()<computeroutput>[3/4]</computeroutput></title>
<indexterm><primary>Value</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>Value</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::Value (const char * prefix, int v)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1aec80a3e35bf7c1ff5704334e5a3ebd5a"/><section>
    <title>Value()<computeroutput>[4/4]</computeroutput></title>
<indexterm><primary>Value</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>Value</secondary></indexterm>
<para><computeroutput><link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> ImGui::Value (const char * prefix, unsigned int v)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a990332e589b828093786bbc007b9bfda"/><section>
    <title>VSliderFloat()</title>
<indexterm><primary>VSliderFloat</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>VSliderFloat</secondary></indexterm>
<para><computeroutput>bool ImGui::VSliderFloat (const char * label, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; size, float * v, float v_min, float v_max, const char * format = <computeroutput>&quot;%.3f&quot;</computeroutput>
, <link linkend="_imgui_8h_1a50cc3e3e4beb155e2186f8c1dc057e18">ImGuiSliderFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a3cf7cf500353bf13250e29d788bd3fff"/><section>
    <title>VSliderInt()</title>
<indexterm><primary>VSliderInt</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>VSliderInt</secondary></indexterm>
<para><computeroutput>bool ImGui::VSliderInt (const char * label, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; size, int * v, int v_min, int v_max, const char * format = <computeroutput>&quot;%d&quot;</computeroutput>
, <link linkend="_imgui_8h_1a50cc3e3e4beb155e2186f8c1dc057e18">ImGuiSliderFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a6ad24ca37a530d43f9d1c727d94e4829"/><section>
    <title>VSliderScalar()</title>
<indexterm><primary>VSliderScalar</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>VSliderScalar</secondary></indexterm>
<para><computeroutput>bool ImGui::VSliderScalar (const char * label, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; size, <link linkend="_imgui_8h_1a4cfa8697a3d76722fff83eb18922e9d5">ImGuiDataType</link> data_type, <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * p_data, const <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * p_min, const <link linkend="_gl__core__4__4_8c_1aba83f95e8ff4889aa9d4905633fca4da">void</link> * p_max, const char * format = <computeroutput>NULL</computeroutput>
, <link linkend="_imgui_8h_1a50cc3e3e4beb155e2186f8c1dc057e18">ImGuiSliderFlags</link> flags = <computeroutput>0</computeroutput>
)</computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a7e0c722c925ab942261618abd18b1dc9"/><section>
    <title>WindowPosRelToAbs()</title>
<indexterm><primary>WindowPosRelToAbs</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>WindowPosRelToAbs</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_vec2">ImVec2</link> ImGui::WindowPosRelToAbs (<link linkend="_struct_im_gui_window">ImGuiWindow</link> * window, const <link linkend="_struct_im_vec2">ImVec2</link> &amp; p)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a06d8e9fae450c785dc8f61f6e03462a7"/><section>
    <title>WindowRectAbsToRel()</title>
<indexterm><primary>WindowRectAbsToRel</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>WindowRectAbsToRel</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_rect">ImRect</link> ImGui::WindowRectAbsToRel (<link linkend="_struct_im_gui_window">ImGuiWindow</link> * window, const <link linkend="_struct_im_rect">ImRect</link> &amp; r)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_namespace_im_gui_1a10d8f47027c5bea2da6d5792ada70a7f"/><section>
    <title>WindowRectRelToAbs()</title>
<indexterm><primary>WindowRectRelToAbs</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>WindowRectRelToAbs</secondary></indexterm>
<para><computeroutput><link linkend="_struct_im_rect">ImRect</link> ImGui::WindowRectRelToAbs (<link linkend="_struct_im_gui_window">ImGuiWindow</link> * window, const <link linkend="_struct_im_rect">ImRect</link> &amp; r)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Variable Documentation</title>
<anchor xml:id="_namespace_im_gui_1aa7a318e32bff29010e015a15ab6b6067"/><section>
    <title>IMGUI_VIEWPORT_DEFAULT_ID</title>
<indexterm><primary>IMGUI_VIEWPORT_DEFAULT_ID</primary><secondary>ImGui</secondary></indexterm>
<indexterm><primary>ImGui</primary><secondary>IMGUI_VIEWPORT_DEFAULT_ID</secondary></indexterm>
<para><computeroutput>const <link linkend="_imgui_8h_1a1785c9b6f4e16406764a85f32582236f">ImGuiID</link> ImGui::IMGUI_VIEWPORT_DEFAULT_ID = 0x11111111</computeroutput></para></section>
</section>
</section>
